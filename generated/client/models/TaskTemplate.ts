
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `TaskTemplate` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model TaskTemplate
 * 
 */
export type TaskTemplateModel = runtime.Types.Result.DefaultSelection<Prisma.$TaskTemplatePayload>

export type AggregateTaskTemplate = {
  _count: TaskTemplateCountAggregateOutputType | null
  _avg: TaskTemplateAvgAggregateOutputType | null
  _sum: TaskTemplateSumAggregateOutputType | null
  _min: TaskTemplateMinAggregateOutputType | null
  _max: TaskTemplateMaxAggregateOutputType | null
}

export type TaskTemplateAvgAggregateOutputType = {
  estimatedDuration: number | null
  leadTimeHours: number | null
  sequenceOrder: number | null
}

export type TaskTemplateSumAggregateOutputType = {
  estimatedDuration: number | null
  leadTimeHours: number | null
  sequenceOrder: number | null
}

export type TaskTemplateMinAggregateOutputType = {
  id: string | null
  productId: string | null
  name: string | null
  description: string | null
  category: string | null
  estimatedDuration: number | null
  leadTimeHours: number | null
  sequenceOrder: number | null
  requiredRole: string | null
  triggerCondition: $Enums.TaskTriggerCondition | null
  isMandatory: boolean | null
  requiresCompletionBeforeNext: boolean | null
  autoAssignToRole: string | null
  notes: string | null
  isActive: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type TaskTemplateMaxAggregateOutputType = {
  id: string | null
  productId: string | null
  name: string | null
  description: string | null
  category: string | null
  estimatedDuration: number | null
  leadTimeHours: number | null
  sequenceOrder: number | null
  requiredRole: string | null
  triggerCondition: $Enums.TaskTriggerCondition | null
  isMandatory: boolean | null
  requiresCompletionBeforeNext: boolean | null
  autoAssignToRole: string | null
  notes: string | null
  isActive: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type TaskTemplateCountAggregateOutputType = {
  id: number
  productId: number
  name: number
  description: number
  category: number
  estimatedDuration: number
  leadTimeHours: number
  sequenceOrder: number
  requiredRole: number
  triggerCondition: number
  isMandatory: number
  requiresCompletionBeforeNext: number
  autoAssignToRole: number
  notes: number
  isActive: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type TaskTemplateAvgAggregateInputType = {
  estimatedDuration?: true
  leadTimeHours?: true
  sequenceOrder?: true
}

export type TaskTemplateSumAggregateInputType = {
  estimatedDuration?: true
  leadTimeHours?: true
  sequenceOrder?: true
}

export type TaskTemplateMinAggregateInputType = {
  id?: true
  productId?: true
  name?: true
  description?: true
  category?: true
  estimatedDuration?: true
  leadTimeHours?: true
  sequenceOrder?: true
  requiredRole?: true
  triggerCondition?: true
  isMandatory?: true
  requiresCompletionBeforeNext?: true
  autoAssignToRole?: true
  notes?: true
  isActive?: true
  createdAt?: true
  updatedAt?: true
}

export type TaskTemplateMaxAggregateInputType = {
  id?: true
  productId?: true
  name?: true
  description?: true
  category?: true
  estimatedDuration?: true
  leadTimeHours?: true
  sequenceOrder?: true
  requiredRole?: true
  triggerCondition?: true
  isMandatory?: true
  requiresCompletionBeforeNext?: true
  autoAssignToRole?: true
  notes?: true
  isActive?: true
  createdAt?: true
  updatedAt?: true
}

export type TaskTemplateCountAggregateInputType = {
  id?: true
  productId?: true
  name?: true
  description?: true
  category?: true
  estimatedDuration?: true
  leadTimeHours?: true
  sequenceOrder?: true
  requiredRole?: true
  triggerCondition?: true
  isMandatory?: true
  requiresCompletionBeforeNext?: true
  autoAssignToRole?: true
  notes?: true
  isActive?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type TaskTemplateAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which TaskTemplate to aggregate.
   */
  where?: Prisma.TaskTemplateWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TaskTemplates to fetch.
   */
  orderBy?: Prisma.TaskTemplateOrderByWithRelationInput | Prisma.TaskTemplateOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.TaskTemplateWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TaskTemplates from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TaskTemplates.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned TaskTemplates
  **/
  _count?: true | TaskTemplateCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: TaskTemplateAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: TaskTemplateSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: TaskTemplateMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: TaskTemplateMaxAggregateInputType
}

export type GetTaskTemplateAggregateType<T extends TaskTemplateAggregateArgs> = {
      [P in keyof T & keyof AggregateTaskTemplate]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateTaskTemplate[P]>
    : Prisma.GetScalarType<T[P], AggregateTaskTemplate[P]>
}




export type TaskTemplateGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TaskTemplateWhereInput
  orderBy?: Prisma.TaskTemplateOrderByWithAggregationInput | Prisma.TaskTemplateOrderByWithAggregationInput[]
  by: Prisma.TaskTemplateScalarFieldEnum[] | Prisma.TaskTemplateScalarFieldEnum
  having?: Prisma.TaskTemplateScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: TaskTemplateCountAggregateInputType | true
  _avg?: TaskTemplateAvgAggregateInputType
  _sum?: TaskTemplateSumAggregateInputType
  _min?: TaskTemplateMinAggregateInputType
  _max?: TaskTemplateMaxAggregateInputType
}

export type TaskTemplateGroupByOutputType = {
  id: string
  productId: string
  name: string
  description: string | null
  category: string | null
  estimatedDuration: number
  leadTimeHours: number
  sequenceOrder: number
  requiredRole: string | null
  triggerCondition: $Enums.TaskTriggerCondition
  isMandatory: boolean
  requiresCompletionBeforeNext: boolean
  autoAssignToRole: string | null
  notes: string | null
  isActive: boolean
  createdAt: Date
  updatedAt: Date
  _count: TaskTemplateCountAggregateOutputType | null
  _avg: TaskTemplateAvgAggregateOutputType | null
  _sum: TaskTemplateSumAggregateOutputType | null
  _min: TaskTemplateMinAggregateOutputType | null
  _max: TaskTemplateMaxAggregateOutputType | null
}

type GetTaskTemplateGroupByPayload<T extends TaskTemplateGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<TaskTemplateGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof TaskTemplateGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], TaskTemplateGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], TaskTemplateGroupByOutputType[P]>
      }
    >
  > 



export type TaskTemplateWhereInput = {
  AND?: Prisma.TaskTemplateWhereInput | Prisma.TaskTemplateWhereInput[]
  OR?: Prisma.TaskTemplateWhereInput[]
  NOT?: Prisma.TaskTemplateWhereInput | Prisma.TaskTemplateWhereInput[]
  id?: Prisma.StringFilter<"TaskTemplate"> | string
  productId?: Prisma.StringFilter<"TaskTemplate"> | string
  name?: Prisma.StringFilter<"TaskTemplate"> | string
  description?: Prisma.StringNullableFilter<"TaskTemplate"> | string | null
  category?: Prisma.StringNullableFilter<"TaskTemplate"> | string | null
  estimatedDuration?: Prisma.IntFilter<"TaskTemplate"> | number
  leadTimeHours?: Prisma.IntFilter<"TaskTemplate"> | number
  sequenceOrder?: Prisma.IntFilter<"TaskTemplate"> | number
  requiredRole?: Prisma.StringNullableFilter<"TaskTemplate"> | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFilter<"TaskTemplate"> | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFilter<"TaskTemplate"> | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFilter<"TaskTemplate"> | boolean
  autoAssignToRole?: Prisma.StringNullableFilter<"TaskTemplate"> | string | null
  notes?: Prisma.StringNullableFilter<"TaskTemplate"> | string | null
  isActive?: Prisma.BoolFilter<"TaskTemplate"> | boolean
  createdAt?: Prisma.DateTimeFilter<"TaskTemplate"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"TaskTemplate"> | Date | string
  product?: Prisma.XOR<Prisma.ProductScalarRelationFilter, Prisma.ProductWhereInput>
  tasks?: Prisma.TaskListRelationFilter
}

export type TaskTemplateOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  category?: Prisma.SortOrderInput | Prisma.SortOrder
  estimatedDuration?: Prisma.SortOrder
  leadTimeHours?: Prisma.SortOrder
  sequenceOrder?: Prisma.SortOrder
  requiredRole?: Prisma.SortOrderInput | Prisma.SortOrder
  triggerCondition?: Prisma.SortOrder
  isMandatory?: Prisma.SortOrder
  requiresCompletionBeforeNext?: Prisma.SortOrder
  autoAssignToRole?: Prisma.SortOrderInput | Prisma.SortOrder
  notes?: Prisma.SortOrderInput | Prisma.SortOrder
  isActive?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  product?: Prisma.ProductOrderByWithRelationInput
  tasks?: Prisma.TaskOrderByRelationAggregateInput
}

export type TaskTemplateWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.TaskTemplateWhereInput | Prisma.TaskTemplateWhereInput[]
  OR?: Prisma.TaskTemplateWhereInput[]
  NOT?: Prisma.TaskTemplateWhereInput | Prisma.TaskTemplateWhereInput[]
  productId?: Prisma.StringFilter<"TaskTemplate"> | string
  name?: Prisma.StringFilter<"TaskTemplate"> | string
  description?: Prisma.StringNullableFilter<"TaskTemplate"> | string | null
  category?: Prisma.StringNullableFilter<"TaskTemplate"> | string | null
  estimatedDuration?: Prisma.IntFilter<"TaskTemplate"> | number
  leadTimeHours?: Prisma.IntFilter<"TaskTemplate"> | number
  sequenceOrder?: Prisma.IntFilter<"TaskTemplate"> | number
  requiredRole?: Prisma.StringNullableFilter<"TaskTemplate"> | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFilter<"TaskTemplate"> | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFilter<"TaskTemplate"> | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFilter<"TaskTemplate"> | boolean
  autoAssignToRole?: Prisma.StringNullableFilter<"TaskTemplate"> | string | null
  notes?: Prisma.StringNullableFilter<"TaskTemplate"> | string | null
  isActive?: Prisma.BoolFilter<"TaskTemplate"> | boolean
  createdAt?: Prisma.DateTimeFilter<"TaskTemplate"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"TaskTemplate"> | Date | string
  product?: Prisma.XOR<Prisma.ProductScalarRelationFilter, Prisma.ProductWhereInput>
  tasks?: Prisma.TaskListRelationFilter
}, "id">

export type TaskTemplateOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  category?: Prisma.SortOrderInput | Prisma.SortOrder
  estimatedDuration?: Prisma.SortOrder
  leadTimeHours?: Prisma.SortOrder
  sequenceOrder?: Prisma.SortOrder
  requiredRole?: Prisma.SortOrderInput | Prisma.SortOrder
  triggerCondition?: Prisma.SortOrder
  isMandatory?: Prisma.SortOrder
  requiresCompletionBeforeNext?: Prisma.SortOrder
  autoAssignToRole?: Prisma.SortOrderInput | Prisma.SortOrder
  notes?: Prisma.SortOrderInput | Prisma.SortOrder
  isActive?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.TaskTemplateCountOrderByAggregateInput
  _avg?: Prisma.TaskTemplateAvgOrderByAggregateInput
  _max?: Prisma.TaskTemplateMaxOrderByAggregateInput
  _min?: Prisma.TaskTemplateMinOrderByAggregateInput
  _sum?: Prisma.TaskTemplateSumOrderByAggregateInput
}

export type TaskTemplateScalarWhereWithAggregatesInput = {
  AND?: Prisma.TaskTemplateScalarWhereWithAggregatesInput | Prisma.TaskTemplateScalarWhereWithAggregatesInput[]
  OR?: Prisma.TaskTemplateScalarWhereWithAggregatesInput[]
  NOT?: Prisma.TaskTemplateScalarWhereWithAggregatesInput | Prisma.TaskTemplateScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"TaskTemplate"> | string
  productId?: Prisma.StringWithAggregatesFilter<"TaskTemplate"> | string
  name?: Prisma.StringWithAggregatesFilter<"TaskTemplate"> | string
  description?: Prisma.StringNullableWithAggregatesFilter<"TaskTemplate"> | string | null
  category?: Prisma.StringNullableWithAggregatesFilter<"TaskTemplate"> | string | null
  estimatedDuration?: Prisma.IntWithAggregatesFilter<"TaskTemplate"> | number
  leadTimeHours?: Prisma.IntWithAggregatesFilter<"TaskTemplate"> | number
  sequenceOrder?: Prisma.IntWithAggregatesFilter<"TaskTemplate"> | number
  requiredRole?: Prisma.StringNullableWithAggregatesFilter<"TaskTemplate"> | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionWithAggregatesFilter<"TaskTemplate"> | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolWithAggregatesFilter<"TaskTemplate"> | boolean
  requiresCompletionBeforeNext?: Prisma.BoolWithAggregatesFilter<"TaskTemplate"> | boolean
  autoAssignToRole?: Prisma.StringNullableWithAggregatesFilter<"TaskTemplate"> | string | null
  notes?: Prisma.StringNullableWithAggregatesFilter<"TaskTemplate"> | string | null
  isActive?: Prisma.BoolWithAggregatesFilter<"TaskTemplate"> | boolean
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"TaskTemplate"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"TaskTemplate"> | Date | string
}

export type TaskTemplateCreateInput = {
  id?: string
  name: string
  description?: string | null
  category?: string | null
  estimatedDuration: number
  leadTimeHours?: number
  sequenceOrder?: number
  requiredRole?: string | null
  triggerCondition: $Enums.TaskTriggerCondition
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: string | null
  notes?: string | null
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  product: Prisma.ProductCreateNestedOneWithoutTaskTemplatesInput
  tasks?: Prisma.TaskCreateNestedManyWithoutTemplateInput
}

export type TaskTemplateUncheckedCreateInput = {
  id?: string
  productId: string
  name: string
  description?: string | null
  category?: string | null
  estimatedDuration: number
  leadTimeHours?: number
  sequenceOrder?: number
  requiredRole?: string | null
  triggerCondition: $Enums.TaskTriggerCondition
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: string | null
  notes?: string | null
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutTemplateInput
}

export type TaskTemplateUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  estimatedDuration?: Prisma.IntFieldUpdateOperationsInput | number
  leadTimeHours?: Prisma.IntFieldUpdateOperationsInput | number
  sequenceOrder?: Prisma.IntFieldUpdateOperationsInput | number
  requiredRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFieldUpdateOperationsInput | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoAssignToRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  product?: Prisma.ProductUpdateOneRequiredWithoutTaskTemplatesNestedInput
  tasks?: Prisma.TaskUpdateManyWithoutTemplateNestedInput
}

export type TaskTemplateUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  estimatedDuration?: Prisma.IntFieldUpdateOperationsInput | number
  leadTimeHours?: Prisma.IntFieldUpdateOperationsInput | number
  sequenceOrder?: Prisma.IntFieldUpdateOperationsInput | number
  requiredRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFieldUpdateOperationsInput | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoAssignToRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutTemplateNestedInput
}

export type TaskTemplateCreateManyInput = {
  id?: string
  productId: string
  name: string
  description?: string | null
  category?: string | null
  estimatedDuration: number
  leadTimeHours?: number
  sequenceOrder?: number
  requiredRole?: string | null
  triggerCondition: $Enums.TaskTriggerCondition
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: string | null
  notes?: string | null
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type TaskTemplateUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  estimatedDuration?: Prisma.IntFieldUpdateOperationsInput | number
  leadTimeHours?: Prisma.IntFieldUpdateOperationsInput | number
  sequenceOrder?: Prisma.IntFieldUpdateOperationsInput | number
  requiredRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFieldUpdateOperationsInput | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoAssignToRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type TaskTemplateUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  estimatedDuration?: Prisma.IntFieldUpdateOperationsInput | number
  leadTimeHours?: Prisma.IntFieldUpdateOperationsInput | number
  sequenceOrder?: Prisma.IntFieldUpdateOperationsInput | number
  requiredRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFieldUpdateOperationsInput | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoAssignToRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type TaskTemplateListRelationFilter = {
  every?: Prisma.TaskTemplateWhereInput
  some?: Prisma.TaskTemplateWhereInput
  none?: Prisma.TaskTemplateWhereInput
}

export type TaskTemplateOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type TaskTemplateCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  category?: Prisma.SortOrder
  estimatedDuration?: Prisma.SortOrder
  leadTimeHours?: Prisma.SortOrder
  sequenceOrder?: Prisma.SortOrder
  requiredRole?: Prisma.SortOrder
  triggerCondition?: Prisma.SortOrder
  isMandatory?: Prisma.SortOrder
  requiresCompletionBeforeNext?: Prisma.SortOrder
  autoAssignToRole?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type TaskTemplateAvgOrderByAggregateInput = {
  estimatedDuration?: Prisma.SortOrder
  leadTimeHours?: Prisma.SortOrder
  sequenceOrder?: Prisma.SortOrder
}

export type TaskTemplateMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  category?: Prisma.SortOrder
  estimatedDuration?: Prisma.SortOrder
  leadTimeHours?: Prisma.SortOrder
  sequenceOrder?: Prisma.SortOrder
  requiredRole?: Prisma.SortOrder
  triggerCondition?: Prisma.SortOrder
  isMandatory?: Prisma.SortOrder
  requiresCompletionBeforeNext?: Prisma.SortOrder
  autoAssignToRole?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type TaskTemplateMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  category?: Prisma.SortOrder
  estimatedDuration?: Prisma.SortOrder
  leadTimeHours?: Prisma.SortOrder
  sequenceOrder?: Prisma.SortOrder
  requiredRole?: Prisma.SortOrder
  triggerCondition?: Prisma.SortOrder
  isMandatory?: Prisma.SortOrder
  requiresCompletionBeforeNext?: Prisma.SortOrder
  autoAssignToRole?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type TaskTemplateSumOrderByAggregateInput = {
  estimatedDuration?: Prisma.SortOrder
  leadTimeHours?: Prisma.SortOrder
  sequenceOrder?: Prisma.SortOrder
}

export type TaskTemplateNullableScalarRelationFilter = {
  is?: Prisma.TaskTemplateWhereInput | null
  isNot?: Prisma.TaskTemplateWhereInput | null
}

export type TaskTemplateCreateNestedManyWithoutProductInput = {
  create?: Prisma.XOR<Prisma.TaskTemplateCreateWithoutProductInput, Prisma.TaskTemplateUncheckedCreateWithoutProductInput> | Prisma.TaskTemplateCreateWithoutProductInput[] | Prisma.TaskTemplateUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.TaskTemplateCreateOrConnectWithoutProductInput | Prisma.TaskTemplateCreateOrConnectWithoutProductInput[]
  createMany?: Prisma.TaskTemplateCreateManyProductInputEnvelope
  connect?: Prisma.TaskTemplateWhereUniqueInput | Prisma.TaskTemplateWhereUniqueInput[]
}

export type TaskTemplateUncheckedCreateNestedManyWithoutProductInput = {
  create?: Prisma.XOR<Prisma.TaskTemplateCreateWithoutProductInput, Prisma.TaskTemplateUncheckedCreateWithoutProductInput> | Prisma.TaskTemplateCreateWithoutProductInput[] | Prisma.TaskTemplateUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.TaskTemplateCreateOrConnectWithoutProductInput | Prisma.TaskTemplateCreateOrConnectWithoutProductInput[]
  createMany?: Prisma.TaskTemplateCreateManyProductInputEnvelope
  connect?: Prisma.TaskTemplateWhereUniqueInput | Prisma.TaskTemplateWhereUniqueInput[]
}

export type TaskTemplateUpdateManyWithoutProductNestedInput = {
  create?: Prisma.XOR<Prisma.TaskTemplateCreateWithoutProductInput, Prisma.TaskTemplateUncheckedCreateWithoutProductInput> | Prisma.TaskTemplateCreateWithoutProductInput[] | Prisma.TaskTemplateUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.TaskTemplateCreateOrConnectWithoutProductInput | Prisma.TaskTemplateCreateOrConnectWithoutProductInput[]
  upsert?: Prisma.TaskTemplateUpsertWithWhereUniqueWithoutProductInput | Prisma.TaskTemplateUpsertWithWhereUniqueWithoutProductInput[]
  createMany?: Prisma.TaskTemplateCreateManyProductInputEnvelope
  set?: Prisma.TaskTemplateWhereUniqueInput | Prisma.TaskTemplateWhereUniqueInput[]
  disconnect?: Prisma.TaskTemplateWhereUniqueInput | Prisma.TaskTemplateWhereUniqueInput[]
  delete?: Prisma.TaskTemplateWhereUniqueInput | Prisma.TaskTemplateWhereUniqueInput[]
  connect?: Prisma.TaskTemplateWhereUniqueInput | Prisma.TaskTemplateWhereUniqueInput[]
  update?: Prisma.TaskTemplateUpdateWithWhereUniqueWithoutProductInput | Prisma.TaskTemplateUpdateWithWhereUniqueWithoutProductInput[]
  updateMany?: Prisma.TaskTemplateUpdateManyWithWhereWithoutProductInput | Prisma.TaskTemplateUpdateManyWithWhereWithoutProductInput[]
  deleteMany?: Prisma.TaskTemplateScalarWhereInput | Prisma.TaskTemplateScalarWhereInput[]
}

export type TaskTemplateUncheckedUpdateManyWithoutProductNestedInput = {
  create?: Prisma.XOR<Prisma.TaskTemplateCreateWithoutProductInput, Prisma.TaskTemplateUncheckedCreateWithoutProductInput> | Prisma.TaskTemplateCreateWithoutProductInput[] | Prisma.TaskTemplateUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.TaskTemplateCreateOrConnectWithoutProductInput | Prisma.TaskTemplateCreateOrConnectWithoutProductInput[]
  upsert?: Prisma.TaskTemplateUpsertWithWhereUniqueWithoutProductInput | Prisma.TaskTemplateUpsertWithWhereUniqueWithoutProductInput[]
  createMany?: Prisma.TaskTemplateCreateManyProductInputEnvelope
  set?: Prisma.TaskTemplateWhereUniqueInput | Prisma.TaskTemplateWhereUniqueInput[]
  disconnect?: Prisma.TaskTemplateWhereUniqueInput | Prisma.TaskTemplateWhereUniqueInput[]
  delete?: Prisma.TaskTemplateWhereUniqueInput | Prisma.TaskTemplateWhereUniqueInput[]
  connect?: Prisma.TaskTemplateWhereUniqueInput | Prisma.TaskTemplateWhereUniqueInput[]
  update?: Prisma.TaskTemplateUpdateWithWhereUniqueWithoutProductInput | Prisma.TaskTemplateUpdateWithWhereUniqueWithoutProductInput[]
  updateMany?: Prisma.TaskTemplateUpdateManyWithWhereWithoutProductInput | Prisma.TaskTemplateUpdateManyWithWhereWithoutProductInput[]
  deleteMany?: Prisma.TaskTemplateScalarWhereInput | Prisma.TaskTemplateScalarWhereInput[]
}

export type EnumTaskTriggerConditionFieldUpdateOperationsInput = {
  set?: $Enums.TaskTriggerCondition
}

export type TaskTemplateCreateNestedOneWithoutTasksInput = {
  create?: Prisma.XOR<Prisma.TaskTemplateCreateWithoutTasksInput, Prisma.TaskTemplateUncheckedCreateWithoutTasksInput>
  connectOrCreate?: Prisma.TaskTemplateCreateOrConnectWithoutTasksInput
  connect?: Prisma.TaskTemplateWhereUniqueInput
}

export type TaskTemplateUpdateOneWithoutTasksNestedInput = {
  create?: Prisma.XOR<Prisma.TaskTemplateCreateWithoutTasksInput, Prisma.TaskTemplateUncheckedCreateWithoutTasksInput>
  connectOrCreate?: Prisma.TaskTemplateCreateOrConnectWithoutTasksInput
  upsert?: Prisma.TaskTemplateUpsertWithoutTasksInput
  disconnect?: Prisma.TaskTemplateWhereInput | boolean
  delete?: Prisma.TaskTemplateWhereInput | boolean
  connect?: Prisma.TaskTemplateWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.TaskTemplateUpdateToOneWithWhereWithoutTasksInput, Prisma.TaskTemplateUpdateWithoutTasksInput>, Prisma.TaskTemplateUncheckedUpdateWithoutTasksInput>
}

export type TaskTemplateCreateWithoutProductInput = {
  id?: string
  name: string
  description?: string | null
  category?: string | null
  estimatedDuration: number
  leadTimeHours?: number
  sequenceOrder?: number
  requiredRole?: string | null
  triggerCondition: $Enums.TaskTriggerCondition
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: string | null
  notes?: string | null
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  tasks?: Prisma.TaskCreateNestedManyWithoutTemplateInput
}

export type TaskTemplateUncheckedCreateWithoutProductInput = {
  id?: string
  name: string
  description?: string | null
  category?: string | null
  estimatedDuration: number
  leadTimeHours?: number
  sequenceOrder?: number
  requiredRole?: string | null
  triggerCondition: $Enums.TaskTriggerCondition
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: string | null
  notes?: string | null
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  tasks?: Prisma.TaskUncheckedCreateNestedManyWithoutTemplateInput
}

export type TaskTemplateCreateOrConnectWithoutProductInput = {
  where: Prisma.TaskTemplateWhereUniqueInput
  create: Prisma.XOR<Prisma.TaskTemplateCreateWithoutProductInput, Prisma.TaskTemplateUncheckedCreateWithoutProductInput>
}

export type TaskTemplateCreateManyProductInputEnvelope = {
  data: Prisma.TaskTemplateCreateManyProductInput | Prisma.TaskTemplateCreateManyProductInput[]
  skipDuplicates?: boolean
}

export type TaskTemplateUpsertWithWhereUniqueWithoutProductInput = {
  where: Prisma.TaskTemplateWhereUniqueInput
  update: Prisma.XOR<Prisma.TaskTemplateUpdateWithoutProductInput, Prisma.TaskTemplateUncheckedUpdateWithoutProductInput>
  create: Prisma.XOR<Prisma.TaskTemplateCreateWithoutProductInput, Prisma.TaskTemplateUncheckedCreateWithoutProductInput>
}

export type TaskTemplateUpdateWithWhereUniqueWithoutProductInput = {
  where: Prisma.TaskTemplateWhereUniqueInput
  data: Prisma.XOR<Prisma.TaskTemplateUpdateWithoutProductInput, Prisma.TaskTemplateUncheckedUpdateWithoutProductInput>
}

export type TaskTemplateUpdateManyWithWhereWithoutProductInput = {
  where: Prisma.TaskTemplateScalarWhereInput
  data: Prisma.XOR<Prisma.TaskTemplateUpdateManyMutationInput, Prisma.TaskTemplateUncheckedUpdateManyWithoutProductInput>
}

export type TaskTemplateScalarWhereInput = {
  AND?: Prisma.TaskTemplateScalarWhereInput | Prisma.TaskTemplateScalarWhereInput[]
  OR?: Prisma.TaskTemplateScalarWhereInput[]
  NOT?: Prisma.TaskTemplateScalarWhereInput | Prisma.TaskTemplateScalarWhereInput[]
  id?: Prisma.StringFilter<"TaskTemplate"> | string
  productId?: Prisma.StringFilter<"TaskTemplate"> | string
  name?: Prisma.StringFilter<"TaskTemplate"> | string
  description?: Prisma.StringNullableFilter<"TaskTemplate"> | string | null
  category?: Prisma.StringNullableFilter<"TaskTemplate"> | string | null
  estimatedDuration?: Prisma.IntFilter<"TaskTemplate"> | number
  leadTimeHours?: Prisma.IntFilter<"TaskTemplate"> | number
  sequenceOrder?: Prisma.IntFilter<"TaskTemplate"> | number
  requiredRole?: Prisma.StringNullableFilter<"TaskTemplate"> | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFilter<"TaskTemplate"> | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFilter<"TaskTemplate"> | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFilter<"TaskTemplate"> | boolean
  autoAssignToRole?: Prisma.StringNullableFilter<"TaskTemplate"> | string | null
  notes?: Prisma.StringNullableFilter<"TaskTemplate"> | string | null
  isActive?: Prisma.BoolFilter<"TaskTemplate"> | boolean
  createdAt?: Prisma.DateTimeFilter<"TaskTemplate"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"TaskTemplate"> | Date | string
}

export type TaskTemplateCreateWithoutTasksInput = {
  id?: string
  name: string
  description?: string | null
  category?: string | null
  estimatedDuration: number
  leadTimeHours?: number
  sequenceOrder?: number
  requiredRole?: string | null
  triggerCondition: $Enums.TaskTriggerCondition
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: string | null
  notes?: string | null
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
  product: Prisma.ProductCreateNestedOneWithoutTaskTemplatesInput
}

export type TaskTemplateUncheckedCreateWithoutTasksInput = {
  id?: string
  productId: string
  name: string
  description?: string | null
  category?: string | null
  estimatedDuration: number
  leadTimeHours?: number
  sequenceOrder?: number
  requiredRole?: string | null
  triggerCondition: $Enums.TaskTriggerCondition
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: string | null
  notes?: string | null
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type TaskTemplateCreateOrConnectWithoutTasksInput = {
  where: Prisma.TaskTemplateWhereUniqueInput
  create: Prisma.XOR<Prisma.TaskTemplateCreateWithoutTasksInput, Prisma.TaskTemplateUncheckedCreateWithoutTasksInput>
}

export type TaskTemplateUpsertWithoutTasksInput = {
  update: Prisma.XOR<Prisma.TaskTemplateUpdateWithoutTasksInput, Prisma.TaskTemplateUncheckedUpdateWithoutTasksInput>
  create: Prisma.XOR<Prisma.TaskTemplateCreateWithoutTasksInput, Prisma.TaskTemplateUncheckedCreateWithoutTasksInput>
  where?: Prisma.TaskTemplateWhereInput
}

export type TaskTemplateUpdateToOneWithWhereWithoutTasksInput = {
  where?: Prisma.TaskTemplateWhereInput
  data: Prisma.XOR<Prisma.TaskTemplateUpdateWithoutTasksInput, Prisma.TaskTemplateUncheckedUpdateWithoutTasksInput>
}

export type TaskTemplateUpdateWithoutTasksInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  estimatedDuration?: Prisma.IntFieldUpdateOperationsInput | number
  leadTimeHours?: Prisma.IntFieldUpdateOperationsInput | number
  sequenceOrder?: Prisma.IntFieldUpdateOperationsInput | number
  requiredRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFieldUpdateOperationsInput | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoAssignToRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  product?: Prisma.ProductUpdateOneRequiredWithoutTaskTemplatesNestedInput
}

export type TaskTemplateUncheckedUpdateWithoutTasksInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  estimatedDuration?: Prisma.IntFieldUpdateOperationsInput | number
  leadTimeHours?: Prisma.IntFieldUpdateOperationsInput | number
  sequenceOrder?: Prisma.IntFieldUpdateOperationsInput | number
  requiredRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFieldUpdateOperationsInput | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoAssignToRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type TaskTemplateCreateManyProductInput = {
  id?: string
  name: string
  description?: string | null
  category?: string | null
  estimatedDuration: number
  leadTimeHours?: number
  sequenceOrder?: number
  requiredRole?: string | null
  triggerCondition: $Enums.TaskTriggerCondition
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: string | null
  notes?: string | null
  isActive?: boolean
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type TaskTemplateUpdateWithoutProductInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  estimatedDuration?: Prisma.IntFieldUpdateOperationsInput | number
  leadTimeHours?: Prisma.IntFieldUpdateOperationsInput | number
  sequenceOrder?: Prisma.IntFieldUpdateOperationsInput | number
  requiredRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFieldUpdateOperationsInput | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoAssignToRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  tasks?: Prisma.TaskUpdateManyWithoutTemplateNestedInput
}

export type TaskTemplateUncheckedUpdateWithoutProductInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  estimatedDuration?: Prisma.IntFieldUpdateOperationsInput | number
  leadTimeHours?: Prisma.IntFieldUpdateOperationsInput | number
  sequenceOrder?: Prisma.IntFieldUpdateOperationsInput | number
  requiredRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFieldUpdateOperationsInput | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoAssignToRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  tasks?: Prisma.TaskUncheckedUpdateManyWithoutTemplateNestedInput
}

export type TaskTemplateUncheckedUpdateManyWithoutProductInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  estimatedDuration?: Prisma.IntFieldUpdateOperationsInput | number
  leadTimeHours?: Prisma.IntFieldUpdateOperationsInput | number
  sequenceOrder?: Prisma.IntFieldUpdateOperationsInput | number
  requiredRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFieldUpdateOperationsInput | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoAssignToRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type TaskTemplateCountOutputType
 */

export type TaskTemplateCountOutputType = {
  tasks: number
}

export type TaskTemplateCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  tasks?: boolean | TaskTemplateCountOutputTypeCountTasksArgs
}

/**
 * TaskTemplateCountOutputType without action
 */
export type TaskTemplateCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TaskTemplateCountOutputType
   */
  select?: Prisma.TaskTemplateCountOutputTypeSelect<ExtArgs> | null
}

/**
 * TaskTemplateCountOutputType without action
 */
export type TaskTemplateCountOutputTypeCountTasksArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.TaskWhereInput
}


export type TaskTemplateSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  productId?: boolean
  name?: boolean
  description?: boolean
  category?: boolean
  estimatedDuration?: boolean
  leadTimeHours?: boolean
  sequenceOrder?: boolean
  requiredRole?: boolean
  triggerCondition?: boolean
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: boolean
  notes?: boolean
  isActive?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
  tasks?: boolean | Prisma.TaskTemplate$tasksArgs<ExtArgs>
  _count?: boolean | Prisma.TaskTemplateCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["taskTemplate"]>

export type TaskTemplateSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  productId?: boolean
  name?: boolean
  description?: boolean
  category?: boolean
  estimatedDuration?: boolean
  leadTimeHours?: boolean
  sequenceOrder?: boolean
  requiredRole?: boolean
  triggerCondition?: boolean
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: boolean
  notes?: boolean
  isActive?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}, ExtArgs["result"]["taskTemplate"]>

export type TaskTemplateSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  productId?: boolean
  name?: boolean
  description?: boolean
  category?: boolean
  estimatedDuration?: boolean
  leadTimeHours?: boolean
  sequenceOrder?: boolean
  requiredRole?: boolean
  triggerCondition?: boolean
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: boolean
  notes?: boolean
  isActive?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}, ExtArgs["result"]["taskTemplate"]>

export type TaskTemplateSelectScalar = {
  id?: boolean
  productId?: boolean
  name?: boolean
  description?: boolean
  category?: boolean
  estimatedDuration?: boolean
  leadTimeHours?: boolean
  sequenceOrder?: boolean
  requiredRole?: boolean
  triggerCondition?: boolean
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: boolean
  notes?: boolean
  isActive?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type TaskTemplateOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "productId" | "name" | "description" | "category" | "estimatedDuration" | "leadTimeHours" | "sequenceOrder" | "requiredRole" | "triggerCondition" | "isMandatory" | "requiresCompletionBeforeNext" | "autoAssignToRole" | "notes" | "isActive" | "createdAt" | "updatedAt", ExtArgs["result"]["taskTemplate"]>
export type TaskTemplateInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
  tasks?: boolean | Prisma.TaskTemplate$tasksArgs<ExtArgs>
  _count?: boolean | Prisma.TaskTemplateCountOutputTypeDefaultArgs<ExtArgs>
}
export type TaskTemplateIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}
export type TaskTemplateIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}

export type $TaskTemplatePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "TaskTemplate"
  objects: {
    product: Prisma.$ProductPayload<ExtArgs>
    tasks: Prisma.$TaskPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    productId: string
    name: string
    description: string | null
    category: string | null
    estimatedDuration: number
    leadTimeHours: number
    sequenceOrder: number
    requiredRole: string | null
    triggerCondition: $Enums.TaskTriggerCondition
    isMandatory: boolean
    requiresCompletionBeforeNext: boolean
    autoAssignToRole: string | null
    notes: string | null
    isActive: boolean
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["taskTemplate"]>
  composites: {}
}

export type TaskTemplateGetPayload<S extends boolean | null | undefined | TaskTemplateDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$TaskTemplatePayload, S>

export type TaskTemplateCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<TaskTemplateFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: TaskTemplateCountAggregateInputType | true
  }

export interface TaskTemplateDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TaskTemplate'], meta: { name: 'TaskTemplate' } }
  /**
   * Find zero or one TaskTemplate that matches the filter.
   * @param {TaskTemplateFindUniqueArgs} args - Arguments to find a TaskTemplate
   * @example
   * // Get one TaskTemplate
   * const taskTemplate = await prisma.taskTemplate.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends TaskTemplateFindUniqueArgs>(args: Prisma.SelectSubset<T, TaskTemplateFindUniqueArgs<ExtArgs>>): Prisma.Prisma__TaskTemplateClient<runtime.Types.Result.GetResult<Prisma.$TaskTemplatePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one TaskTemplate that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {TaskTemplateFindUniqueOrThrowArgs} args - Arguments to find a TaskTemplate
   * @example
   * // Get one TaskTemplate
   * const taskTemplate = await prisma.taskTemplate.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends TaskTemplateFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, TaskTemplateFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__TaskTemplateClient<runtime.Types.Result.GetResult<Prisma.$TaskTemplatePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first TaskTemplate that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TaskTemplateFindFirstArgs} args - Arguments to find a TaskTemplate
   * @example
   * // Get one TaskTemplate
   * const taskTemplate = await prisma.taskTemplate.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends TaskTemplateFindFirstArgs>(args?: Prisma.SelectSubset<T, TaskTemplateFindFirstArgs<ExtArgs>>): Prisma.Prisma__TaskTemplateClient<runtime.Types.Result.GetResult<Prisma.$TaskTemplatePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first TaskTemplate that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TaskTemplateFindFirstOrThrowArgs} args - Arguments to find a TaskTemplate
   * @example
   * // Get one TaskTemplate
   * const taskTemplate = await prisma.taskTemplate.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends TaskTemplateFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, TaskTemplateFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__TaskTemplateClient<runtime.Types.Result.GetResult<Prisma.$TaskTemplatePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more TaskTemplates that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TaskTemplateFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all TaskTemplates
   * const taskTemplates = await prisma.taskTemplate.findMany()
   * 
   * // Get first 10 TaskTemplates
   * const taskTemplates = await prisma.taskTemplate.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const taskTemplateWithIdOnly = await prisma.taskTemplate.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends TaskTemplateFindManyArgs>(args?: Prisma.SelectSubset<T, TaskTemplateFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TaskTemplatePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a TaskTemplate.
   * @param {TaskTemplateCreateArgs} args - Arguments to create a TaskTemplate.
   * @example
   * // Create one TaskTemplate
   * const TaskTemplate = await prisma.taskTemplate.create({
   *   data: {
   *     // ... data to create a TaskTemplate
   *   }
   * })
   * 
   */
  create<T extends TaskTemplateCreateArgs>(args: Prisma.SelectSubset<T, TaskTemplateCreateArgs<ExtArgs>>): Prisma.Prisma__TaskTemplateClient<runtime.Types.Result.GetResult<Prisma.$TaskTemplatePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many TaskTemplates.
   * @param {TaskTemplateCreateManyArgs} args - Arguments to create many TaskTemplates.
   * @example
   * // Create many TaskTemplates
   * const taskTemplate = await prisma.taskTemplate.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends TaskTemplateCreateManyArgs>(args?: Prisma.SelectSubset<T, TaskTemplateCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many TaskTemplates and returns the data saved in the database.
   * @param {TaskTemplateCreateManyAndReturnArgs} args - Arguments to create many TaskTemplates.
   * @example
   * // Create many TaskTemplates
   * const taskTemplate = await prisma.taskTemplate.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many TaskTemplates and only return the `id`
   * const taskTemplateWithIdOnly = await prisma.taskTemplate.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends TaskTemplateCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, TaskTemplateCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TaskTemplatePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a TaskTemplate.
   * @param {TaskTemplateDeleteArgs} args - Arguments to delete one TaskTemplate.
   * @example
   * // Delete one TaskTemplate
   * const TaskTemplate = await prisma.taskTemplate.delete({
   *   where: {
   *     // ... filter to delete one TaskTemplate
   *   }
   * })
   * 
   */
  delete<T extends TaskTemplateDeleteArgs>(args: Prisma.SelectSubset<T, TaskTemplateDeleteArgs<ExtArgs>>): Prisma.Prisma__TaskTemplateClient<runtime.Types.Result.GetResult<Prisma.$TaskTemplatePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one TaskTemplate.
   * @param {TaskTemplateUpdateArgs} args - Arguments to update one TaskTemplate.
   * @example
   * // Update one TaskTemplate
   * const taskTemplate = await prisma.taskTemplate.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends TaskTemplateUpdateArgs>(args: Prisma.SelectSubset<T, TaskTemplateUpdateArgs<ExtArgs>>): Prisma.Prisma__TaskTemplateClient<runtime.Types.Result.GetResult<Prisma.$TaskTemplatePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more TaskTemplates.
   * @param {TaskTemplateDeleteManyArgs} args - Arguments to filter TaskTemplates to delete.
   * @example
   * // Delete a few TaskTemplates
   * const { count } = await prisma.taskTemplate.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends TaskTemplateDeleteManyArgs>(args?: Prisma.SelectSubset<T, TaskTemplateDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more TaskTemplates.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TaskTemplateUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many TaskTemplates
   * const taskTemplate = await prisma.taskTemplate.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends TaskTemplateUpdateManyArgs>(args: Prisma.SelectSubset<T, TaskTemplateUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more TaskTemplates and returns the data updated in the database.
   * @param {TaskTemplateUpdateManyAndReturnArgs} args - Arguments to update many TaskTemplates.
   * @example
   * // Update many TaskTemplates
   * const taskTemplate = await prisma.taskTemplate.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more TaskTemplates and only return the `id`
   * const taskTemplateWithIdOnly = await prisma.taskTemplate.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends TaskTemplateUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, TaskTemplateUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TaskTemplatePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one TaskTemplate.
   * @param {TaskTemplateUpsertArgs} args - Arguments to update or create a TaskTemplate.
   * @example
   * // Update or create a TaskTemplate
   * const taskTemplate = await prisma.taskTemplate.upsert({
   *   create: {
   *     // ... data to create a TaskTemplate
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the TaskTemplate we want to update
   *   }
   * })
   */
  upsert<T extends TaskTemplateUpsertArgs>(args: Prisma.SelectSubset<T, TaskTemplateUpsertArgs<ExtArgs>>): Prisma.Prisma__TaskTemplateClient<runtime.Types.Result.GetResult<Prisma.$TaskTemplatePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of TaskTemplates.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TaskTemplateCountArgs} args - Arguments to filter TaskTemplates to count.
   * @example
   * // Count the number of TaskTemplates
   * const count = await prisma.taskTemplate.count({
   *   where: {
   *     // ... the filter for the TaskTemplates we want to count
   *   }
   * })
  **/
  count<T extends TaskTemplateCountArgs>(
    args?: Prisma.Subset<T, TaskTemplateCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], TaskTemplateCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a TaskTemplate.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TaskTemplateAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends TaskTemplateAggregateArgs>(args: Prisma.Subset<T, TaskTemplateAggregateArgs>): Prisma.PrismaPromise<GetTaskTemplateAggregateType<T>>

  /**
   * Group by TaskTemplate.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {TaskTemplateGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends TaskTemplateGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: TaskTemplateGroupByArgs['orderBy'] }
      : { orderBy?: TaskTemplateGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, TaskTemplateGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTaskTemplateGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the TaskTemplate model
 */
readonly fields: TaskTemplateFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for TaskTemplate.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__TaskTemplateClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  product<T extends Prisma.ProductDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProductDefaultArgs<ExtArgs>>): Prisma.Prisma__ProductClient<runtime.Types.Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  tasks<T extends Prisma.TaskTemplate$tasksArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.TaskTemplate$tasksArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$TaskPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the TaskTemplate model
 */
export interface TaskTemplateFieldRefs {
  readonly id: Prisma.FieldRef<"TaskTemplate", 'String'>
  readonly productId: Prisma.FieldRef<"TaskTemplate", 'String'>
  readonly name: Prisma.FieldRef<"TaskTemplate", 'String'>
  readonly description: Prisma.FieldRef<"TaskTemplate", 'String'>
  readonly category: Prisma.FieldRef<"TaskTemplate", 'String'>
  readonly estimatedDuration: Prisma.FieldRef<"TaskTemplate", 'Int'>
  readonly leadTimeHours: Prisma.FieldRef<"TaskTemplate", 'Int'>
  readonly sequenceOrder: Prisma.FieldRef<"TaskTemplate", 'Int'>
  readonly requiredRole: Prisma.FieldRef<"TaskTemplate", 'String'>
  readonly triggerCondition: Prisma.FieldRef<"TaskTemplate", 'TaskTriggerCondition'>
  readonly isMandatory: Prisma.FieldRef<"TaskTemplate", 'Boolean'>
  readonly requiresCompletionBeforeNext: Prisma.FieldRef<"TaskTemplate", 'Boolean'>
  readonly autoAssignToRole: Prisma.FieldRef<"TaskTemplate", 'String'>
  readonly notes: Prisma.FieldRef<"TaskTemplate", 'String'>
  readonly isActive: Prisma.FieldRef<"TaskTemplate", 'Boolean'>
  readonly createdAt: Prisma.FieldRef<"TaskTemplate", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"TaskTemplate", 'DateTime'>
}
    

// Custom InputTypes
/**
 * TaskTemplate findUnique
 */
export type TaskTemplateFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TaskTemplate
   */
  select?: Prisma.TaskTemplateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TaskTemplate
   */
  omit?: Prisma.TaskTemplateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TaskTemplateInclude<ExtArgs> | null
  /**
   * Filter, which TaskTemplate to fetch.
   */
  where: Prisma.TaskTemplateWhereUniqueInput
}

/**
 * TaskTemplate findUniqueOrThrow
 */
export type TaskTemplateFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TaskTemplate
   */
  select?: Prisma.TaskTemplateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TaskTemplate
   */
  omit?: Prisma.TaskTemplateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TaskTemplateInclude<ExtArgs> | null
  /**
   * Filter, which TaskTemplate to fetch.
   */
  where: Prisma.TaskTemplateWhereUniqueInput
}

/**
 * TaskTemplate findFirst
 */
export type TaskTemplateFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TaskTemplate
   */
  select?: Prisma.TaskTemplateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TaskTemplate
   */
  omit?: Prisma.TaskTemplateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TaskTemplateInclude<ExtArgs> | null
  /**
   * Filter, which TaskTemplate to fetch.
   */
  where?: Prisma.TaskTemplateWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TaskTemplates to fetch.
   */
  orderBy?: Prisma.TaskTemplateOrderByWithRelationInput | Prisma.TaskTemplateOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for TaskTemplates.
   */
  cursor?: Prisma.TaskTemplateWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TaskTemplates from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TaskTemplates.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of TaskTemplates.
   */
  distinct?: Prisma.TaskTemplateScalarFieldEnum | Prisma.TaskTemplateScalarFieldEnum[]
}

/**
 * TaskTemplate findFirstOrThrow
 */
export type TaskTemplateFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TaskTemplate
   */
  select?: Prisma.TaskTemplateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TaskTemplate
   */
  omit?: Prisma.TaskTemplateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TaskTemplateInclude<ExtArgs> | null
  /**
   * Filter, which TaskTemplate to fetch.
   */
  where?: Prisma.TaskTemplateWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TaskTemplates to fetch.
   */
  orderBy?: Prisma.TaskTemplateOrderByWithRelationInput | Prisma.TaskTemplateOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for TaskTemplates.
   */
  cursor?: Prisma.TaskTemplateWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TaskTemplates from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TaskTemplates.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of TaskTemplates.
   */
  distinct?: Prisma.TaskTemplateScalarFieldEnum | Prisma.TaskTemplateScalarFieldEnum[]
}

/**
 * TaskTemplate findMany
 */
export type TaskTemplateFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TaskTemplate
   */
  select?: Prisma.TaskTemplateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TaskTemplate
   */
  omit?: Prisma.TaskTemplateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TaskTemplateInclude<ExtArgs> | null
  /**
   * Filter, which TaskTemplates to fetch.
   */
  where?: Prisma.TaskTemplateWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of TaskTemplates to fetch.
   */
  orderBy?: Prisma.TaskTemplateOrderByWithRelationInput | Prisma.TaskTemplateOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing TaskTemplates.
   */
  cursor?: Prisma.TaskTemplateWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` TaskTemplates from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` TaskTemplates.
   */
  skip?: number
  distinct?: Prisma.TaskTemplateScalarFieldEnum | Prisma.TaskTemplateScalarFieldEnum[]
}

/**
 * TaskTemplate create
 */
export type TaskTemplateCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TaskTemplate
   */
  select?: Prisma.TaskTemplateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TaskTemplate
   */
  omit?: Prisma.TaskTemplateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TaskTemplateInclude<ExtArgs> | null
  /**
   * The data needed to create a TaskTemplate.
   */
  data: Prisma.XOR<Prisma.TaskTemplateCreateInput, Prisma.TaskTemplateUncheckedCreateInput>
}

/**
 * TaskTemplate createMany
 */
export type TaskTemplateCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many TaskTemplates.
   */
  data: Prisma.TaskTemplateCreateManyInput | Prisma.TaskTemplateCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * TaskTemplate createManyAndReturn
 */
export type TaskTemplateCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TaskTemplate
   */
  select?: Prisma.TaskTemplateSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the TaskTemplate
   */
  omit?: Prisma.TaskTemplateOmit<ExtArgs> | null
  /**
   * The data used to create many TaskTemplates.
   */
  data: Prisma.TaskTemplateCreateManyInput | Prisma.TaskTemplateCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TaskTemplateIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * TaskTemplate update
 */
export type TaskTemplateUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TaskTemplate
   */
  select?: Prisma.TaskTemplateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TaskTemplate
   */
  omit?: Prisma.TaskTemplateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TaskTemplateInclude<ExtArgs> | null
  /**
   * The data needed to update a TaskTemplate.
   */
  data: Prisma.XOR<Prisma.TaskTemplateUpdateInput, Prisma.TaskTemplateUncheckedUpdateInput>
  /**
   * Choose, which TaskTemplate to update.
   */
  where: Prisma.TaskTemplateWhereUniqueInput
}

/**
 * TaskTemplate updateMany
 */
export type TaskTemplateUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update TaskTemplates.
   */
  data: Prisma.XOR<Prisma.TaskTemplateUpdateManyMutationInput, Prisma.TaskTemplateUncheckedUpdateManyInput>
  /**
   * Filter which TaskTemplates to update
   */
  where?: Prisma.TaskTemplateWhereInput
  /**
   * Limit how many TaskTemplates to update.
   */
  limit?: number
}

/**
 * TaskTemplate updateManyAndReturn
 */
export type TaskTemplateUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TaskTemplate
   */
  select?: Prisma.TaskTemplateSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the TaskTemplate
   */
  omit?: Prisma.TaskTemplateOmit<ExtArgs> | null
  /**
   * The data used to update TaskTemplates.
   */
  data: Prisma.XOR<Prisma.TaskTemplateUpdateManyMutationInput, Prisma.TaskTemplateUncheckedUpdateManyInput>
  /**
   * Filter which TaskTemplates to update
   */
  where?: Prisma.TaskTemplateWhereInput
  /**
   * Limit how many TaskTemplates to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TaskTemplateIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * TaskTemplate upsert
 */
export type TaskTemplateUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TaskTemplate
   */
  select?: Prisma.TaskTemplateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TaskTemplate
   */
  omit?: Prisma.TaskTemplateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TaskTemplateInclude<ExtArgs> | null
  /**
   * The filter to search for the TaskTemplate to update in case it exists.
   */
  where: Prisma.TaskTemplateWhereUniqueInput
  /**
   * In case the TaskTemplate found by the `where` argument doesn't exist, create a new TaskTemplate with this data.
   */
  create: Prisma.XOR<Prisma.TaskTemplateCreateInput, Prisma.TaskTemplateUncheckedCreateInput>
  /**
   * In case the TaskTemplate was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.TaskTemplateUpdateInput, Prisma.TaskTemplateUncheckedUpdateInput>
}

/**
 * TaskTemplate delete
 */
export type TaskTemplateDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TaskTemplate
   */
  select?: Prisma.TaskTemplateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TaskTemplate
   */
  omit?: Prisma.TaskTemplateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TaskTemplateInclude<ExtArgs> | null
  /**
   * Filter which TaskTemplate to delete.
   */
  where: Prisma.TaskTemplateWhereUniqueInput
}

/**
 * TaskTemplate deleteMany
 */
export type TaskTemplateDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which TaskTemplates to delete
   */
  where?: Prisma.TaskTemplateWhereInput
  /**
   * Limit how many TaskTemplates to delete.
   */
  limit?: number
}

/**
 * TaskTemplate.tasks
 */
export type TaskTemplate$tasksArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Task
   */
  select?: Prisma.TaskSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Task
   */
  omit?: Prisma.TaskOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TaskInclude<ExtArgs> | null
  where?: Prisma.TaskWhereInput
  orderBy?: Prisma.TaskOrderByWithRelationInput | Prisma.TaskOrderByWithRelationInput[]
  cursor?: Prisma.TaskWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TaskScalarFieldEnum | Prisma.TaskScalarFieldEnum[]
}

/**
 * TaskTemplate without action
 */
export type TaskTemplateDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the TaskTemplate
   */
  select?: Prisma.TaskTemplateSelect<ExtArgs> | null
  /**
   * Omit specific fields from the TaskTemplate
   */
  omit?: Prisma.TaskTemplateOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.TaskTemplateInclude<ExtArgs> | null
}
