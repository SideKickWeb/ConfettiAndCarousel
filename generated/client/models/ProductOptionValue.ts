
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `ProductOptionValue` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model ProductOptionValue
 * 
 */
export type ProductOptionValueModel = runtime.Types.Result.DefaultSelection<Prisma.$ProductOptionValuePayload>

export type AggregateProductOptionValue = {
  _count: ProductOptionValueCountAggregateOutputType | null
  _avg: ProductOptionValueAvgAggregateOutputType | null
  _sum: ProductOptionValueSumAggregateOutputType | null
  _min: ProductOptionValueMinAggregateOutputType | null
  _max: ProductOptionValueMaxAggregateOutputType | null
}

export type ProductOptionValueAvgAggregateOutputType = {
  priceAdjustment: number | null
  sortOrder: number | null
}

export type ProductOptionValueSumAggregateOutputType = {
  priceAdjustment: number | null
  sortOrder: number | null
}

export type ProductOptionValueMinAggregateOutputType = {
  id: string | null
  optionId: string | null
  value: string | null
  label: string | null
  priceAdjustment: number | null
  sortOrder: number | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ProductOptionValueMaxAggregateOutputType = {
  id: string | null
  optionId: string | null
  value: string | null
  label: string | null
  priceAdjustment: number | null
  sortOrder: number | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ProductOptionValueCountAggregateOutputType = {
  id: number
  optionId: number
  value: number
  label: number
  priceAdjustment: number
  sortOrder: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type ProductOptionValueAvgAggregateInputType = {
  priceAdjustment?: true
  sortOrder?: true
}

export type ProductOptionValueSumAggregateInputType = {
  priceAdjustment?: true
  sortOrder?: true
}

export type ProductOptionValueMinAggregateInputType = {
  id?: true
  optionId?: true
  value?: true
  label?: true
  priceAdjustment?: true
  sortOrder?: true
  createdAt?: true
  updatedAt?: true
}

export type ProductOptionValueMaxAggregateInputType = {
  id?: true
  optionId?: true
  value?: true
  label?: true
  priceAdjustment?: true
  sortOrder?: true
  createdAt?: true
  updatedAt?: true
}

export type ProductOptionValueCountAggregateInputType = {
  id?: true
  optionId?: true
  value?: true
  label?: true
  priceAdjustment?: true
  sortOrder?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type ProductOptionValueAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ProductOptionValue to aggregate.
   */
  where?: Prisma.ProductOptionValueWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProductOptionValues to fetch.
   */
  orderBy?: Prisma.ProductOptionValueOrderByWithRelationInput | Prisma.ProductOptionValueOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ProductOptionValueWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProductOptionValues from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProductOptionValues.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ProductOptionValues
  **/
  _count?: true | ProductOptionValueCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ProductOptionValueAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ProductOptionValueSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ProductOptionValueMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ProductOptionValueMaxAggregateInputType
}

export type GetProductOptionValueAggregateType<T extends ProductOptionValueAggregateArgs> = {
      [P in keyof T & keyof AggregateProductOptionValue]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateProductOptionValue[P]>
    : Prisma.GetScalarType<T[P], AggregateProductOptionValue[P]>
}




export type ProductOptionValueGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProductOptionValueWhereInput
  orderBy?: Prisma.ProductOptionValueOrderByWithAggregationInput | Prisma.ProductOptionValueOrderByWithAggregationInput[]
  by: Prisma.ProductOptionValueScalarFieldEnum[] | Prisma.ProductOptionValueScalarFieldEnum
  having?: Prisma.ProductOptionValueScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ProductOptionValueCountAggregateInputType | true
  _avg?: ProductOptionValueAvgAggregateInputType
  _sum?: ProductOptionValueSumAggregateInputType
  _min?: ProductOptionValueMinAggregateInputType
  _max?: ProductOptionValueMaxAggregateInputType
}

export type ProductOptionValueGroupByOutputType = {
  id: string
  optionId: string
  value: string
  label: string | null
  priceAdjustment: number | null
  sortOrder: number
  createdAt: Date
  updatedAt: Date
  _count: ProductOptionValueCountAggregateOutputType | null
  _avg: ProductOptionValueAvgAggregateOutputType | null
  _sum: ProductOptionValueSumAggregateOutputType | null
  _min: ProductOptionValueMinAggregateOutputType | null
  _max: ProductOptionValueMaxAggregateOutputType | null
}

type GetProductOptionValueGroupByPayload<T extends ProductOptionValueGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ProductOptionValueGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ProductOptionValueGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ProductOptionValueGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ProductOptionValueGroupByOutputType[P]>
      }
    >
  > 



export type ProductOptionValueWhereInput = {
  AND?: Prisma.ProductOptionValueWhereInput | Prisma.ProductOptionValueWhereInput[]
  OR?: Prisma.ProductOptionValueWhereInput[]
  NOT?: Prisma.ProductOptionValueWhereInput | Prisma.ProductOptionValueWhereInput[]
  id?: Prisma.StringFilter<"ProductOptionValue"> | string
  optionId?: Prisma.StringFilter<"ProductOptionValue"> | string
  value?: Prisma.StringFilter<"ProductOptionValue"> | string
  label?: Prisma.StringNullableFilter<"ProductOptionValue"> | string | null
  priceAdjustment?: Prisma.FloatNullableFilter<"ProductOptionValue"> | number | null
  sortOrder?: Prisma.IntFilter<"ProductOptionValue"> | number
  createdAt?: Prisma.DateTimeFilter<"ProductOptionValue"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ProductOptionValue"> | Date | string
  ProductOption?: Prisma.XOR<Prisma.ProductOptionScalarRelationFilter, Prisma.ProductOptionWhereInput>
}

export type ProductOptionValueOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  optionId?: Prisma.SortOrder
  value?: Prisma.SortOrder
  label?: Prisma.SortOrderInput | Prisma.SortOrder
  priceAdjustment?: Prisma.SortOrderInput | Prisma.SortOrder
  sortOrder?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  ProductOption?: Prisma.ProductOptionOrderByWithRelationInput
}

export type ProductOptionValueWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.ProductOptionValueWhereInput | Prisma.ProductOptionValueWhereInput[]
  OR?: Prisma.ProductOptionValueWhereInput[]
  NOT?: Prisma.ProductOptionValueWhereInput | Prisma.ProductOptionValueWhereInput[]
  optionId?: Prisma.StringFilter<"ProductOptionValue"> | string
  value?: Prisma.StringFilter<"ProductOptionValue"> | string
  label?: Prisma.StringNullableFilter<"ProductOptionValue"> | string | null
  priceAdjustment?: Prisma.FloatNullableFilter<"ProductOptionValue"> | number | null
  sortOrder?: Prisma.IntFilter<"ProductOptionValue"> | number
  createdAt?: Prisma.DateTimeFilter<"ProductOptionValue"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ProductOptionValue"> | Date | string
  ProductOption?: Prisma.XOR<Prisma.ProductOptionScalarRelationFilter, Prisma.ProductOptionWhereInput>
}, "id">

export type ProductOptionValueOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  optionId?: Prisma.SortOrder
  value?: Prisma.SortOrder
  label?: Prisma.SortOrderInput | Prisma.SortOrder
  priceAdjustment?: Prisma.SortOrderInput | Prisma.SortOrder
  sortOrder?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.ProductOptionValueCountOrderByAggregateInput
  _avg?: Prisma.ProductOptionValueAvgOrderByAggregateInput
  _max?: Prisma.ProductOptionValueMaxOrderByAggregateInput
  _min?: Prisma.ProductOptionValueMinOrderByAggregateInput
  _sum?: Prisma.ProductOptionValueSumOrderByAggregateInput
}

export type ProductOptionValueScalarWhereWithAggregatesInput = {
  AND?: Prisma.ProductOptionValueScalarWhereWithAggregatesInput | Prisma.ProductOptionValueScalarWhereWithAggregatesInput[]
  OR?: Prisma.ProductOptionValueScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ProductOptionValueScalarWhereWithAggregatesInput | Prisma.ProductOptionValueScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"ProductOptionValue"> | string
  optionId?: Prisma.StringWithAggregatesFilter<"ProductOptionValue"> | string
  value?: Prisma.StringWithAggregatesFilter<"ProductOptionValue"> | string
  label?: Prisma.StringNullableWithAggregatesFilter<"ProductOptionValue"> | string | null
  priceAdjustment?: Prisma.FloatNullableWithAggregatesFilter<"ProductOptionValue"> | number | null
  sortOrder?: Prisma.IntWithAggregatesFilter<"ProductOptionValue"> | number
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ProductOptionValue"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"ProductOptionValue"> | Date | string
}

export type ProductOptionValueCreateInput = {
  id: string
  value: string
  label?: string | null
  priceAdjustment?: number | null
  sortOrder?: number
  createdAt?: Date | string
  updatedAt: Date | string
  ProductOption: Prisma.ProductOptionCreateNestedOneWithoutProductOptionValueInput
}

export type ProductOptionValueUncheckedCreateInput = {
  id: string
  optionId: string
  value: string
  label?: string | null
  priceAdjustment?: number | null
  sortOrder?: number
  createdAt?: Date | string
  updatedAt: Date | string
}

export type ProductOptionValueUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.StringFieldUpdateOperationsInput | string
  label?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priceAdjustment?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  ProductOption?: Prisma.ProductOptionUpdateOneRequiredWithoutProductOptionValueNestedInput
}

export type ProductOptionValueUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  optionId?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.StringFieldUpdateOperationsInput | string
  label?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priceAdjustment?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProductOptionValueCreateManyInput = {
  id: string
  optionId: string
  value: string
  label?: string | null
  priceAdjustment?: number | null
  sortOrder?: number
  createdAt?: Date | string
  updatedAt: Date | string
}

export type ProductOptionValueUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.StringFieldUpdateOperationsInput | string
  label?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priceAdjustment?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProductOptionValueUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  optionId?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.StringFieldUpdateOperationsInput | string
  label?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priceAdjustment?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProductOptionValueListRelationFilter = {
  every?: Prisma.ProductOptionValueWhereInput
  some?: Prisma.ProductOptionValueWhereInput
  none?: Prisma.ProductOptionValueWhereInput
}

export type ProductOptionValueOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ProductOptionValueCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  optionId?: Prisma.SortOrder
  value?: Prisma.SortOrder
  label?: Prisma.SortOrder
  priceAdjustment?: Prisma.SortOrder
  sortOrder?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProductOptionValueAvgOrderByAggregateInput = {
  priceAdjustment?: Prisma.SortOrder
  sortOrder?: Prisma.SortOrder
}

export type ProductOptionValueMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  optionId?: Prisma.SortOrder
  value?: Prisma.SortOrder
  label?: Prisma.SortOrder
  priceAdjustment?: Prisma.SortOrder
  sortOrder?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProductOptionValueMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  optionId?: Prisma.SortOrder
  value?: Prisma.SortOrder
  label?: Prisma.SortOrder
  priceAdjustment?: Prisma.SortOrder
  sortOrder?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProductOptionValueSumOrderByAggregateInput = {
  priceAdjustment?: Prisma.SortOrder
  sortOrder?: Prisma.SortOrder
}

export type ProductOptionValueCreateNestedManyWithoutProductOptionInput = {
  create?: Prisma.XOR<Prisma.ProductOptionValueCreateWithoutProductOptionInput, Prisma.ProductOptionValueUncheckedCreateWithoutProductOptionInput> | Prisma.ProductOptionValueCreateWithoutProductOptionInput[] | Prisma.ProductOptionValueUncheckedCreateWithoutProductOptionInput[]
  connectOrCreate?: Prisma.ProductOptionValueCreateOrConnectWithoutProductOptionInput | Prisma.ProductOptionValueCreateOrConnectWithoutProductOptionInput[]
  createMany?: Prisma.ProductOptionValueCreateManyProductOptionInputEnvelope
  connect?: Prisma.ProductOptionValueWhereUniqueInput | Prisma.ProductOptionValueWhereUniqueInput[]
}

export type ProductOptionValueUncheckedCreateNestedManyWithoutProductOptionInput = {
  create?: Prisma.XOR<Prisma.ProductOptionValueCreateWithoutProductOptionInput, Prisma.ProductOptionValueUncheckedCreateWithoutProductOptionInput> | Prisma.ProductOptionValueCreateWithoutProductOptionInput[] | Prisma.ProductOptionValueUncheckedCreateWithoutProductOptionInput[]
  connectOrCreate?: Prisma.ProductOptionValueCreateOrConnectWithoutProductOptionInput | Prisma.ProductOptionValueCreateOrConnectWithoutProductOptionInput[]
  createMany?: Prisma.ProductOptionValueCreateManyProductOptionInputEnvelope
  connect?: Prisma.ProductOptionValueWhereUniqueInput | Prisma.ProductOptionValueWhereUniqueInput[]
}

export type ProductOptionValueUpdateManyWithoutProductOptionNestedInput = {
  create?: Prisma.XOR<Prisma.ProductOptionValueCreateWithoutProductOptionInput, Prisma.ProductOptionValueUncheckedCreateWithoutProductOptionInput> | Prisma.ProductOptionValueCreateWithoutProductOptionInput[] | Prisma.ProductOptionValueUncheckedCreateWithoutProductOptionInput[]
  connectOrCreate?: Prisma.ProductOptionValueCreateOrConnectWithoutProductOptionInput | Prisma.ProductOptionValueCreateOrConnectWithoutProductOptionInput[]
  upsert?: Prisma.ProductOptionValueUpsertWithWhereUniqueWithoutProductOptionInput | Prisma.ProductOptionValueUpsertWithWhereUniqueWithoutProductOptionInput[]
  createMany?: Prisma.ProductOptionValueCreateManyProductOptionInputEnvelope
  set?: Prisma.ProductOptionValueWhereUniqueInput | Prisma.ProductOptionValueWhereUniqueInput[]
  disconnect?: Prisma.ProductOptionValueWhereUniqueInput | Prisma.ProductOptionValueWhereUniqueInput[]
  delete?: Prisma.ProductOptionValueWhereUniqueInput | Prisma.ProductOptionValueWhereUniqueInput[]
  connect?: Prisma.ProductOptionValueWhereUniqueInput | Prisma.ProductOptionValueWhereUniqueInput[]
  update?: Prisma.ProductOptionValueUpdateWithWhereUniqueWithoutProductOptionInput | Prisma.ProductOptionValueUpdateWithWhereUniqueWithoutProductOptionInput[]
  updateMany?: Prisma.ProductOptionValueUpdateManyWithWhereWithoutProductOptionInput | Prisma.ProductOptionValueUpdateManyWithWhereWithoutProductOptionInput[]
  deleteMany?: Prisma.ProductOptionValueScalarWhereInput | Prisma.ProductOptionValueScalarWhereInput[]
}

export type ProductOptionValueUncheckedUpdateManyWithoutProductOptionNestedInput = {
  create?: Prisma.XOR<Prisma.ProductOptionValueCreateWithoutProductOptionInput, Prisma.ProductOptionValueUncheckedCreateWithoutProductOptionInput> | Prisma.ProductOptionValueCreateWithoutProductOptionInput[] | Prisma.ProductOptionValueUncheckedCreateWithoutProductOptionInput[]
  connectOrCreate?: Prisma.ProductOptionValueCreateOrConnectWithoutProductOptionInput | Prisma.ProductOptionValueCreateOrConnectWithoutProductOptionInput[]
  upsert?: Prisma.ProductOptionValueUpsertWithWhereUniqueWithoutProductOptionInput | Prisma.ProductOptionValueUpsertWithWhereUniqueWithoutProductOptionInput[]
  createMany?: Prisma.ProductOptionValueCreateManyProductOptionInputEnvelope
  set?: Prisma.ProductOptionValueWhereUniqueInput | Prisma.ProductOptionValueWhereUniqueInput[]
  disconnect?: Prisma.ProductOptionValueWhereUniqueInput | Prisma.ProductOptionValueWhereUniqueInput[]
  delete?: Prisma.ProductOptionValueWhereUniqueInput | Prisma.ProductOptionValueWhereUniqueInput[]
  connect?: Prisma.ProductOptionValueWhereUniqueInput | Prisma.ProductOptionValueWhereUniqueInput[]
  update?: Prisma.ProductOptionValueUpdateWithWhereUniqueWithoutProductOptionInput | Prisma.ProductOptionValueUpdateWithWhereUniqueWithoutProductOptionInput[]
  updateMany?: Prisma.ProductOptionValueUpdateManyWithWhereWithoutProductOptionInput | Prisma.ProductOptionValueUpdateManyWithWhereWithoutProductOptionInput[]
  deleteMany?: Prisma.ProductOptionValueScalarWhereInput | Prisma.ProductOptionValueScalarWhereInput[]
}

export type ProductOptionValueCreateWithoutProductOptionInput = {
  id: string
  value: string
  label?: string | null
  priceAdjustment?: number | null
  sortOrder?: number
  createdAt?: Date | string
  updatedAt: Date | string
}

export type ProductOptionValueUncheckedCreateWithoutProductOptionInput = {
  id: string
  value: string
  label?: string | null
  priceAdjustment?: number | null
  sortOrder?: number
  createdAt?: Date | string
  updatedAt: Date | string
}

export type ProductOptionValueCreateOrConnectWithoutProductOptionInput = {
  where: Prisma.ProductOptionValueWhereUniqueInput
  create: Prisma.XOR<Prisma.ProductOptionValueCreateWithoutProductOptionInput, Prisma.ProductOptionValueUncheckedCreateWithoutProductOptionInput>
}

export type ProductOptionValueCreateManyProductOptionInputEnvelope = {
  data: Prisma.ProductOptionValueCreateManyProductOptionInput | Prisma.ProductOptionValueCreateManyProductOptionInput[]
  skipDuplicates?: boolean
}

export type ProductOptionValueUpsertWithWhereUniqueWithoutProductOptionInput = {
  where: Prisma.ProductOptionValueWhereUniqueInput
  update: Prisma.XOR<Prisma.ProductOptionValueUpdateWithoutProductOptionInput, Prisma.ProductOptionValueUncheckedUpdateWithoutProductOptionInput>
  create: Prisma.XOR<Prisma.ProductOptionValueCreateWithoutProductOptionInput, Prisma.ProductOptionValueUncheckedCreateWithoutProductOptionInput>
}

export type ProductOptionValueUpdateWithWhereUniqueWithoutProductOptionInput = {
  where: Prisma.ProductOptionValueWhereUniqueInput
  data: Prisma.XOR<Prisma.ProductOptionValueUpdateWithoutProductOptionInput, Prisma.ProductOptionValueUncheckedUpdateWithoutProductOptionInput>
}

export type ProductOptionValueUpdateManyWithWhereWithoutProductOptionInput = {
  where: Prisma.ProductOptionValueScalarWhereInput
  data: Prisma.XOR<Prisma.ProductOptionValueUpdateManyMutationInput, Prisma.ProductOptionValueUncheckedUpdateManyWithoutProductOptionInput>
}

export type ProductOptionValueScalarWhereInput = {
  AND?: Prisma.ProductOptionValueScalarWhereInput | Prisma.ProductOptionValueScalarWhereInput[]
  OR?: Prisma.ProductOptionValueScalarWhereInput[]
  NOT?: Prisma.ProductOptionValueScalarWhereInput | Prisma.ProductOptionValueScalarWhereInput[]
  id?: Prisma.StringFilter<"ProductOptionValue"> | string
  optionId?: Prisma.StringFilter<"ProductOptionValue"> | string
  value?: Prisma.StringFilter<"ProductOptionValue"> | string
  label?: Prisma.StringNullableFilter<"ProductOptionValue"> | string | null
  priceAdjustment?: Prisma.FloatNullableFilter<"ProductOptionValue"> | number | null
  sortOrder?: Prisma.IntFilter<"ProductOptionValue"> | number
  createdAt?: Prisma.DateTimeFilter<"ProductOptionValue"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ProductOptionValue"> | Date | string
}

export type ProductOptionValueCreateManyProductOptionInput = {
  id: string
  value: string
  label?: string | null
  priceAdjustment?: number | null
  sortOrder?: number
  createdAt?: Date | string
  updatedAt: Date | string
}

export type ProductOptionValueUpdateWithoutProductOptionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.StringFieldUpdateOperationsInput | string
  label?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priceAdjustment?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProductOptionValueUncheckedUpdateWithoutProductOptionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.StringFieldUpdateOperationsInput | string
  label?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priceAdjustment?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProductOptionValueUncheckedUpdateManyWithoutProductOptionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.StringFieldUpdateOperationsInput | string
  label?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priceAdjustment?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type ProductOptionValueSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  optionId?: boolean
  value?: boolean
  label?: boolean
  priceAdjustment?: boolean
  sortOrder?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  ProductOption?: boolean | Prisma.ProductOptionDefaultArgs<ExtArgs>
}, ExtArgs["result"]["productOptionValue"]>

export type ProductOptionValueSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  optionId?: boolean
  value?: boolean
  label?: boolean
  priceAdjustment?: boolean
  sortOrder?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  ProductOption?: boolean | Prisma.ProductOptionDefaultArgs<ExtArgs>
}, ExtArgs["result"]["productOptionValue"]>

export type ProductOptionValueSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  optionId?: boolean
  value?: boolean
  label?: boolean
  priceAdjustment?: boolean
  sortOrder?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  ProductOption?: boolean | Prisma.ProductOptionDefaultArgs<ExtArgs>
}, ExtArgs["result"]["productOptionValue"]>

export type ProductOptionValueSelectScalar = {
  id?: boolean
  optionId?: boolean
  value?: boolean
  label?: boolean
  priceAdjustment?: boolean
  sortOrder?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type ProductOptionValueOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "optionId" | "value" | "label" | "priceAdjustment" | "sortOrder" | "createdAt" | "updatedAt", ExtArgs["result"]["productOptionValue"]>
export type ProductOptionValueInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  ProductOption?: boolean | Prisma.ProductOptionDefaultArgs<ExtArgs>
}
export type ProductOptionValueIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  ProductOption?: boolean | Prisma.ProductOptionDefaultArgs<ExtArgs>
}
export type ProductOptionValueIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  ProductOption?: boolean | Prisma.ProductOptionDefaultArgs<ExtArgs>
}

export type $ProductOptionValuePayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ProductOptionValue"
  objects: {
    ProductOption: Prisma.$ProductOptionPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    optionId: string
    value: string
    label: string | null
    priceAdjustment: number | null
    sortOrder: number
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["productOptionValue"]>
  composites: {}
}

export type ProductOptionValueGetPayload<S extends boolean | null | undefined | ProductOptionValueDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ProductOptionValuePayload, S>

export type ProductOptionValueCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ProductOptionValueFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ProductOptionValueCountAggregateInputType | true
  }

export interface ProductOptionValueDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductOptionValue'], meta: { name: 'ProductOptionValue' } }
  /**
   * Find zero or one ProductOptionValue that matches the filter.
   * @param {ProductOptionValueFindUniqueArgs} args - Arguments to find a ProductOptionValue
   * @example
   * // Get one ProductOptionValue
   * const productOptionValue = await prisma.productOptionValue.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ProductOptionValueFindUniqueArgs>(args: Prisma.SelectSubset<T, ProductOptionValueFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ProductOptionValueClient<runtime.Types.Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ProductOptionValue that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ProductOptionValueFindUniqueOrThrowArgs} args - Arguments to find a ProductOptionValue
   * @example
   * // Get one ProductOptionValue
   * const productOptionValue = await prisma.productOptionValue.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ProductOptionValueFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ProductOptionValueFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProductOptionValueClient<runtime.Types.Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ProductOptionValue that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProductOptionValueFindFirstArgs} args - Arguments to find a ProductOptionValue
   * @example
   * // Get one ProductOptionValue
   * const productOptionValue = await prisma.productOptionValue.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ProductOptionValueFindFirstArgs>(args?: Prisma.SelectSubset<T, ProductOptionValueFindFirstArgs<ExtArgs>>): Prisma.Prisma__ProductOptionValueClient<runtime.Types.Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ProductOptionValue that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProductOptionValueFindFirstOrThrowArgs} args - Arguments to find a ProductOptionValue
   * @example
   * // Get one ProductOptionValue
   * const productOptionValue = await prisma.productOptionValue.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ProductOptionValueFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ProductOptionValueFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProductOptionValueClient<runtime.Types.Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ProductOptionValues that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProductOptionValueFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ProductOptionValues
   * const productOptionValues = await prisma.productOptionValue.findMany()
   * 
   * // Get first 10 ProductOptionValues
   * const productOptionValues = await prisma.productOptionValue.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const productOptionValueWithIdOnly = await prisma.productOptionValue.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ProductOptionValueFindManyArgs>(args?: Prisma.SelectSubset<T, ProductOptionValueFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ProductOptionValue.
   * @param {ProductOptionValueCreateArgs} args - Arguments to create a ProductOptionValue.
   * @example
   * // Create one ProductOptionValue
   * const ProductOptionValue = await prisma.productOptionValue.create({
   *   data: {
   *     // ... data to create a ProductOptionValue
   *   }
   * })
   * 
   */
  create<T extends ProductOptionValueCreateArgs>(args: Prisma.SelectSubset<T, ProductOptionValueCreateArgs<ExtArgs>>): Prisma.Prisma__ProductOptionValueClient<runtime.Types.Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ProductOptionValues.
   * @param {ProductOptionValueCreateManyArgs} args - Arguments to create many ProductOptionValues.
   * @example
   * // Create many ProductOptionValues
   * const productOptionValue = await prisma.productOptionValue.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ProductOptionValueCreateManyArgs>(args?: Prisma.SelectSubset<T, ProductOptionValueCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ProductOptionValues and returns the data saved in the database.
   * @param {ProductOptionValueCreateManyAndReturnArgs} args - Arguments to create many ProductOptionValues.
   * @example
   * // Create many ProductOptionValues
   * const productOptionValue = await prisma.productOptionValue.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ProductOptionValues and only return the `id`
   * const productOptionValueWithIdOnly = await prisma.productOptionValue.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ProductOptionValueCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ProductOptionValueCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ProductOptionValue.
   * @param {ProductOptionValueDeleteArgs} args - Arguments to delete one ProductOptionValue.
   * @example
   * // Delete one ProductOptionValue
   * const ProductOptionValue = await prisma.productOptionValue.delete({
   *   where: {
   *     // ... filter to delete one ProductOptionValue
   *   }
   * })
   * 
   */
  delete<T extends ProductOptionValueDeleteArgs>(args: Prisma.SelectSubset<T, ProductOptionValueDeleteArgs<ExtArgs>>): Prisma.Prisma__ProductOptionValueClient<runtime.Types.Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ProductOptionValue.
   * @param {ProductOptionValueUpdateArgs} args - Arguments to update one ProductOptionValue.
   * @example
   * // Update one ProductOptionValue
   * const productOptionValue = await prisma.productOptionValue.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ProductOptionValueUpdateArgs>(args: Prisma.SelectSubset<T, ProductOptionValueUpdateArgs<ExtArgs>>): Prisma.Prisma__ProductOptionValueClient<runtime.Types.Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ProductOptionValues.
   * @param {ProductOptionValueDeleteManyArgs} args - Arguments to filter ProductOptionValues to delete.
   * @example
   * // Delete a few ProductOptionValues
   * const { count } = await prisma.productOptionValue.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ProductOptionValueDeleteManyArgs>(args?: Prisma.SelectSubset<T, ProductOptionValueDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ProductOptionValues.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProductOptionValueUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ProductOptionValues
   * const productOptionValue = await prisma.productOptionValue.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ProductOptionValueUpdateManyArgs>(args: Prisma.SelectSubset<T, ProductOptionValueUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ProductOptionValues and returns the data updated in the database.
   * @param {ProductOptionValueUpdateManyAndReturnArgs} args - Arguments to update many ProductOptionValues.
   * @example
   * // Update many ProductOptionValues
   * const productOptionValue = await prisma.productOptionValue.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ProductOptionValues and only return the `id`
   * const productOptionValueWithIdOnly = await prisma.productOptionValue.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ProductOptionValueUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ProductOptionValueUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ProductOptionValue.
   * @param {ProductOptionValueUpsertArgs} args - Arguments to update or create a ProductOptionValue.
   * @example
   * // Update or create a ProductOptionValue
   * const productOptionValue = await prisma.productOptionValue.upsert({
   *   create: {
   *     // ... data to create a ProductOptionValue
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ProductOptionValue we want to update
   *   }
   * })
   */
  upsert<T extends ProductOptionValueUpsertArgs>(args: Prisma.SelectSubset<T, ProductOptionValueUpsertArgs<ExtArgs>>): Prisma.Prisma__ProductOptionValueClient<runtime.Types.Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ProductOptionValues.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProductOptionValueCountArgs} args - Arguments to filter ProductOptionValues to count.
   * @example
   * // Count the number of ProductOptionValues
   * const count = await prisma.productOptionValue.count({
   *   where: {
   *     // ... the filter for the ProductOptionValues we want to count
   *   }
   * })
  **/
  count<T extends ProductOptionValueCountArgs>(
    args?: Prisma.Subset<T, ProductOptionValueCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ProductOptionValueCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ProductOptionValue.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProductOptionValueAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ProductOptionValueAggregateArgs>(args: Prisma.Subset<T, ProductOptionValueAggregateArgs>): Prisma.PrismaPromise<GetProductOptionValueAggregateType<T>>

  /**
   * Group by ProductOptionValue.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProductOptionValueGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ProductOptionValueGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ProductOptionValueGroupByArgs['orderBy'] }
      : { orderBy?: ProductOptionValueGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ProductOptionValueGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductOptionValueGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ProductOptionValue model
 */
readonly fields: ProductOptionValueFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ProductOptionValue.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ProductOptionValueClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  ProductOption<T extends Prisma.ProductOptionDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProductOptionDefaultArgs<ExtArgs>>): Prisma.Prisma__ProductOptionClient<runtime.Types.Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ProductOptionValue model
 */
export interface ProductOptionValueFieldRefs {
  readonly id: Prisma.FieldRef<"ProductOptionValue", 'String'>
  readonly optionId: Prisma.FieldRef<"ProductOptionValue", 'String'>
  readonly value: Prisma.FieldRef<"ProductOptionValue", 'String'>
  readonly label: Prisma.FieldRef<"ProductOptionValue", 'String'>
  readonly priceAdjustment: Prisma.FieldRef<"ProductOptionValue", 'Float'>
  readonly sortOrder: Prisma.FieldRef<"ProductOptionValue", 'Int'>
  readonly createdAt: Prisma.FieldRef<"ProductOptionValue", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"ProductOptionValue", 'DateTime'>
}
    

// Custom InputTypes
/**
 * ProductOptionValue findUnique
 */
export type ProductOptionValueFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOptionValue
   */
  select?: Prisma.ProductOptionValueSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOptionValue
   */
  omit?: Prisma.ProductOptionValueOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionValueInclude<ExtArgs> | null
  /**
   * Filter, which ProductOptionValue to fetch.
   */
  where: Prisma.ProductOptionValueWhereUniqueInput
}

/**
 * ProductOptionValue findUniqueOrThrow
 */
export type ProductOptionValueFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOptionValue
   */
  select?: Prisma.ProductOptionValueSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOptionValue
   */
  omit?: Prisma.ProductOptionValueOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionValueInclude<ExtArgs> | null
  /**
   * Filter, which ProductOptionValue to fetch.
   */
  where: Prisma.ProductOptionValueWhereUniqueInput
}

/**
 * ProductOptionValue findFirst
 */
export type ProductOptionValueFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOptionValue
   */
  select?: Prisma.ProductOptionValueSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOptionValue
   */
  omit?: Prisma.ProductOptionValueOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionValueInclude<ExtArgs> | null
  /**
   * Filter, which ProductOptionValue to fetch.
   */
  where?: Prisma.ProductOptionValueWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProductOptionValues to fetch.
   */
  orderBy?: Prisma.ProductOptionValueOrderByWithRelationInput | Prisma.ProductOptionValueOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ProductOptionValues.
   */
  cursor?: Prisma.ProductOptionValueWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProductOptionValues from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProductOptionValues.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ProductOptionValues.
   */
  distinct?: Prisma.ProductOptionValueScalarFieldEnum | Prisma.ProductOptionValueScalarFieldEnum[]
}

/**
 * ProductOptionValue findFirstOrThrow
 */
export type ProductOptionValueFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOptionValue
   */
  select?: Prisma.ProductOptionValueSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOptionValue
   */
  omit?: Prisma.ProductOptionValueOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionValueInclude<ExtArgs> | null
  /**
   * Filter, which ProductOptionValue to fetch.
   */
  where?: Prisma.ProductOptionValueWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProductOptionValues to fetch.
   */
  orderBy?: Prisma.ProductOptionValueOrderByWithRelationInput | Prisma.ProductOptionValueOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ProductOptionValues.
   */
  cursor?: Prisma.ProductOptionValueWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProductOptionValues from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProductOptionValues.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ProductOptionValues.
   */
  distinct?: Prisma.ProductOptionValueScalarFieldEnum | Prisma.ProductOptionValueScalarFieldEnum[]
}

/**
 * ProductOptionValue findMany
 */
export type ProductOptionValueFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOptionValue
   */
  select?: Prisma.ProductOptionValueSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOptionValue
   */
  omit?: Prisma.ProductOptionValueOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionValueInclude<ExtArgs> | null
  /**
   * Filter, which ProductOptionValues to fetch.
   */
  where?: Prisma.ProductOptionValueWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProductOptionValues to fetch.
   */
  orderBy?: Prisma.ProductOptionValueOrderByWithRelationInput | Prisma.ProductOptionValueOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ProductOptionValues.
   */
  cursor?: Prisma.ProductOptionValueWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProductOptionValues from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProductOptionValues.
   */
  skip?: number
  distinct?: Prisma.ProductOptionValueScalarFieldEnum | Prisma.ProductOptionValueScalarFieldEnum[]
}

/**
 * ProductOptionValue create
 */
export type ProductOptionValueCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOptionValue
   */
  select?: Prisma.ProductOptionValueSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOptionValue
   */
  omit?: Prisma.ProductOptionValueOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionValueInclude<ExtArgs> | null
  /**
   * The data needed to create a ProductOptionValue.
   */
  data: Prisma.XOR<Prisma.ProductOptionValueCreateInput, Prisma.ProductOptionValueUncheckedCreateInput>
}

/**
 * ProductOptionValue createMany
 */
export type ProductOptionValueCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ProductOptionValues.
   */
  data: Prisma.ProductOptionValueCreateManyInput | Prisma.ProductOptionValueCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ProductOptionValue createManyAndReturn
 */
export type ProductOptionValueCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOptionValue
   */
  select?: Prisma.ProductOptionValueSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOptionValue
   */
  omit?: Prisma.ProductOptionValueOmit<ExtArgs> | null
  /**
   * The data used to create many ProductOptionValues.
   */
  data: Prisma.ProductOptionValueCreateManyInput | Prisma.ProductOptionValueCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionValueIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * ProductOptionValue update
 */
export type ProductOptionValueUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOptionValue
   */
  select?: Prisma.ProductOptionValueSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOptionValue
   */
  omit?: Prisma.ProductOptionValueOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionValueInclude<ExtArgs> | null
  /**
   * The data needed to update a ProductOptionValue.
   */
  data: Prisma.XOR<Prisma.ProductOptionValueUpdateInput, Prisma.ProductOptionValueUncheckedUpdateInput>
  /**
   * Choose, which ProductOptionValue to update.
   */
  where: Prisma.ProductOptionValueWhereUniqueInput
}

/**
 * ProductOptionValue updateMany
 */
export type ProductOptionValueUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ProductOptionValues.
   */
  data: Prisma.XOR<Prisma.ProductOptionValueUpdateManyMutationInput, Prisma.ProductOptionValueUncheckedUpdateManyInput>
  /**
   * Filter which ProductOptionValues to update
   */
  where?: Prisma.ProductOptionValueWhereInput
  /**
   * Limit how many ProductOptionValues to update.
   */
  limit?: number
}

/**
 * ProductOptionValue updateManyAndReturn
 */
export type ProductOptionValueUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOptionValue
   */
  select?: Prisma.ProductOptionValueSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOptionValue
   */
  omit?: Prisma.ProductOptionValueOmit<ExtArgs> | null
  /**
   * The data used to update ProductOptionValues.
   */
  data: Prisma.XOR<Prisma.ProductOptionValueUpdateManyMutationInput, Prisma.ProductOptionValueUncheckedUpdateManyInput>
  /**
   * Filter which ProductOptionValues to update
   */
  where?: Prisma.ProductOptionValueWhereInput
  /**
   * Limit how many ProductOptionValues to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionValueIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * ProductOptionValue upsert
 */
export type ProductOptionValueUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOptionValue
   */
  select?: Prisma.ProductOptionValueSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOptionValue
   */
  omit?: Prisma.ProductOptionValueOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionValueInclude<ExtArgs> | null
  /**
   * The filter to search for the ProductOptionValue to update in case it exists.
   */
  where: Prisma.ProductOptionValueWhereUniqueInput
  /**
   * In case the ProductOptionValue found by the `where` argument doesn't exist, create a new ProductOptionValue with this data.
   */
  create: Prisma.XOR<Prisma.ProductOptionValueCreateInput, Prisma.ProductOptionValueUncheckedCreateInput>
  /**
   * In case the ProductOptionValue was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ProductOptionValueUpdateInput, Prisma.ProductOptionValueUncheckedUpdateInput>
}

/**
 * ProductOptionValue delete
 */
export type ProductOptionValueDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOptionValue
   */
  select?: Prisma.ProductOptionValueSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOptionValue
   */
  omit?: Prisma.ProductOptionValueOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionValueInclude<ExtArgs> | null
  /**
   * Filter which ProductOptionValue to delete.
   */
  where: Prisma.ProductOptionValueWhereUniqueInput
}

/**
 * ProductOptionValue deleteMany
 */
export type ProductOptionValueDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ProductOptionValues to delete
   */
  where?: Prisma.ProductOptionValueWhereInput
  /**
   * Limit how many ProductOptionValues to delete.
   */
  limit?: number
}

/**
 * ProductOptionValue without action
 */
export type ProductOptionValueDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOptionValue
   */
  select?: Prisma.ProductOptionValueSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOptionValue
   */
  omit?: Prisma.ProductOptionValueOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionValueInclude<ExtArgs> | null
}
