
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `ProductOption` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model ProductOption
 * 
 */
export type ProductOptionModel = runtime.Types.Result.DefaultSelection<Prisma.$ProductOptionPayload>

export type AggregateProductOption = {
  _count: ProductOptionCountAggregateOutputType | null
  _avg: ProductOptionAvgAggregateOutputType | null
  _sum: ProductOptionSumAggregateOutputType | null
  _min: ProductOptionMinAggregateOutputType | null
  _max: ProductOptionMaxAggregateOutputType | null
}

export type ProductOptionAvgAggregateOutputType = {
  sortOrder: number | null
}

export type ProductOptionSumAggregateOutputType = {
  sortOrder: number | null
}

export type ProductOptionMinAggregateOutputType = {
  id: string | null
  productId: string | null
  name: string | null
  type: string | null
  required: boolean | null
  sortOrder: number | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ProductOptionMaxAggregateOutputType = {
  id: string | null
  productId: string | null
  name: string | null
  type: string | null
  required: boolean | null
  sortOrder: number | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type ProductOptionCountAggregateOutputType = {
  id: number
  productId: number
  name: number
  type: number
  required: number
  sortOrder: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type ProductOptionAvgAggregateInputType = {
  sortOrder?: true
}

export type ProductOptionSumAggregateInputType = {
  sortOrder?: true
}

export type ProductOptionMinAggregateInputType = {
  id?: true
  productId?: true
  name?: true
  type?: true
  required?: true
  sortOrder?: true
  createdAt?: true
  updatedAt?: true
}

export type ProductOptionMaxAggregateInputType = {
  id?: true
  productId?: true
  name?: true
  type?: true
  required?: true
  sortOrder?: true
  createdAt?: true
  updatedAt?: true
}

export type ProductOptionCountAggregateInputType = {
  id?: true
  productId?: true
  name?: true
  type?: true
  required?: true
  sortOrder?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type ProductOptionAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ProductOption to aggregate.
   */
  where?: Prisma.ProductOptionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProductOptions to fetch.
   */
  orderBy?: Prisma.ProductOptionOrderByWithRelationInput | Prisma.ProductOptionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.ProductOptionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProductOptions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProductOptions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned ProductOptions
  **/
  _count?: true | ProductOptionCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: ProductOptionAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: ProductOptionSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: ProductOptionMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: ProductOptionMaxAggregateInputType
}

export type GetProductOptionAggregateType<T extends ProductOptionAggregateArgs> = {
      [P in keyof T & keyof AggregateProductOption]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateProductOption[P]>
    : Prisma.GetScalarType<T[P], AggregateProductOption[P]>
}




export type ProductOptionGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProductOptionWhereInput
  orderBy?: Prisma.ProductOptionOrderByWithAggregationInput | Prisma.ProductOptionOrderByWithAggregationInput[]
  by: Prisma.ProductOptionScalarFieldEnum[] | Prisma.ProductOptionScalarFieldEnum
  having?: Prisma.ProductOptionScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: ProductOptionCountAggregateInputType | true
  _avg?: ProductOptionAvgAggregateInputType
  _sum?: ProductOptionSumAggregateInputType
  _min?: ProductOptionMinAggregateInputType
  _max?: ProductOptionMaxAggregateInputType
}

export type ProductOptionGroupByOutputType = {
  id: string
  productId: string
  name: string
  type: string
  required: boolean
  sortOrder: number
  createdAt: Date
  updatedAt: Date
  _count: ProductOptionCountAggregateOutputType | null
  _avg: ProductOptionAvgAggregateOutputType | null
  _sum: ProductOptionSumAggregateOutputType | null
  _min: ProductOptionMinAggregateOutputType | null
  _max: ProductOptionMaxAggregateOutputType | null
}

type GetProductOptionGroupByPayload<T extends ProductOptionGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<ProductOptionGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof ProductOptionGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], ProductOptionGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], ProductOptionGroupByOutputType[P]>
      }
    >
  > 



export type ProductOptionWhereInput = {
  AND?: Prisma.ProductOptionWhereInput | Prisma.ProductOptionWhereInput[]
  OR?: Prisma.ProductOptionWhereInput[]
  NOT?: Prisma.ProductOptionWhereInput | Prisma.ProductOptionWhereInput[]
  id?: Prisma.StringFilter<"ProductOption"> | string
  productId?: Prisma.StringFilter<"ProductOption"> | string
  name?: Prisma.StringFilter<"ProductOption"> | string
  type?: Prisma.StringFilter<"ProductOption"> | string
  required?: Prisma.BoolFilter<"ProductOption"> | boolean
  sortOrder?: Prisma.IntFilter<"ProductOption"> | number
  createdAt?: Prisma.DateTimeFilter<"ProductOption"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ProductOption"> | Date | string
  EventItemOption?: Prisma.EventItemOptionListRelationFilter
  OrderItemOption?: Prisma.OrderItemOptionListRelationFilter
  Product?: Prisma.XOR<Prisma.ProductScalarRelationFilter, Prisma.ProductWhereInput>
  ProductOptionValue?: Prisma.ProductOptionValueListRelationFilter
}

export type ProductOptionOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  type?: Prisma.SortOrder
  required?: Prisma.SortOrder
  sortOrder?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  EventItemOption?: Prisma.EventItemOptionOrderByRelationAggregateInput
  OrderItemOption?: Prisma.OrderItemOptionOrderByRelationAggregateInput
  Product?: Prisma.ProductOrderByWithRelationInput
  ProductOptionValue?: Prisma.ProductOptionValueOrderByRelationAggregateInput
}

export type ProductOptionWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.ProductOptionWhereInput | Prisma.ProductOptionWhereInput[]
  OR?: Prisma.ProductOptionWhereInput[]
  NOT?: Prisma.ProductOptionWhereInput | Prisma.ProductOptionWhereInput[]
  productId?: Prisma.StringFilter<"ProductOption"> | string
  name?: Prisma.StringFilter<"ProductOption"> | string
  type?: Prisma.StringFilter<"ProductOption"> | string
  required?: Prisma.BoolFilter<"ProductOption"> | boolean
  sortOrder?: Prisma.IntFilter<"ProductOption"> | number
  createdAt?: Prisma.DateTimeFilter<"ProductOption"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ProductOption"> | Date | string
  EventItemOption?: Prisma.EventItemOptionListRelationFilter
  OrderItemOption?: Prisma.OrderItemOptionListRelationFilter
  Product?: Prisma.XOR<Prisma.ProductScalarRelationFilter, Prisma.ProductWhereInput>
  ProductOptionValue?: Prisma.ProductOptionValueListRelationFilter
}, "id">

export type ProductOptionOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  type?: Prisma.SortOrder
  required?: Prisma.SortOrder
  sortOrder?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.ProductOptionCountOrderByAggregateInput
  _avg?: Prisma.ProductOptionAvgOrderByAggregateInput
  _max?: Prisma.ProductOptionMaxOrderByAggregateInput
  _min?: Prisma.ProductOptionMinOrderByAggregateInput
  _sum?: Prisma.ProductOptionSumOrderByAggregateInput
}

export type ProductOptionScalarWhereWithAggregatesInput = {
  AND?: Prisma.ProductOptionScalarWhereWithAggregatesInput | Prisma.ProductOptionScalarWhereWithAggregatesInput[]
  OR?: Prisma.ProductOptionScalarWhereWithAggregatesInput[]
  NOT?: Prisma.ProductOptionScalarWhereWithAggregatesInput | Prisma.ProductOptionScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"ProductOption"> | string
  productId?: Prisma.StringWithAggregatesFilter<"ProductOption"> | string
  name?: Prisma.StringWithAggregatesFilter<"ProductOption"> | string
  type?: Prisma.StringWithAggregatesFilter<"ProductOption"> | string
  required?: Prisma.BoolWithAggregatesFilter<"ProductOption"> | boolean
  sortOrder?: Prisma.IntWithAggregatesFilter<"ProductOption"> | number
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"ProductOption"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"ProductOption"> | Date | string
}

export type ProductOptionCreateInput = {
  id: string
  name: string
  type: string
  required?: boolean
  sortOrder?: number
  createdAt?: Date | string
  updatedAt: Date | string
  EventItemOption?: Prisma.EventItemOptionCreateNestedManyWithoutProductOptionInput
  OrderItemOption?: Prisma.OrderItemOptionCreateNestedManyWithoutProductOptionInput
  Product: Prisma.ProductCreateNestedOneWithoutProductOptionInput
  ProductOptionValue?: Prisma.ProductOptionValueCreateNestedManyWithoutProductOptionInput
}

export type ProductOptionUncheckedCreateInput = {
  id: string
  productId: string
  name: string
  type: string
  required?: boolean
  sortOrder?: number
  createdAt?: Date | string
  updatedAt: Date | string
  EventItemOption?: Prisma.EventItemOptionUncheckedCreateNestedManyWithoutProductOptionInput
  OrderItemOption?: Prisma.OrderItemOptionUncheckedCreateNestedManyWithoutProductOptionInput
  ProductOptionValue?: Prisma.ProductOptionValueUncheckedCreateNestedManyWithoutProductOptionInput
}

export type ProductOptionUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  required?: Prisma.BoolFieldUpdateOperationsInput | boolean
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  EventItemOption?: Prisma.EventItemOptionUpdateManyWithoutProductOptionNestedInput
  OrderItemOption?: Prisma.OrderItemOptionUpdateManyWithoutProductOptionNestedInput
  Product?: Prisma.ProductUpdateOneRequiredWithoutProductOptionNestedInput
  ProductOptionValue?: Prisma.ProductOptionValueUpdateManyWithoutProductOptionNestedInput
}

export type ProductOptionUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  required?: Prisma.BoolFieldUpdateOperationsInput | boolean
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  EventItemOption?: Prisma.EventItemOptionUncheckedUpdateManyWithoutProductOptionNestedInput
  OrderItemOption?: Prisma.OrderItemOptionUncheckedUpdateManyWithoutProductOptionNestedInput
  ProductOptionValue?: Prisma.ProductOptionValueUncheckedUpdateManyWithoutProductOptionNestedInput
}

export type ProductOptionCreateManyInput = {
  id: string
  productId: string
  name: string
  type: string
  required?: boolean
  sortOrder?: number
  createdAt?: Date | string
  updatedAt: Date | string
}

export type ProductOptionUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  required?: Prisma.BoolFieldUpdateOperationsInput | boolean
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProductOptionUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  required?: Prisma.BoolFieldUpdateOperationsInput | boolean
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type ProductOptionListRelationFilter = {
  every?: Prisma.ProductOptionWhereInput
  some?: Prisma.ProductOptionWhereInput
  none?: Prisma.ProductOptionWhereInput
}

export type ProductOptionOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type ProductOptionScalarRelationFilter = {
  is?: Prisma.ProductOptionWhereInput
  isNot?: Prisma.ProductOptionWhereInput
}

export type ProductOptionCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  type?: Prisma.SortOrder
  required?: Prisma.SortOrder
  sortOrder?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProductOptionAvgOrderByAggregateInput = {
  sortOrder?: Prisma.SortOrder
}

export type ProductOptionMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  type?: Prisma.SortOrder
  required?: Prisma.SortOrder
  sortOrder?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProductOptionMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  type?: Prisma.SortOrder
  required?: Prisma.SortOrder
  sortOrder?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type ProductOptionSumOrderByAggregateInput = {
  sortOrder?: Prisma.SortOrder
}

export type ProductOptionCreateNestedManyWithoutProductInput = {
  create?: Prisma.XOR<Prisma.ProductOptionCreateWithoutProductInput, Prisma.ProductOptionUncheckedCreateWithoutProductInput> | Prisma.ProductOptionCreateWithoutProductInput[] | Prisma.ProductOptionUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.ProductOptionCreateOrConnectWithoutProductInput | Prisma.ProductOptionCreateOrConnectWithoutProductInput[]
  createMany?: Prisma.ProductOptionCreateManyProductInputEnvelope
  connect?: Prisma.ProductOptionWhereUniqueInput | Prisma.ProductOptionWhereUniqueInput[]
}

export type ProductOptionUncheckedCreateNestedManyWithoutProductInput = {
  create?: Prisma.XOR<Prisma.ProductOptionCreateWithoutProductInput, Prisma.ProductOptionUncheckedCreateWithoutProductInput> | Prisma.ProductOptionCreateWithoutProductInput[] | Prisma.ProductOptionUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.ProductOptionCreateOrConnectWithoutProductInput | Prisma.ProductOptionCreateOrConnectWithoutProductInput[]
  createMany?: Prisma.ProductOptionCreateManyProductInputEnvelope
  connect?: Prisma.ProductOptionWhereUniqueInput | Prisma.ProductOptionWhereUniqueInput[]
}

export type ProductOptionUpdateManyWithoutProductNestedInput = {
  create?: Prisma.XOR<Prisma.ProductOptionCreateWithoutProductInput, Prisma.ProductOptionUncheckedCreateWithoutProductInput> | Prisma.ProductOptionCreateWithoutProductInput[] | Prisma.ProductOptionUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.ProductOptionCreateOrConnectWithoutProductInput | Prisma.ProductOptionCreateOrConnectWithoutProductInput[]
  upsert?: Prisma.ProductOptionUpsertWithWhereUniqueWithoutProductInput | Prisma.ProductOptionUpsertWithWhereUniqueWithoutProductInput[]
  createMany?: Prisma.ProductOptionCreateManyProductInputEnvelope
  set?: Prisma.ProductOptionWhereUniqueInput | Prisma.ProductOptionWhereUniqueInput[]
  disconnect?: Prisma.ProductOptionWhereUniqueInput | Prisma.ProductOptionWhereUniqueInput[]
  delete?: Prisma.ProductOptionWhereUniqueInput | Prisma.ProductOptionWhereUniqueInput[]
  connect?: Prisma.ProductOptionWhereUniqueInput | Prisma.ProductOptionWhereUniqueInput[]
  update?: Prisma.ProductOptionUpdateWithWhereUniqueWithoutProductInput | Prisma.ProductOptionUpdateWithWhereUniqueWithoutProductInput[]
  updateMany?: Prisma.ProductOptionUpdateManyWithWhereWithoutProductInput | Prisma.ProductOptionUpdateManyWithWhereWithoutProductInput[]
  deleteMany?: Prisma.ProductOptionScalarWhereInput | Prisma.ProductOptionScalarWhereInput[]
}

export type ProductOptionUncheckedUpdateManyWithoutProductNestedInput = {
  create?: Prisma.XOR<Prisma.ProductOptionCreateWithoutProductInput, Prisma.ProductOptionUncheckedCreateWithoutProductInput> | Prisma.ProductOptionCreateWithoutProductInput[] | Prisma.ProductOptionUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.ProductOptionCreateOrConnectWithoutProductInput | Prisma.ProductOptionCreateOrConnectWithoutProductInput[]
  upsert?: Prisma.ProductOptionUpsertWithWhereUniqueWithoutProductInput | Prisma.ProductOptionUpsertWithWhereUniqueWithoutProductInput[]
  createMany?: Prisma.ProductOptionCreateManyProductInputEnvelope
  set?: Prisma.ProductOptionWhereUniqueInput | Prisma.ProductOptionWhereUniqueInput[]
  disconnect?: Prisma.ProductOptionWhereUniqueInput | Prisma.ProductOptionWhereUniqueInput[]
  delete?: Prisma.ProductOptionWhereUniqueInput | Prisma.ProductOptionWhereUniqueInput[]
  connect?: Prisma.ProductOptionWhereUniqueInput | Prisma.ProductOptionWhereUniqueInput[]
  update?: Prisma.ProductOptionUpdateWithWhereUniqueWithoutProductInput | Prisma.ProductOptionUpdateWithWhereUniqueWithoutProductInput[]
  updateMany?: Prisma.ProductOptionUpdateManyWithWhereWithoutProductInput | Prisma.ProductOptionUpdateManyWithWhereWithoutProductInput[]
  deleteMany?: Prisma.ProductOptionScalarWhereInput | Prisma.ProductOptionScalarWhereInput[]
}

export type ProductOptionCreateNestedOneWithoutEventItemOptionInput = {
  create?: Prisma.XOR<Prisma.ProductOptionCreateWithoutEventItemOptionInput, Prisma.ProductOptionUncheckedCreateWithoutEventItemOptionInput>
  connectOrCreate?: Prisma.ProductOptionCreateOrConnectWithoutEventItemOptionInput
  connect?: Prisma.ProductOptionWhereUniqueInput
}

export type ProductOptionUpdateOneRequiredWithoutEventItemOptionNestedInput = {
  create?: Prisma.XOR<Prisma.ProductOptionCreateWithoutEventItemOptionInput, Prisma.ProductOptionUncheckedCreateWithoutEventItemOptionInput>
  connectOrCreate?: Prisma.ProductOptionCreateOrConnectWithoutEventItemOptionInput
  upsert?: Prisma.ProductOptionUpsertWithoutEventItemOptionInput
  connect?: Prisma.ProductOptionWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProductOptionUpdateToOneWithWhereWithoutEventItemOptionInput, Prisma.ProductOptionUpdateWithoutEventItemOptionInput>, Prisma.ProductOptionUncheckedUpdateWithoutEventItemOptionInput>
}

export type ProductOptionCreateNestedOneWithoutOrderItemOptionInput = {
  create?: Prisma.XOR<Prisma.ProductOptionCreateWithoutOrderItemOptionInput, Prisma.ProductOptionUncheckedCreateWithoutOrderItemOptionInput>
  connectOrCreate?: Prisma.ProductOptionCreateOrConnectWithoutOrderItemOptionInput
  connect?: Prisma.ProductOptionWhereUniqueInput
}

export type ProductOptionUpdateOneRequiredWithoutOrderItemOptionNestedInput = {
  create?: Prisma.XOR<Prisma.ProductOptionCreateWithoutOrderItemOptionInput, Prisma.ProductOptionUncheckedCreateWithoutOrderItemOptionInput>
  connectOrCreate?: Prisma.ProductOptionCreateOrConnectWithoutOrderItemOptionInput
  upsert?: Prisma.ProductOptionUpsertWithoutOrderItemOptionInput
  connect?: Prisma.ProductOptionWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProductOptionUpdateToOneWithWhereWithoutOrderItemOptionInput, Prisma.ProductOptionUpdateWithoutOrderItemOptionInput>, Prisma.ProductOptionUncheckedUpdateWithoutOrderItemOptionInput>
}

export type ProductOptionCreateNestedOneWithoutProductOptionValueInput = {
  create?: Prisma.XOR<Prisma.ProductOptionCreateWithoutProductOptionValueInput, Prisma.ProductOptionUncheckedCreateWithoutProductOptionValueInput>
  connectOrCreate?: Prisma.ProductOptionCreateOrConnectWithoutProductOptionValueInput
  connect?: Prisma.ProductOptionWhereUniqueInput
}

export type ProductOptionUpdateOneRequiredWithoutProductOptionValueNestedInput = {
  create?: Prisma.XOR<Prisma.ProductOptionCreateWithoutProductOptionValueInput, Prisma.ProductOptionUncheckedCreateWithoutProductOptionValueInput>
  connectOrCreate?: Prisma.ProductOptionCreateOrConnectWithoutProductOptionValueInput
  upsert?: Prisma.ProductOptionUpsertWithoutProductOptionValueInput
  connect?: Prisma.ProductOptionWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.ProductOptionUpdateToOneWithWhereWithoutProductOptionValueInput, Prisma.ProductOptionUpdateWithoutProductOptionValueInput>, Prisma.ProductOptionUncheckedUpdateWithoutProductOptionValueInput>
}

export type ProductOptionCreateWithoutProductInput = {
  id: string
  name: string
  type: string
  required?: boolean
  sortOrder?: number
  createdAt?: Date | string
  updatedAt: Date | string
  EventItemOption?: Prisma.EventItemOptionCreateNestedManyWithoutProductOptionInput
  OrderItemOption?: Prisma.OrderItemOptionCreateNestedManyWithoutProductOptionInput
  ProductOptionValue?: Prisma.ProductOptionValueCreateNestedManyWithoutProductOptionInput
}

export type ProductOptionUncheckedCreateWithoutProductInput = {
  id: string
  name: string
  type: string
  required?: boolean
  sortOrder?: number
  createdAt?: Date | string
  updatedAt: Date | string
  EventItemOption?: Prisma.EventItemOptionUncheckedCreateNestedManyWithoutProductOptionInput
  OrderItemOption?: Prisma.OrderItemOptionUncheckedCreateNestedManyWithoutProductOptionInput
  ProductOptionValue?: Prisma.ProductOptionValueUncheckedCreateNestedManyWithoutProductOptionInput
}

export type ProductOptionCreateOrConnectWithoutProductInput = {
  where: Prisma.ProductOptionWhereUniqueInput
  create: Prisma.XOR<Prisma.ProductOptionCreateWithoutProductInput, Prisma.ProductOptionUncheckedCreateWithoutProductInput>
}

export type ProductOptionCreateManyProductInputEnvelope = {
  data: Prisma.ProductOptionCreateManyProductInput | Prisma.ProductOptionCreateManyProductInput[]
  skipDuplicates?: boolean
}

export type ProductOptionUpsertWithWhereUniqueWithoutProductInput = {
  where: Prisma.ProductOptionWhereUniqueInput
  update: Prisma.XOR<Prisma.ProductOptionUpdateWithoutProductInput, Prisma.ProductOptionUncheckedUpdateWithoutProductInput>
  create: Prisma.XOR<Prisma.ProductOptionCreateWithoutProductInput, Prisma.ProductOptionUncheckedCreateWithoutProductInput>
}

export type ProductOptionUpdateWithWhereUniqueWithoutProductInput = {
  where: Prisma.ProductOptionWhereUniqueInput
  data: Prisma.XOR<Prisma.ProductOptionUpdateWithoutProductInput, Prisma.ProductOptionUncheckedUpdateWithoutProductInput>
}

export type ProductOptionUpdateManyWithWhereWithoutProductInput = {
  where: Prisma.ProductOptionScalarWhereInput
  data: Prisma.XOR<Prisma.ProductOptionUpdateManyMutationInput, Prisma.ProductOptionUncheckedUpdateManyWithoutProductInput>
}

export type ProductOptionScalarWhereInput = {
  AND?: Prisma.ProductOptionScalarWhereInput | Prisma.ProductOptionScalarWhereInput[]
  OR?: Prisma.ProductOptionScalarWhereInput[]
  NOT?: Prisma.ProductOptionScalarWhereInput | Prisma.ProductOptionScalarWhereInput[]
  id?: Prisma.StringFilter<"ProductOption"> | string
  productId?: Prisma.StringFilter<"ProductOption"> | string
  name?: Prisma.StringFilter<"ProductOption"> | string
  type?: Prisma.StringFilter<"ProductOption"> | string
  required?: Prisma.BoolFilter<"ProductOption"> | boolean
  sortOrder?: Prisma.IntFilter<"ProductOption"> | number
  createdAt?: Prisma.DateTimeFilter<"ProductOption"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"ProductOption"> | Date | string
}

export type ProductOptionCreateWithoutEventItemOptionInput = {
  id: string
  name: string
  type: string
  required?: boolean
  sortOrder?: number
  createdAt?: Date | string
  updatedAt: Date | string
  OrderItemOption?: Prisma.OrderItemOptionCreateNestedManyWithoutProductOptionInput
  Product: Prisma.ProductCreateNestedOneWithoutProductOptionInput
  ProductOptionValue?: Prisma.ProductOptionValueCreateNestedManyWithoutProductOptionInput
}

export type ProductOptionUncheckedCreateWithoutEventItemOptionInput = {
  id: string
  productId: string
  name: string
  type: string
  required?: boolean
  sortOrder?: number
  createdAt?: Date | string
  updatedAt: Date | string
  OrderItemOption?: Prisma.OrderItemOptionUncheckedCreateNestedManyWithoutProductOptionInput
  ProductOptionValue?: Prisma.ProductOptionValueUncheckedCreateNestedManyWithoutProductOptionInput
}

export type ProductOptionCreateOrConnectWithoutEventItemOptionInput = {
  where: Prisma.ProductOptionWhereUniqueInput
  create: Prisma.XOR<Prisma.ProductOptionCreateWithoutEventItemOptionInput, Prisma.ProductOptionUncheckedCreateWithoutEventItemOptionInput>
}

export type ProductOptionUpsertWithoutEventItemOptionInput = {
  update: Prisma.XOR<Prisma.ProductOptionUpdateWithoutEventItemOptionInput, Prisma.ProductOptionUncheckedUpdateWithoutEventItemOptionInput>
  create: Prisma.XOR<Prisma.ProductOptionCreateWithoutEventItemOptionInput, Prisma.ProductOptionUncheckedCreateWithoutEventItemOptionInput>
  where?: Prisma.ProductOptionWhereInput
}

export type ProductOptionUpdateToOneWithWhereWithoutEventItemOptionInput = {
  where?: Prisma.ProductOptionWhereInput
  data: Prisma.XOR<Prisma.ProductOptionUpdateWithoutEventItemOptionInput, Prisma.ProductOptionUncheckedUpdateWithoutEventItemOptionInput>
}

export type ProductOptionUpdateWithoutEventItemOptionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  required?: Prisma.BoolFieldUpdateOperationsInput | boolean
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  OrderItemOption?: Prisma.OrderItemOptionUpdateManyWithoutProductOptionNestedInput
  Product?: Prisma.ProductUpdateOneRequiredWithoutProductOptionNestedInput
  ProductOptionValue?: Prisma.ProductOptionValueUpdateManyWithoutProductOptionNestedInput
}

export type ProductOptionUncheckedUpdateWithoutEventItemOptionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  required?: Prisma.BoolFieldUpdateOperationsInput | boolean
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  OrderItemOption?: Prisma.OrderItemOptionUncheckedUpdateManyWithoutProductOptionNestedInput
  ProductOptionValue?: Prisma.ProductOptionValueUncheckedUpdateManyWithoutProductOptionNestedInput
}

export type ProductOptionCreateWithoutOrderItemOptionInput = {
  id: string
  name: string
  type: string
  required?: boolean
  sortOrder?: number
  createdAt?: Date | string
  updatedAt: Date | string
  EventItemOption?: Prisma.EventItemOptionCreateNestedManyWithoutProductOptionInput
  Product: Prisma.ProductCreateNestedOneWithoutProductOptionInput
  ProductOptionValue?: Prisma.ProductOptionValueCreateNestedManyWithoutProductOptionInput
}

export type ProductOptionUncheckedCreateWithoutOrderItemOptionInput = {
  id: string
  productId: string
  name: string
  type: string
  required?: boolean
  sortOrder?: number
  createdAt?: Date | string
  updatedAt: Date | string
  EventItemOption?: Prisma.EventItemOptionUncheckedCreateNestedManyWithoutProductOptionInput
  ProductOptionValue?: Prisma.ProductOptionValueUncheckedCreateNestedManyWithoutProductOptionInput
}

export type ProductOptionCreateOrConnectWithoutOrderItemOptionInput = {
  where: Prisma.ProductOptionWhereUniqueInput
  create: Prisma.XOR<Prisma.ProductOptionCreateWithoutOrderItemOptionInput, Prisma.ProductOptionUncheckedCreateWithoutOrderItemOptionInput>
}

export type ProductOptionUpsertWithoutOrderItemOptionInput = {
  update: Prisma.XOR<Prisma.ProductOptionUpdateWithoutOrderItemOptionInput, Prisma.ProductOptionUncheckedUpdateWithoutOrderItemOptionInput>
  create: Prisma.XOR<Prisma.ProductOptionCreateWithoutOrderItemOptionInput, Prisma.ProductOptionUncheckedCreateWithoutOrderItemOptionInput>
  where?: Prisma.ProductOptionWhereInput
}

export type ProductOptionUpdateToOneWithWhereWithoutOrderItemOptionInput = {
  where?: Prisma.ProductOptionWhereInput
  data: Prisma.XOR<Prisma.ProductOptionUpdateWithoutOrderItemOptionInput, Prisma.ProductOptionUncheckedUpdateWithoutOrderItemOptionInput>
}

export type ProductOptionUpdateWithoutOrderItemOptionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  required?: Prisma.BoolFieldUpdateOperationsInput | boolean
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  EventItemOption?: Prisma.EventItemOptionUpdateManyWithoutProductOptionNestedInput
  Product?: Prisma.ProductUpdateOneRequiredWithoutProductOptionNestedInput
  ProductOptionValue?: Prisma.ProductOptionValueUpdateManyWithoutProductOptionNestedInput
}

export type ProductOptionUncheckedUpdateWithoutOrderItemOptionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  required?: Prisma.BoolFieldUpdateOperationsInput | boolean
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  EventItemOption?: Prisma.EventItemOptionUncheckedUpdateManyWithoutProductOptionNestedInput
  ProductOptionValue?: Prisma.ProductOptionValueUncheckedUpdateManyWithoutProductOptionNestedInput
}

export type ProductOptionCreateWithoutProductOptionValueInput = {
  id: string
  name: string
  type: string
  required?: boolean
  sortOrder?: number
  createdAt?: Date | string
  updatedAt: Date | string
  EventItemOption?: Prisma.EventItemOptionCreateNestedManyWithoutProductOptionInput
  OrderItemOption?: Prisma.OrderItemOptionCreateNestedManyWithoutProductOptionInput
  Product: Prisma.ProductCreateNestedOneWithoutProductOptionInput
}

export type ProductOptionUncheckedCreateWithoutProductOptionValueInput = {
  id: string
  productId: string
  name: string
  type: string
  required?: boolean
  sortOrder?: number
  createdAt?: Date | string
  updatedAt: Date | string
  EventItemOption?: Prisma.EventItemOptionUncheckedCreateNestedManyWithoutProductOptionInput
  OrderItemOption?: Prisma.OrderItemOptionUncheckedCreateNestedManyWithoutProductOptionInput
}

export type ProductOptionCreateOrConnectWithoutProductOptionValueInput = {
  where: Prisma.ProductOptionWhereUniqueInput
  create: Prisma.XOR<Prisma.ProductOptionCreateWithoutProductOptionValueInput, Prisma.ProductOptionUncheckedCreateWithoutProductOptionValueInput>
}

export type ProductOptionUpsertWithoutProductOptionValueInput = {
  update: Prisma.XOR<Prisma.ProductOptionUpdateWithoutProductOptionValueInput, Prisma.ProductOptionUncheckedUpdateWithoutProductOptionValueInput>
  create: Prisma.XOR<Prisma.ProductOptionCreateWithoutProductOptionValueInput, Prisma.ProductOptionUncheckedCreateWithoutProductOptionValueInput>
  where?: Prisma.ProductOptionWhereInput
}

export type ProductOptionUpdateToOneWithWhereWithoutProductOptionValueInput = {
  where?: Prisma.ProductOptionWhereInput
  data: Prisma.XOR<Prisma.ProductOptionUpdateWithoutProductOptionValueInput, Prisma.ProductOptionUncheckedUpdateWithoutProductOptionValueInput>
}

export type ProductOptionUpdateWithoutProductOptionValueInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  required?: Prisma.BoolFieldUpdateOperationsInput | boolean
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  EventItemOption?: Prisma.EventItemOptionUpdateManyWithoutProductOptionNestedInput
  OrderItemOption?: Prisma.OrderItemOptionUpdateManyWithoutProductOptionNestedInput
  Product?: Prisma.ProductUpdateOneRequiredWithoutProductOptionNestedInput
}

export type ProductOptionUncheckedUpdateWithoutProductOptionValueInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  required?: Prisma.BoolFieldUpdateOperationsInput | boolean
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  EventItemOption?: Prisma.EventItemOptionUncheckedUpdateManyWithoutProductOptionNestedInput
  OrderItemOption?: Prisma.OrderItemOptionUncheckedUpdateManyWithoutProductOptionNestedInput
}

export type ProductOptionCreateManyProductInput = {
  id: string
  name: string
  type: string
  required?: boolean
  sortOrder?: number
  createdAt?: Date | string
  updatedAt: Date | string
}

export type ProductOptionUpdateWithoutProductInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  required?: Prisma.BoolFieldUpdateOperationsInput | boolean
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  EventItemOption?: Prisma.EventItemOptionUpdateManyWithoutProductOptionNestedInput
  OrderItemOption?: Prisma.OrderItemOptionUpdateManyWithoutProductOptionNestedInput
  ProductOptionValue?: Prisma.ProductOptionValueUpdateManyWithoutProductOptionNestedInput
}

export type ProductOptionUncheckedUpdateWithoutProductInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  required?: Prisma.BoolFieldUpdateOperationsInput | boolean
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  EventItemOption?: Prisma.EventItemOptionUncheckedUpdateManyWithoutProductOptionNestedInput
  OrderItemOption?: Prisma.OrderItemOptionUncheckedUpdateManyWithoutProductOptionNestedInput
  ProductOptionValue?: Prisma.ProductOptionValueUncheckedUpdateManyWithoutProductOptionNestedInput
}

export type ProductOptionUncheckedUpdateManyWithoutProductInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  type?: Prisma.StringFieldUpdateOperationsInput | string
  required?: Prisma.BoolFieldUpdateOperationsInput | boolean
  sortOrder?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type ProductOptionCountOutputType
 */

export type ProductOptionCountOutputType = {
  EventItemOption: number
  OrderItemOption: number
  ProductOptionValue: number
}

export type ProductOptionCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  EventItemOption?: boolean | ProductOptionCountOutputTypeCountEventItemOptionArgs
  OrderItemOption?: boolean | ProductOptionCountOutputTypeCountOrderItemOptionArgs
  ProductOptionValue?: boolean | ProductOptionCountOutputTypeCountProductOptionValueArgs
}

/**
 * ProductOptionCountOutputType without action
 */
export type ProductOptionCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOptionCountOutputType
   */
  select?: Prisma.ProductOptionCountOutputTypeSelect<ExtArgs> | null
}

/**
 * ProductOptionCountOutputType without action
 */
export type ProductOptionCountOutputTypeCountEventItemOptionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.EventItemOptionWhereInput
}

/**
 * ProductOptionCountOutputType without action
 */
export type ProductOptionCountOutputTypeCountOrderItemOptionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.OrderItemOptionWhereInput
}

/**
 * ProductOptionCountOutputType without action
 */
export type ProductOptionCountOutputTypeCountProductOptionValueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.ProductOptionValueWhereInput
}


export type ProductOptionSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  productId?: boolean
  name?: boolean
  type?: boolean
  required?: boolean
  sortOrder?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  EventItemOption?: boolean | Prisma.ProductOption$EventItemOptionArgs<ExtArgs>
  OrderItemOption?: boolean | Prisma.ProductOption$OrderItemOptionArgs<ExtArgs>
  Product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
  ProductOptionValue?: boolean | Prisma.ProductOption$ProductOptionValueArgs<ExtArgs>
  _count?: boolean | Prisma.ProductOptionCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["productOption"]>

export type ProductOptionSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  productId?: boolean
  name?: boolean
  type?: boolean
  required?: boolean
  sortOrder?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  Product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}, ExtArgs["result"]["productOption"]>

export type ProductOptionSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  productId?: boolean
  name?: boolean
  type?: boolean
  required?: boolean
  sortOrder?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  Product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}, ExtArgs["result"]["productOption"]>

export type ProductOptionSelectScalar = {
  id?: boolean
  productId?: boolean
  name?: boolean
  type?: boolean
  required?: boolean
  sortOrder?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type ProductOptionOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "productId" | "name" | "type" | "required" | "sortOrder" | "createdAt" | "updatedAt", ExtArgs["result"]["productOption"]>
export type ProductOptionInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  EventItemOption?: boolean | Prisma.ProductOption$EventItemOptionArgs<ExtArgs>
  OrderItemOption?: boolean | Prisma.ProductOption$OrderItemOptionArgs<ExtArgs>
  Product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
  ProductOptionValue?: boolean | Prisma.ProductOption$ProductOptionValueArgs<ExtArgs>
  _count?: boolean | Prisma.ProductOptionCountOutputTypeDefaultArgs<ExtArgs>
}
export type ProductOptionIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}
export type ProductOptionIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}

export type $ProductOptionPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "ProductOption"
  objects: {
    EventItemOption: Prisma.$EventItemOptionPayload<ExtArgs>[]
    OrderItemOption: Prisma.$OrderItemOptionPayload<ExtArgs>[]
    Product: Prisma.$ProductPayload<ExtArgs>
    ProductOptionValue: Prisma.$ProductOptionValuePayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    productId: string
    name: string
    type: string
    required: boolean
    sortOrder: number
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["productOption"]>
  composites: {}
}

export type ProductOptionGetPayload<S extends boolean | null | undefined | ProductOptionDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$ProductOptionPayload, S>

export type ProductOptionCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<ProductOptionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: ProductOptionCountAggregateInputType | true
  }

export interface ProductOptionDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductOption'], meta: { name: 'ProductOption' } }
  /**
   * Find zero or one ProductOption that matches the filter.
   * @param {ProductOptionFindUniqueArgs} args - Arguments to find a ProductOption
   * @example
   * // Get one ProductOption
   * const productOption = await prisma.productOption.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends ProductOptionFindUniqueArgs>(args: Prisma.SelectSubset<T, ProductOptionFindUniqueArgs<ExtArgs>>): Prisma.Prisma__ProductOptionClient<runtime.Types.Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one ProductOption that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {ProductOptionFindUniqueOrThrowArgs} args - Arguments to find a ProductOption
   * @example
   * // Get one ProductOption
   * const productOption = await prisma.productOption.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends ProductOptionFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, ProductOptionFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProductOptionClient<runtime.Types.Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ProductOption that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProductOptionFindFirstArgs} args - Arguments to find a ProductOption
   * @example
   * // Get one ProductOption
   * const productOption = await prisma.productOption.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends ProductOptionFindFirstArgs>(args?: Prisma.SelectSubset<T, ProductOptionFindFirstArgs<ExtArgs>>): Prisma.Prisma__ProductOptionClient<runtime.Types.Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first ProductOption that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProductOptionFindFirstOrThrowArgs} args - Arguments to find a ProductOption
   * @example
   * // Get one ProductOption
   * const productOption = await prisma.productOption.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends ProductOptionFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, ProductOptionFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__ProductOptionClient<runtime.Types.Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more ProductOptions that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProductOptionFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all ProductOptions
   * const productOptions = await prisma.productOption.findMany()
   * 
   * // Get first 10 ProductOptions
   * const productOptions = await prisma.productOption.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const productOptionWithIdOnly = await prisma.productOption.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends ProductOptionFindManyArgs>(args?: Prisma.SelectSubset<T, ProductOptionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a ProductOption.
   * @param {ProductOptionCreateArgs} args - Arguments to create a ProductOption.
   * @example
   * // Create one ProductOption
   * const ProductOption = await prisma.productOption.create({
   *   data: {
   *     // ... data to create a ProductOption
   *   }
   * })
   * 
   */
  create<T extends ProductOptionCreateArgs>(args: Prisma.SelectSubset<T, ProductOptionCreateArgs<ExtArgs>>): Prisma.Prisma__ProductOptionClient<runtime.Types.Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many ProductOptions.
   * @param {ProductOptionCreateManyArgs} args - Arguments to create many ProductOptions.
   * @example
   * // Create many ProductOptions
   * const productOption = await prisma.productOption.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends ProductOptionCreateManyArgs>(args?: Prisma.SelectSubset<T, ProductOptionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many ProductOptions and returns the data saved in the database.
   * @param {ProductOptionCreateManyAndReturnArgs} args - Arguments to create many ProductOptions.
   * @example
   * // Create many ProductOptions
   * const productOption = await prisma.productOption.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many ProductOptions and only return the `id`
   * const productOptionWithIdOnly = await prisma.productOption.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends ProductOptionCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, ProductOptionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a ProductOption.
   * @param {ProductOptionDeleteArgs} args - Arguments to delete one ProductOption.
   * @example
   * // Delete one ProductOption
   * const ProductOption = await prisma.productOption.delete({
   *   where: {
   *     // ... filter to delete one ProductOption
   *   }
   * })
   * 
   */
  delete<T extends ProductOptionDeleteArgs>(args: Prisma.SelectSubset<T, ProductOptionDeleteArgs<ExtArgs>>): Prisma.Prisma__ProductOptionClient<runtime.Types.Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one ProductOption.
   * @param {ProductOptionUpdateArgs} args - Arguments to update one ProductOption.
   * @example
   * // Update one ProductOption
   * const productOption = await prisma.productOption.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends ProductOptionUpdateArgs>(args: Prisma.SelectSubset<T, ProductOptionUpdateArgs<ExtArgs>>): Prisma.Prisma__ProductOptionClient<runtime.Types.Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more ProductOptions.
   * @param {ProductOptionDeleteManyArgs} args - Arguments to filter ProductOptions to delete.
   * @example
   * // Delete a few ProductOptions
   * const { count } = await prisma.productOption.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends ProductOptionDeleteManyArgs>(args?: Prisma.SelectSubset<T, ProductOptionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ProductOptions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProductOptionUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many ProductOptions
   * const productOption = await prisma.productOption.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends ProductOptionUpdateManyArgs>(args: Prisma.SelectSubset<T, ProductOptionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more ProductOptions and returns the data updated in the database.
   * @param {ProductOptionUpdateManyAndReturnArgs} args - Arguments to update many ProductOptions.
   * @example
   * // Update many ProductOptions
   * const productOption = await prisma.productOption.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more ProductOptions and only return the `id`
   * const productOptionWithIdOnly = await prisma.productOption.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends ProductOptionUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, ProductOptionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one ProductOption.
   * @param {ProductOptionUpsertArgs} args - Arguments to update or create a ProductOption.
   * @example
   * // Update or create a ProductOption
   * const productOption = await prisma.productOption.upsert({
   *   create: {
   *     // ... data to create a ProductOption
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the ProductOption we want to update
   *   }
   * })
   */
  upsert<T extends ProductOptionUpsertArgs>(args: Prisma.SelectSubset<T, ProductOptionUpsertArgs<ExtArgs>>): Prisma.Prisma__ProductOptionClient<runtime.Types.Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of ProductOptions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProductOptionCountArgs} args - Arguments to filter ProductOptions to count.
   * @example
   * // Count the number of ProductOptions
   * const count = await prisma.productOption.count({
   *   where: {
   *     // ... the filter for the ProductOptions we want to count
   *   }
   * })
  **/
  count<T extends ProductOptionCountArgs>(
    args?: Prisma.Subset<T, ProductOptionCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], ProductOptionCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a ProductOption.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProductOptionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends ProductOptionAggregateArgs>(args: Prisma.Subset<T, ProductOptionAggregateArgs>): Prisma.PrismaPromise<GetProductOptionAggregateType<T>>

  /**
   * Group by ProductOption.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {ProductOptionGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends ProductOptionGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: ProductOptionGroupByArgs['orderBy'] }
      : { orderBy?: ProductOptionGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, ProductOptionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductOptionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the ProductOption model
 */
readonly fields: ProductOptionFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for ProductOption.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__ProductOptionClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  EventItemOption<T extends Prisma.ProductOption$EventItemOptionArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProductOption$EventItemOptionArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  OrderItemOption<T extends Prisma.ProductOption$OrderItemOptionArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProductOption$OrderItemOptionArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$OrderItemOptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  Product<T extends Prisma.ProductDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProductDefaultArgs<ExtArgs>>): Prisma.Prisma__ProductClient<runtime.Types.Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  ProductOptionValue<T extends Prisma.ProductOption$ProductOptionValueArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProductOption$ProductOptionValueArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the ProductOption model
 */
export interface ProductOptionFieldRefs {
  readonly id: Prisma.FieldRef<"ProductOption", 'String'>
  readonly productId: Prisma.FieldRef<"ProductOption", 'String'>
  readonly name: Prisma.FieldRef<"ProductOption", 'String'>
  readonly type: Prisma.FieldRef<"ProductOption", 'String'>
  readonly required: Prisma.FieldRef<"ProductOption", 'Boolean'>
  readonly sortOrder: Prisma.FieldRef<"ProductOption", 'Int'>
  readonly createdAt: Prisma.FieldRef<"ProductOption", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"ProductOption", 'DateTime'>
}
    

// Custom InputTypes
/**
 * ProductOption findUnique
 */
export type ProductOptionFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOption
   */
  select?: Prisma.ProductOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOption
   */
  omit?: Prisma.ProductOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionInclude<ExtArgs> | null
  /**
   * Filter, which ProductOption to fetch.
   */
  where: Prisma.ProductOptionWhereUniqueInput
}

/**
 * ProductOption findUniqueOrThrow
 */
export type ProductOptionFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOption
   */
  select?: Prisma.ProductOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOption
   */
  omit?: Prisma.ProductOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionInclude<ExtArgs> | null
  /**
   * Filter, which ProductOption to fetch.
   */
  where: Prisma.ProductOptionWhereUniqueInput
}

/**
 * ProductOption findFirst
 */
export type ProductOptionFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOption
   */
  select?: Prisma.ProductOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOption
   */
  omit?: Prisma.ProductOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionInclude<ExtArgs> | null
  /**
   * Filter, which ProductOption to fetch.
   */
  where?: Prisma.ProductOptionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProductOptions to fetch.
   */
  orderBy?: Prisma.ProductOptionOrderByWithRelationInput | Prisma.ProductOptionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ProductOptions.
   */
  cursor?: Prisma.ProductOptionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProductOptions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProductOptions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ProductOptions.
   */
  distinct?: Prisma.ProductOptionScalarFieldEnum | Prisma.ProductOptionScalarFieldEnum[]
}

/**
 * ProductOption findFirstOrThrow
 */
export type ProductOptionFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOption
   */
  select?: Prisma.ProductOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOption
   */
  omit?: Prisma.ProductOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionInclude<ExtArgs> | null
  /**
   * Filter, which ProductOption to fetch.
   */
  where?: Prisma.ProductOptionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProductOptions to fetch.
   */
  orderBy?: Prisma.ProductOptionOrderByWithRelationInput | Prisma.ProductOptionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for ProductOptions.
   */
  cursor?: Prisma.ProductOptionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProductOptions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProductOptions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of ProductOptions.
   */
  distinct?: Prisma.ProductOptionScalarFieldEnum | Prisma.ProductOptionScalarFieldEnum[]
}

/**
 * ProductOption findMany
 */
export type ProductOptionFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOption
   */
  select?: Prisma.ProductOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOption
   */
  omit?: Prisma.ProductOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionInclude<ExtArgs> | null
  /**
   * Filter, which ProductOptions to fetch.
   */
  where?: Prisma.ProductOptionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of ProductOptions to fetch.
   */
  orderBy?: Prisma.ProductOptionOrderByWithRelationInput | Prisma.ProductOptionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing ProductOptions.
   */
  cursor?: Prisma.ProductOptionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` ProductOptions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` ProductOptions.
   */
  skip?: number
  distinct?: Prisma.ProductOptionScalarFieldEnum | Prisma.ProductOptionScalarFieldEnum[]
}

/**
 * ProductOption create
 */
export type ProductOptionCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOption
   */
  select?: Prisma.ProductOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOption
   */
  omit?: Prisma.ProductOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionInclude<ExtArgs> | null
  /**
   * The data needed to create a ProductOption.
   */
  data: Prisma.XOR<Prisma.ProductOptionCreateInput, Prisma.ProductOptionUncheckedCreateInput>
}

/**
 * ProductOption createMany
 */
export type ProductOptionCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many ProductOptions.
   */
  data: Prisma.ProductOptionCreateManyInput | Prisma.ProductOptionCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * ProductOption createManyAndReturn
 */
export type ProductOptionCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOption
   */
  select?: Prisma.ProductOptionSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOption
   */
  omit?: Prisma.ProductOptionOmit<ExtArgs> | null
  /**
   * The data used to create many ProductOptions.
   */
  data: Prisma.ProductOptionCreateManyInput | Prisma.ProductOptionCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * ProductOption update
 */
export type ProductOptionUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOption
   */
  select?: Prisma.ProductOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOption
   */
  omit?: Prisma.ProductOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionInclude<ExtArgs> | null
  /**
   * The data needed to update a ProductOption.
   */
  data: Prisma.XOR<Prisma.ProductOptionUpdateInput, Prisma.ProductOptionUncheckedUpdateInput>
  /**
   * Choose, which ProductOption to update.
   */
  where: Prisma.ProductOptionWhereUniqueInput
}

/**
 * ProductOption updateMany
 */
export type ProductOptionUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update ProductOptions.
   */
  data: Prisma.XOR<Prisma.ProductOptionUpdateManyMutationInput, Prisma.ProductOptionUncheckedUpdateManyInput>
  /**
   * Filter which ProductOptions to update
   */
  where?: Prisma.ProductOptionWhereInput
  /**
   * Limit how many ProductOptions to update.
   */
  limit?: number
}

/**
 * ProductOption updateManyAndReturn
 */
export type ProductOptionUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOption
   */
  select?: Prisma.ProductOptionSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOption
   */
  omit?: Prisma.ProductOptionOmit<ExtArgs> | null
  /**
   * The data used to update ProductOptions.
   */
  data: Prisma.XOR<Prisma.ProductOptionUpdateManyMutationInput, Prisma.ProductOptionUncheckedUpdateManyInput>
  /**
   * Filter which ProductOptions to update
   */
  where?: Prisma.ProductOptionWhereInput
  /**
   * Limit how many ProductOptions to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * ProductOption upsert
 */
export type ProductOptionUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOption
   */
  select?: Prisma.ProductOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOption
   */
  omit?: Prisma.ProductOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionInclude<ExtArgs> | null
  /**
   * The filter to search for the ProductOption to update in case it exists.
   */
  where: Prisma.ProductOptionWhereUniqueInput
  /**
   * In case the ProductOption found by the `where` argument doesn't exist, create a new ProductOption with this data.
   */
  create: Prisma.XOR<Prisma.ProductOptionCreateInput, Prisma.ProductOptionUncheckedCreateInput>
  /**
   * In case the ProductOption was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.ProductOptionUpdateInput, Prisma.ProductOptionUncheckedUpdateInput>
}

/**
 * ProductOption delete
 */
export type ProductOptionDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOption
   */
  select?: Prisma.ProductOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOption
   */
  omit?: Prisma.ProductOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionInclude<ExtArgs> | null
  /**
   * Filter which ProductOption to delete.
   */
  where: Prisma.ProductOptionWhereUniqueInput
}

/**
 * ProductOption deleteMany
 */
export type ProductOptionDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which ProductOptions to delete
   */
  where?: Prisma.ProductOptionWhereInput
  /**
   * Limit how many ProductOptions to delete.
   */
  limit?: number
}

/**
 * ProductOption.EventItemOption
 */
export type ProductOption$EventItemOptionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItemOption
   */
  select?: Prisma.EventItemOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EventItemOption
   */
  omit?: Prisma.EventItemOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemOptionInclude<ExtArgs> | null
  where?: Prisma.EventItemOptionWhereInput
  orderBy?: Prisma.EventItemOptionOrderByWithRelationInput | Prisma.EventItemOptionOrderByWithRelationInput[]
  cursor?: Prisma.EventItemOptionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.EventItemOptionScalarFieldEnum | Prisma.EventItemOptionScalarFieldEnum[]
}

/**
 * ProductOption.OrderItemOption
 */
export type ProductOption$OrderItemOptionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the OrderItemOption
   */
  select?: Prisma.OrderItemOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the OrderItemOption
   */
  omit?: Prisma.OrderItemOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.OrderItemOptionInclude<ExtArgs> | null
  where?: Prisma.OrderItemOptionWhereInput
  orderBy?: Prisma.OrderItemOptionOrderByWithRelationInput | Prisma.OrderItemOptionOrderByWithRelationInput[]
  cursor?: Prisma.OrderItemOptionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.OrderItemOptionScalarFieldEnum | Prisma.OrderItemOptionScalarFieldEnum[]
}

/**
 * ProductOption.ProductOptionValue
 */
export type ProductOption$ProductOptionValueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOptionValue
   */
  select?: Prisma.ProductOptionValueSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOptionValue
   */
  omit?: Prisma.ProductOptionValueOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionValueInclude<ExtArgs> | null
  where?: Prisma.ProductOptionValueWhereInput
  orderBy?: Prisma.ProductOptionValueOrderByWithRelationInput | Prisma.ProductOptionValueOrderByWithRelationInput[]
  cursor?: Prisma.ProductOptionValueWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.ProductOptionValueScalarFieldEnum | Prisma.ProductOptionValueScalarFieldEnum[]
}

/**
 * ProductOption without action
 */
export type ProductOptionDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the ProductOption
   */
  select?: Prisma.ProductOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the ProductOption
   */
  omit?: Prisma.ProductOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.ProductOptionInclude<ExtArgs> | null
}
