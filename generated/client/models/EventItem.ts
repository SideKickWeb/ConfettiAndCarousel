
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `EventItem` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model EventItem
 * 
 */
export type EventItemModel = runtime.Types.Result.DefaultSelection<Prisma.$EventItemPayload>

export type AggregateEventItem = {
  _count: EventItemCountAggregateOutputType | null
  _avg: EventItemAvgAggregateOutputType | null
  _sum: EventItemSumAggregateOutputType | null
  _min: EventItemMinAggregateOutputType | null
  _max: EventItemMaxAggregateOutputType | null
}

export type EventItemAvgAggregateOutputType = {
  quantity: number | null
  unitPrice: number | null
  totalPrice: number | null
}

export type EventItemSumAggregateOutputType = {
  quantity: number | null
  unitPrice: number | null
  totalPrice: number | null
}

export type EventItemMinAggregateOutputType = {
  id: string | null
  eventId: string | null
  productId: string | null
  quantity: number | null
  unitPrice: number | null
  totalPrice: number | null
  notes: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type EventItemMaxAggregateOutputType = {
  id: string | null
  eventId: string | null
  productId: string | null
  quantity: number | null
  unitPrice: number | null
  totalPrice: number | null
  notes: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type EventItemCountAggregateOutputType = {
  id: number
  eventId: number
  productId: number
  quantity: number
  unitPrice: number
  totalPrice: number
  notes: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type EventItemAvgAggregateInputType = {
  quantity?: true
  unitPrice?: true
  totalPrice?: true
}

export type EventItemSumAggregateInputType = {
  quantity?: true
  unitPrice?: true
  totalPrice?: true
}

export type EventItemMinAggregateInputType = {
  id?: true
  eventId?: true
  productId?: true
  quantity?: true
  unitPrice?: true
  totalPrice?: true
  notes?: true
  createdAt?: true
  updatedAt?: true
}

export type EventItemMaxAggregateInputType = {
  id?: true
  eventId?: true
  productId?: true
  quantity?: true
  unitPrice?: true
  totalPrice?: true
  notes?: true
  createdAt?: true
  updatedAt?: true
}

export type EventItemCountAggregateInputType = {
  id?: true
  eventId?: true
  productId?: true
  quantity?: true
  unitPrice?: true
  totalPrice?: true
  notes?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type EventItemAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which EventItem to aggregate.
   */
  where?: Prisma.EventItemWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of EventItems to fetch.
   */
  orderBy?: Prisma.EventItemOrderByWithRelationInput | Prisma.EventItemOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.EventItemWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` EventItems from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` EventItems.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned EventItems
  **/
  _count?: true | EventItemCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: EventItemAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: EventItemSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: EventItemMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: EventItemMaxAggregateInputType
}

export type GetEventItemAggregateType<T extends EventItemAggregateArgs> = {
      [P in keyof T & keyof AggregateEventItem]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateEventItem[P]>
    : Prisma.GetScalarType<T[P], AggregateEventItem[P]>
}




export type EventItemGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.EventItemWhereInput
  orderBy?: Prisma.EventItemOrderByWithAggregationInput | Prisma.EventItemOrderByWithAggregationInput[]
  by: Prisma.EventItemScalarFieldEnum[] | Prisma.EventItemScalarFieldEnum
  having?: Prisma.EventItemScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: EventItemCountAggregateInputType | true
  _avg?: EventItemAvgAggregateInputType
  _sum?: EventItemSumAggregateInputType
  _min?: EventItemMinAggregateInputType
  _max?: EventItemMaxAggregateInputType
}

export type EventItemGroupByOutputType = {
  id: string
  eventId: string
  productId: string
  quantity: number
  unitPrice: number | null
  totalPrice: number | null
  notes: string | null
  createdAt: Date
  updatedAt: Date
  _count: EventItemCountAggregateOutputType | null
  _avg: EventItemAvgAggregateOutputType | null
  _sum: EventItemSumAggregateOutputType | null
  _min: EventItemMinAggregateOutputType | null
  _max: EventItemMaxAggregateOutputType | null
}

type GetEventItemGroupByPayload<T extends EventItemGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<EventItemGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof EventItemGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], EventItemGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], EventItemGroupByOutputType[P]>
      }
    >
  > 



export type EventItemWhereInput = {
  AND?: Prisma.EventItemWhereInput | Prisma.EventItemWhereInput[]
  OR?: Prisma.EventItemWhereInput[]
  NOT?: Prisma.EventItemWhereInput | Prisma.EventItemWhereInput[]
  id?: Prisma.StringFilter<"EventItem"> | string
  eventId?: Prisma.StringFilter<"EventItem"> | string
  productId?: Prisma.StringFilter<"EventItem"> | string
  quantity?: Prisma.IntFilter<"EventItem"> | number
  unitPrice?: Prisma.FloatNullableFilter<"EventItem"> | number | null
  totalPrice?: Prisma.FloatNullableFilter<"EventItem"> | number | null
  notes?: Prisma.StringNullableFilter<"EventItem"> | string | null
  createdAt?: Prisma.DateTimeFilter<"EventItem"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"EventItem"> | Date | string
  Event?: Prisma.XOR<Prisma.EventScalarRelationFilter, Prisma.EventWhereInput>
  Product?: Prisma.XOR<Prisma.ProductScalarRelationFilter, Prisma.ProductWhereInput>
  EventItemOption?: Prisma.EventItemOptionListRelationFilter
}

export type EventItemOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  eventId?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  unitPrice?: Prisma.SortOrderInput | Prisma.SortOrder
  totalPrice?: Prisma.SortOrderInput | Prisma.SortOrder
  notes?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  Event?: Prisma.EventOrderByWithRelationInput
  Product?: Prisma.ProductOrderByWithRelationInput
  EventItemOption?: Prisma.EventItemOptionOrderByRelationAggregateInput
}

export type EventItemWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.EventItemWhereInput | Prisma.EventItemWhereInput[]
  OR?: Prisma.EventItemWhereInput[]
  NOT?: Prisma.EventItemWhereInput | Prisma.EventItemWhereInput[]
  eventId?: Prisma.StringFilter<"EventItem"> | string
  productId?: Prisma.StringFilter<"EventItem"> | string
  quantity?: Prisma.IntFilter<"EventItem"> | number
  unitPrice?: Prisma.FloatNullableFilter<"EventItem"> | number | null
  totalPrice?: Prisma.FloatNullableFilter<"EventItem"> | number | null
  notes?: Prisma.StringNullableFilter<"EventItem"> | string | null
  createdAt?: Prisma.DateTimeFilter<"EventItem"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"EventItem"> | Date | string
  Event?: Prisma.XOR<Prisma.EventScalarRelationFilter, Prisma.EventWhereInput>
  Product?: Prisma.XOR<Prisma.ProductScalarRelationFilter, Prisma.ProductWhereInput>
  EventItemOption?: Prisma.EventItemOptionListRelationFilter
}, "id">

export type EventItemOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  eventId?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  unitPrice?: Prisma.SortOrderInput | Prisma.SortOrder
  totalPrice?: Prisma.SortOrderInput | Prisma.SortOrder
  notes?: Prisma.SortOrderInput | Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.EventItemCountOrderByAggregateInput
  _avg?: Prisma.EventItemAvgOrderByAggregateInput
  _max?: Prisma.EventItemMaxOrderByAggregateInput
  _min?: Prisma.EventItemMinOrderByAggregateInput
  _sum?: Prisma.EventItemSumOrderByAggregateInput
}

export type EventItemScalarWhereWithAggregatesInput = {
  AND?: Prisma.EventItemScalarWhereWithAggregatesInput | Prisma.EventItemScalarWhereWithAggregatesInput[]
  OR?: Prisma.EventItemScalarWhereWithAggregatesInput[]
  NOT?: Prisma.EventItemScalarWhereWithAggregatesInput | Prisma.EventItemScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"EventItem"> | string
  eventId?: Prisma.StringWithAggregatesFilter<"EventItem"> | string
  productId?: Prisma.StringWithAggregatesFilter<"EventItem"> | string
  quantity?: Prisma.IntWithAggregatesFilter<"EventItem"> | number
  unitPrice?: Prisma.FloatNullableWithAggregatesFilter<"EventItem"> | number | null
  totalPrice?: Prisma.FloatNullableWithAggregatesFilter<"EventItem"> | number | null
  notes?: Prisma.StringNullableWithAggregatesFilter<"EventItem"> | string | null
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"EventItem"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"EventItem"> | Date | string
}

export type EventItemCreateInput = {
  id: string
  quantity?: number
  unitPrice?: number | null
  totalPrice?: number | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
  Event: Prisma.EventCreateNestedOneWithoutEventItemInput
  Product: Prisma.ProductCreateNestedOneWithoutEventItemInput
  EventItemOption?: Prisma.EventItemOptionCreateNestedManyWithoutEventItemInput
}

export type EventItemUncheckedCreateInput = {
  id: string
  eventId: string
  productId: string
  quantity?: number
  unitPrice?: number | null
  totalPrice?: number | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
  EventItemOption?: Prisma.EventItemOptionUncheckedCreateNestedManyWithoutEventItemInput
}

export type EventItemUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  unitPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  totalPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Event?: Prisma.EventUpdateOneRequiredWithoutEventItemNestedInput
  Product?: Prisma.ProductUpdateOneRequiredWithoutEventItemNestedInput
  EventItemOption?: Prisma.EventItemOptionUpdateManyWithoutEventItemNestedInput
}

export type EventItemUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  eventId?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  unitPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  totalPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  EventItemOption?: Prisma.EventItemOptionUncheckedUpdateManyWithoutEventItemNestedInput
}

export type EventItemCreateManyInput = {
  id: string
  eventId: string
  productId: string
  quantity?: number
  unitPrice?: number | null
  totalPrice?: number | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
}

export type EventItemUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  unitPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  totalPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EventItemUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  eventId?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  unitPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  totalPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EventItemListRelationFilter = {
  every?: Prisma.EventItemWhereInput
  some?: Prisma.EventItemWhereInput
  none?: Prisma.EventItemWhereInput
}

export type EventItemOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type EventItemCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  eventId?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  unitPrice?: Prisma.SortOrder
  totalPrice?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type EventItemAvgOrderByAggregateInput = {
  quantity?: Prisma.SortOrder
  unitPrice?: Prisma.SortOrder
  totalPrice?: Prisma.SortOrder
}

export type EventItemMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  eventId?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  unitPrice?: Prisma.SortOrder
  totalPrice?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type EventItemMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  eventId?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  quantity?: Prisma.SortOrder
  unitPrice?: Prisma.SortOrder
  totalPrice?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type EventItemSumOrderByAggregateInput = {
  quantity?: Prisma.SortOrder
  unitPrice?: Prisma.SortOrder
  totalPrice?: Prisma.SortOrder
}

export type EventItemScalarRelationFilter = {
  is?: Prisma.EventItemWhereInput
  isNot?: Prisma.EventItemWhereInput
}

export type EventItemCreateNestedManyWithoutEventInput = {
  create?: Prisma.XOR<Prisma.EventItemCreateWithoutEventInput, Prisma.EventItemUncheckedCreateWithoutEventInput> | Prisma.EventItemCreateWithoutEventInput[] | Prisma.EventItemUncheckedCreateWithoutEventInput[]
  connectOrCreate?: Prisma.EventItemCreateOrConnectWithoutEventInput | Prisma.EventItemCreateOrConnectWithoutEventInput[]
  createMany?: Prisma.EventItemCreateManyEventInputEnvelope
  connect?: Prisma.EventItemWhereUniqueInput | Prisma.EventItemWhereUniqueInput[]
}

export type EventItemUncheckedCreateNestedManyWithoutEventInput = {
  create?: Prisma.XOR<Prisma.EventItemCreateWithoutEventInput, Prisma.EventItemUncheckedCreateWithoutEventInput> | Prisma.EventItemCreateWithoutEventInput[] | Prisma.EventItemUncheckedCreateWithoutEventInput[]
  connectOrCreate?: Prisma.EventItemCreateOrConnectWithoutEventInput | Prisma.EventItemCreateOrConnectWithoutEventInput[]
  createMany?: Prisma.EventItemCreateManyEventInputEnvelope
  connect?: Prisma.EventItemWhereUniqueInput | Prisma.EventItemWhereUniqueInput[]
}

export type EventItemUpdateManyWithoutEventNestedInput = {
  create?: Prisma.XOR<Prisma.EventItemCreateWithoutEventInput, Prisma.EventItemUncheckedCreateWithoutEventInput> | Prisma.EventItemCreateWithoutEventInput[] | Prisma.EventItemUncheckedCreateWithoutEventInput[]
  connectOrCreate?: Prisma.EventItemCreateOrConnectWithoutEventInput | Prisma.EventItemCreateOrConnectWithoutEventInput[]
  upsert?: Prisma.EventItemUpsertWithWhereUniqueWithoutEventInput | Prisma.EventItemUpsertWithWhereUniqueWithoutEventInput[]
  createMany?: Prisma.EventItemCreateManyEventInputEnvelope
  set?: Prisma.EventItemWhereUniqueInput | Prisma.EventItemWhereUniqueInput[]
  disconnect?: Prisma.EventItemWhereUniqueInput | Prisma.EventItemWhereUniqueInput[]
  delete?: Prisma.EventItemWhereUniqueInput | Prisma.EventItemWhereUniqueInput[]
  connect?: Prisma.EventItemWhereUniqueInput | Prisma.EventItemWhereUniqueInput[]
  update?: Prisma.EventItemUpdateWithWhereUniqueWithoutEventInput | Prisma.EventItemUpdateWithWhereUniqueWithoutEventInput[]
  updateMany?: Prisma.EventItemUpdateManyWithWhereWithoutEventInput | Prisma.EventItemUpdateManyWithWhereWithoutEventInput[]
  deleteMany?: Prisma.EventItemScalarWhereInput | Prisma.EventItemScalarWhereInput[]
}

export type EventItemUncheckedUpdateManyWithoutEventNestedInput = {
  create?: Prisma.XOR<Prisma.EventItemCreateWithoutEventInput, Prisma.EventItemUncheckedCreateWithoutEventInput> | Prisma.EventItemCreateWithoutEventInput[] | Prisma.EventItemUncheckedCreateWithoutEventInput[]
  connectOrCreate?: Prisma.EventItemCreateOrConnectWithoutEventInput | Prisma.EventItemCreateOrConnectWithoutEventInput[]
  upsert?: Prisma.EventItemUpsertWithWhereUniqueWithoutEventInput | Prisma.EventItemUpsertWithWhereUniqueWithoutEventInput[]
  createMany?: Prisma.EventItemCreateManyEventInputEnvelope
  set?: Prisma.EventItemWhereUniqueInput | Prisma.EventItemWhereUniqueInput[]
  disconnect?: Prisma.EventItemWhereUniqueInput | Prisma.EventItemWhereUniqueInput[]
  delete?: Prisma.EventItemWhereUniqueInput | Prisma.EventItemWhereUniqueInput[]
  connect?: Prisma.EventItemWhereUniqueInput | Prisma.EventItemWhereUniqueInput[]
  update?: Prisma.EventItemUpdateWithWhereUniqueWithoutEventInput | Prisma.EventItemUpdateWithWhereUniqueWithoutEventInput[]
  updateMany?: Prisma.EventItemUpdateManyWithWhereWithoutEventInput | Prisma.EventItemUpdateManyWithWhereWithoutEventInput[]
  deleteMany?: Prisma.EventItemScalarWhereInput | Prisma.EventItemScalarWhereInput[]
}

export type EventItemCreateNestedManyWithoutProductInput = {
  create?: Prisma.XOR<Prisma.EventItemCreateWithoutProductInput, Prisma.EventItemUncheckedCreateWithoutProductInput> | Prisma.EventItemCreateWithoutProductInput[] | Prisma.EventItemUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.EventItemCreateOrConnectWithoutProductInput | Prisma.EventItemCreateOrConnectWithoutProductInput[]
  createMany?: Prisma.EventItemCreateManyProductInputEnvelope
  connect?: Prisma.EventItemWhereUniqueInput | Prisma.EventItemWhereUniqueInput[]
}

export type EventItemUncheckedCreateNestedManyWithoutProductInput = {
  create?: Prisma.XOR<Prisma.EventItemCreateWithoutProductInput, Prisma.EventItemUncheckedCreateWithoutProductInput> | Prisma.EventItemCreateWithoutProductInput[] | Prisma.EventItemUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.EventItemCreateOrConnectWithoutProductInput | Prisma.EventItemCreateOrConnectWithoutProductInput[]
  createMany?: Prisma.EventItemCreateManyProductInputEnvelope
  connect?: Prisma.EventItemWhereUniqueInput | Prisma.EventItemWhereUniqueInput[]
}

export type EventItemUpdateManyWithoutProductNestedInput = {
  create?: Prisma.XOR<Prisma.EventItemCreateWithoutProductInput, Prisma.EventItemUncheckedCreateWithoutProductInput> | Prisma.EventItemCreateWithoutProductInput[] | Prisma.EventItemUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.EventItemCreateOrConnectWithoutProductInput | Prisma.EventItemCreateOrConnectWithoutProductInput[]
  upsert?: Prisma.EventItemUpsertWithWhereUniqueWithoutProductInput | Prisma.EventItemUpsertWithWhereUniqueWithoutProductInput[]
  createMany?: Prisma.EventItemCreateManyProductInputEnvelope
  set?: Prisma.EventItemWhereUniqueInput | Prisma.EventItemWhereUniqueInput[]
  disconnect?: Prisma.EventItemWhereUniqueInput | Prisma.EventItemWhereUniqueInput[]
  delete?: Prisma.EventItemWhereUniqueInput | Prisma.EventItemWhereUniqueInput[]
  connect?: Prisma.EventItemWhereUniqueInput | Prisma.EventItemWhereUniqueInput[]
  update?: Prisma.EventItemUpdateWithWhereUniqueWithoutProductInput | Prisma.EventItemUpdateWithWhereUniqueWithoutProductInput[]
  updateMany?: Prisma.EventItemUpdateManyWithWhereWithoutProductInput | Prisma.EventItemUpdateManyWithWhereWithoutProductInput[]
  deleteMany?: Prisma.EventItemScalarWhereInput | Prisma.EventItemScalarWhereInput[]
}

export type EventItemUncheckedUpdateManyWithoutProductNestedInput = {
  create?: Prisma.XOR<Prisma.EventItemCreateWithoutProductInput, Prisma.EventItemUncheckedCreateWithoutProductInput> | Prisma.EventItemCreateWithoutProductInput[] | Prisma.EventItemUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.EventItemCreateOrConnectWithoutProductInput | Prisma.EventItemCreateOrConnectWithoutProductInput[]
  upsert?: Prisma.EventItemUpsertWithWhereUniqueWithoutProductInput | Prisma.EventItemUpsertWithWhereUniqueWithoutProductInput[]
  createMany?: Prisma.EventItemCreateManyProductInputEnvelope
  set?: Prisma.EventItemWhereUniqueInput | Prisma.EventItemWhereUniqueInput[]
  disconnect?: Prisma.EventItemWhereUniqueInput | Prisma.EventItemWhereUniqueInput[]
  delete?: Prisma.EventItemWhereUniqueInput | Prisma.EventItemWhereUniqueInput[]
  connect?: Prisma.EventItemWhereUniqueInput | Prisma.EventItemWhereUniqueInput[]
  update?: Prisma.EventItemUpdateWithWhereUniqueWithoutProductInput | Prisma.EventItemUpdateWithWhereUniqueWithoutProductInput[]
  updateMany?: Prisma.EventItemUpdateManyWithWhereWithoutProductInput | Prisma.EventItemUpdateManyWithWhereWithoutProductInput[]
  deleteMany?: Prisma.EventItemScalarWhereInput | Prisma.EventItemScalarWhereInput[]
}

export type IntFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type EventItemCreateNestedOneWithoutEventItemOptionInput = {
  create?: Prisma.XOR<Prisma.EventItemCreateWithoutEventItemOptionInput, Prisma.EventItemUncheckedCreateWithoutEventItemOptionInput>
  connectOrCreate?: Prisma.EventItemCreateOrConnectWithoutEventItemOptionInput
  connect?: Prisma.EventItemWhereUniqueInput
}

export type EventItemUpdateOneRequiredWithoutEventItemOptionNestedInput = {
  create?: Prisma.XOR<Prisma.EventItemCreateWithoutEventItemOptionInput, Prisma.EventItemUncheckedCreateWithoutEventItemOptionInput>
  connectOrCreate?: Prisma.EventItemCreateOrConnectWithoutEventItemOptionInput
  upsert?: Prisma.EventItemUpsertWithoutEventItemOptionInput
  connect?: Prisma.EventItemWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.EventItemUpdateToOneWithWhereWithoutEventItemOptionInput, Prisma.EventItemUpdateWithoutEventItemOptionInput>, Prisma.EventItemUncheckedUpdateWithoutEventItemOptionInput>
}

export type EventItemCreateWithoutEventInput = {
  id: string
  quantity?: number
  unitPrice?: number | null
  totalPrice?: number | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
  Product: Prisma.ProductCreateNestedOneWithoutEventItemInput
  EventItemOption?: Prisma.EventItemOptionCreateNestedManyWithoutEventItemInput
}

export type EventItemUncheckedCreateWithoutEventInput = {
  id: string
  productId: string
  quantity?: number
  unitPrice?: number | null
  totalPrice?: number | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
  EventItemOption?: Prisma.EventItemOptionUncheckedCreateNestedManyWithoutEventItemInput
}

export type EventItemCreateOrConnectWithoutEventInput = {
  where: Prisma.EventItemWhereUniqueInput
  create: Prisma.XOR<Prisma.EventItemCreateWithoutEventInput, Prisma.EventItemUncheckedCreateWithoutEventInput>
}

export type EventItemCreateManyEventInputEnvelope = {
  data: Prisma.EventItemCreateManyEventInput | Prisma.EventItemCreateManyEventInput[]
  skipDuplicates?: boolean
}

export type EventItemUpsertWithWhereUniqueWithoutEventInput = {
  where: Prisma.EventItemWhereUniqueInput
  update: Prisma.XOR<Prisma.EventItemUpdateWithoutEventInput, Prisma.EventItemUncheckedUpdateWithoutEventInput>
  create: Prisma.XOR<Prisma.EventItemCreateWithoutEventInput, Prisma.EventItemUncheckedCreateWithoutEventInput>
}

export type EventItemUpdateWithWhereUniqueWithoutEventInput = {
  where: Prisma.EventItemWhereUniqueInput
  data: Prisma.XOR<Prisma.EventItemUpdateWithoutEventInput, Prisma.EventItemUncheckedUpdateWithoutEventInput>
}

export type EventItemUpdateManyWithWhereWithoutEventInput = {
  where: Prisma.EventItemScalarWhereInput
  data: Prisma.XOR<Prisma.EventItemUpdateManyMutationInput, Prisma.EventItemUncheckedUpdateManyWithoutEventInput>
}

export type EventItemScalarWhereInput = {
  AND?: Prisma.EventItemScalarWhereInput | Prisma.EventItemScalarWhereInput[]
  OR?: Prisma.EventItemScalarWhereInput[]
  NOT?: Prisma.EventItemScalarWhereInput | Prisma.EventItemScalarWhereInput[]
  id?: Prisma.StringFilter<"EventItem"> | string
  eventId?: Prisma.StringFilter<"EventItem"> | string
  productId?: Prisma.StringFilter<"EventItem"> | string
  quantity?: Prisma.IntFilter<"EventItem"> | number
  unitPrice?: Prisma.FloatNullableFilter<"EventItem"> | number | null
  totalPrice?: Prisma.FloatNullableFilter<"EventItem"> | number | null
  notes?: Prisma.StringNullableFilter<"EventItem"> | string | null
  createdAt?: Prisma.DateTimeFilter<"EventItem"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"EventItem"> | Date | string
}

export type EventItemCreateWithoutProductInput = {
  id: string
  quantity?: number
  unitPrice?: number | null
  totalPrice?: number | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
  Event: Prisma.EventCreateNestedOneWithoutEventItemInput
  EventItemOption?: Prisma.EventItemOptionCreateNestedManyWithoutEventItemInput
}

export type EventItemUncheckedCreateWithoutProductInput = {
  id: string
  eventId: string
  quantity?: number
  unitPrice?: number | null
  totalPrice?: number | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
  EventItemOption?: Prisma.EventItemOptionUncheckedCreateNestedManyWithoutEventItemInput
}

export type EventItemCreateOrConnectWithoutProductInput = {
  where: Prisma.EventItemWhereUniqueInput
  create: Prisma.XOR<Prisma.EventItemCreateWithoutProductInput, Prisma.EventItemUncheckedCreateWithoutProductInput>
}

export type EventItemCreateManyProductInputEnvelope = {
  data: Prisma.EventItemCreateManyProductInput | Prisma.EventItemCreateManyProductInput[]
  skipDuplicates?: boolean
}

export type EventItemUpsertWithWhereUniqueWithoutProductInput = {
  where: Prisma.EventItemWhereUniqueInput
  update: Prisma.XOR<Prisma.EventItemUpdateWithoutProductInput, Prisma.EventItemUncheckedUpdateWithoutProductInput>
  create: Prisma.XOR<Prisma.EventItemCreateWithoutProductInput, Prisma.EventItemUncheckedCreateWithoutProductInput>
}

export type EventItemUpdateWithWhereUniqueWithoutProductInput = {
  where: Prisma.EventItemWhereUniqueInput
  data: Prisma.XOR<Prisma.EventItemUpdateWithoutProductInput, Prisma.EventItemUncheckedUpdateWithoutProductInput>
}

export type EventItemUpdateManyWithWhereWithoutProductInput = {
  where: Prisma.EventItemScalarWhereInput
  data: Prisma.XOR<Prisma.EventItemUpdateManyMutationInput, Prisma.EventItemUncheckedUpdateManyWithoutProductInput>
}

export type EventItemCreateWithoutEventItemOptionInput = {
  id: string
  quantity?: number
  unitPrice?: number | null
  totalPrice?: number | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
  Event: Prisma.EventCreateNestedOneWithoutEventItemInput
  Product: Prisma.ProductCreateNestedOneWithoutEventItemInput
}

export type EventItemUncheckedCreateWithoutEventItemOptionInput = {
  id: string
  eventId: string
  productId: string
  quantity?: number
  unitPrice?: number | null
  totalPrice?: number | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
}

export type EventItemCreateOrConnectWithoutEventItemOptionInput = {
  where: Prisma.EventItemWhereUniqueInput
  create: Prisma.XOR<Prisma.EventItemCreateWithoutEventItemOptionInput, Prisma.EventItemUncheckedCreateWithoutEventItemOptionInput>
}

export type EventItemUpsertWithoutEventItemOptionInput = {
  update: Prisma.XOR<Prisma.EventItemUpdateWithoutEventItemOptionInput, Prisma.EventItemUncheckedUpdateWithoutEventItemOptionInput>
  create: Prisma.XOR<Prisma.EventItemCreateWithoutEventItemOptionInput, Prisma.EventItemUncheckedCreateWithoutEventItemOptionInput>
  where?: Prisma.EventItemWhereInput
}

export type EventItemUpdateToOneWithWhereWithoutEventItemOptionInput = {
  where?: Prisma.EventItemWhereInput
  data: Prisma.XOR<Prisma.EventItemUpdateWithoutEventItemOptionInput, Prisma.EventItemUncheckedUpdateWithoutEventItemOptionInput>
}

export type EventItemUpdateWithoutEventItemOptionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  unitPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  totalPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Event?: Prisma.EventUpdateOneRequiredWithoutEventItemNestedInput
  Product?: Prisma.ProductUpdateOneRequiredWithoutEventItemNestedInput
}

export type EventItemUncheckedUpdateWithoutEventItemOptionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  eventId?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  unitPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  totalPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EventItemCreateManyEventInput = {
  id: string
  productId: string
  quantity?: number
  unitPrice?: number | null
  totalPrice?: number | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
}

export type EventItemUpdateWithoutEventInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  unitPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  totalPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Product?: Prisma.ProductUpdateOneRequiredWithoutEventItemNestedInput
  EventItemOption?: Prisma.EventItemOptionUpdateManyWithoutEventItemNestedInput
}

export type EventItemUncheckedUpdateWithoutEventInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  unitPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  totalPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  EventItemOption?: Prisma.EventItemOptionUncheckedUpdateManyWithoutEventItemNestedInput
}

export type EventItemUncheckedUpdateManyWithoutEventInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  unitPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  totalPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EventItemCreateManyProductInput = {
  id: string
  eventId: string
  quantity?: number
  unitPrice?: number | null
  totalPrice?: number | null
  notes?: string | null
  createdAt?: Date | string
  updatedAt: Date | string
}

export type EventItemUpdateWithoutProductInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  unitPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  totalPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  Event?: Prisma.EventUpdateOneRequiredWithoutEventItemNestedInput
  EventItemOption?: Prisma.EventItemOptionUpdateManyWithoutEventItemNestedInput
}

export type EventItemUncheckedUpdateWithoutProductInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  eventId?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  unitPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  totalPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  EventItemOption?: Prisma.EventItemOptionUncheckedUpdateManyWithoutEventItemNestedInput
}

export type EventItemUncheckedUpdateManyWithoutProductInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  eventId?: Prisma.StringFieldUpdateOperationsInput | string
  quantity?: Prisma.IntFieldUpdateOperationsInput | number
  unitPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  totalPrice?: Prisma.NullableFloatFieldUpdateOperationsInput | number | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type EventItemCountOutputType
 */

export type EventItemCountOutputType = {
  EventItemOption: number
}

export type EventItemCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  EventItemOption?: boolean | EventItemCountOutputTypeCountEventItemOptionArgs
}

/**
 * EventItemCountOutputType without action
 */
export type EventItemCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItemCountOutputType
   */
  select?: Prisma.EventItemCountOutputTypeSelect<ExtArgs> | null
}

/**
 * EventItemCountOutputType without action
 */
export type EventItemCountOutputTypeCountEventItemOptionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.EventItemOptionWhereInput
}


export type EventItemSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  eventId?: boolean
  productId?: boolean
  quantity?: boolean
  unitPrice?: boolean
  totalPrice?: boolean
  notes?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  Event?: boolean | Prisma.EventDefaultArgs<ExtArgs>
  Product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
  EventItemOption?: boolean | Prisma.EventItem$EventItemOptionArgs<ExtArgs>
  _count?: boolean | Prisma.EventItemCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["eventItem"]>

export type EventItemSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  eventId?: boolean
  productId?: boolean
  quantity?: boolean
  unitPrice?: boolean
  totalPrice?: boolean
  notes?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  Event?: boolean | Prisma.EventDefaultArgs<ExtArgs>
  Product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}, ExtArgs["result"]["eventItem"]>

export type EventItemSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  eventId?: boolean
  productId?: boolean
  quantity?: boolean
  unitPrice?: boolean
  totalPrice?: boolean
  notes?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  Event?: boolean | Prisma.EventDefaultArgs<ExtArgs>
  Product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}, ExtArgs["result"]["eventItem"]>

export type EventItemSelectScalar = {
  id?: boolean
  eventId?: boolean
  productId?: boolean
  quantity?: boolean
  unitPrice?: boolean
  totalPrice?: boolean
  notes?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type EventItemOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "eventId" | "productId" | "quantity" | "unitPrice" | "totalPrice" | "notes" | "createdAt" | "updatedAt", ExtArgs["result"]["eventItem"]>
export type EventItemInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Event?: boolean | Prisma.EventDefaultArgs<ExtArgs>
  Product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
  EventItemOption?: boolean | Prisma.EventItem$EventItemOptionArgs<ExtArgs>
  _count?: boolean | Prisma.EventItemCountOutputTypeDefaultArgs<ExtArgs>
}
export type EventItemIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Event?: boolean | Prisma.EventDefaultArgs<ExtArgs>
  Product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}
export type EventItemIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Event?: boolean | Prisma.EventDefaultArgs<ExtArgs>
  Product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}

export type $EventItemPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "EventItem"
  objects: {
    Event: Prisma.$EventPayload<ExtArgs>
    Product: Prisma.$ProductPayload<ExtArgs>
    EventItemOption: Prisma.$EventItemOptionPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    eventId: string
    productId: string
    quantity: number
    unitPrice: number | null
    totalPrice: number | null
    notes: string | null
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["eventItem"]>
  composites: {}
}

export type EventItemGetPayload<S extends boolean | null | undefined | EventItemDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$EventItemPayload, S>

export type EventItemCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<EventItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: EventItemCountAggregateInputType | true
  }

export interface EventItemDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EventItem'], meta: { name: 'EventItem' } }
  /**
   * Find zero or one EventItem that matches the filter.
   * @param {EventItemFindUniqueArgs} args - Arguments to find a EventItem
   * @example
   * // Get one EventItem
   * const eventItem = await prisma.eventItem.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends EventItemFindUniqueArgs>(args: Prisma.SelectSubset<T, EventItemFindUniqueArgs<ExtArgs>>): Prisma.Prisma__EventItemClient<runtime.Types.Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one EventItem that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {EventItemFindUniqueOrThrowArgs} args - Arguments to find a EventItem
   * @example
   * // Get one EventItem
   * const eventItem = await prisma.eventItem.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends EventItemFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, EventItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__EventItemClient<runtime.Types.Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first EventItem that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventItemFindFirstArgs} args - Arguments to find a EventItem
   * @example
   * // Get one EventItem
   * const eventItem = await prisma.eventItem.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends EventItemFindFirstArgs>(args?: Prisma.SelectSubset<T, EventItemFindFirstArgs<ExtArgs>>): Prisma.Prisma__EventItemClient<runtime.Types.Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first EventItem that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventItemFindFirstOrThrowArgs} args - Arguments to find a EventItem
   * @example
   * // Get one EventItem
   * const eventItem = await prisma.eventItem.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends EventItemFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, EventItemFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__EventItemClient<runtime.Types.Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more EventItems that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventItemFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all EventItems
   * const eventItems = await prisma.eventItem.findMany()
   * 
   * // Get first 10 EventItems
   * const eventItems = await prisma.eventItem.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const eventItemWithIdOnly = await prisma.eventItem.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends EventItemFindManyArgs>(args?: Prisma.SelectSubset<T, EventItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a EventItem.
   * @param {EventItemCreateArgs} args - Arguments to create a EventItem.
   * @example
   * // Create one EventItem
   * const EventItem = await prisma.eventItem.create({
   *   data: {
   *     // ... data to create a EventItem
   *   }
   * })
   * 
   */
  create<T extends EventItemCreateArgs>(args: Prisma.SelectSubset<T, EventItemCreateArgs<ExtArgs>>): Prisma.Prisma__EventItemClient<runtime.Types.Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many EventItems.
   * @param {EventItemCreateManyArgs} args - Arguments to create many EventItems.
   * @example
   * // Create many EventItems
   * const eventItem = await prisma.eventItem.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends EventItemCreateManyArgs>(args?: Prisma.SelectSubset<T, EventItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many EventItems and returns the data saved in the database.
   * @param {EventItemCreateManyAndReturnArgs} args - Arguments to create many EventItems.
   * @example
   * // Create many EventItems
   * const eventItem = await prisma.eventItem.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many EventItems and only return the `id`
   * const eventItemWithIdOnly = await prisma.eventItem.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends EventItemCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, EventItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a EventItem.
   * @param {EventItemDeleteArgs} args - Arguments to delete one EventItem.
   * @example
   * // Delete one EventItem
   * const EventItem = await prisma.eventItem.delete({
   *   where: {
   *     // ... filter to delete one EventItem
   *   }
   * })
   * 
   */
  delete<T extends EventItemDeleteArgs>(args: Prisma.SelectSubset<T, EventItemDeleteArgs<ExtArgs>>): Prisma.Prisma__EventItemClient<runtime.Types.Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one EventItem.
   * @param {EventItemUpdateArgs} args - Arguments to update one EventItem.
   * @example
   * // Update one EventItem
   * const eventItem = await prisma.eventItem.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends EventItemUpdateArgs>(args: Prisma.SelectSubset<T, EventItemUpdateArgs<ExtArgs>>): Prisma.Prisma__EventItemClient<runtime.Types.Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more EventItems.
   * @param {EventItemDeleteManyArgs} args - Arguments to filter EventItems to delete.
   * @example
   * // Delete a few EventItems
   * const { count } = await prisma.eventItem.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends EventItemDeleteManyArgs>(args?: Prisma.SelectSubset<T, EventItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more EventItems.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventItemUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many EventItems
   * const eventItem = await prisma.eventItem.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends EventItemUpdateManyArgs>(args: Prisma.SelectSubset<T, EventItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more EventItems and returns the data updated in the database.
   * @param {EventItemUpdateManyAndReturnArgs} args - Arguments to update many EventItems.
   * @example
   * // Update many EventItems
   * const eventItem = await prisma.eventItem.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more EventItems and only return the `id`
   * const eventItemWithIdOnly = await prisma.eventItem.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends EventItemUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, EventItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one EventItem.
   * @param {EventItemUpsertArgs} args - Arguments to update or create a EventItem.
   * @example
   * // Update or create a EventItem
   * const eventItem = await prisma.eventItem.upsert({
   *   create: {
   *     // ... data to create a EventItem
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the EventItem we want to update
   *   }
   * })
   */
  upsert<T extends EventItemUpsertArgs>(args: Prisma.SelectSubset<T, EventItemUpsertArgs<ExtArgs>>): Prisma.Prisma__EventItemClient<runtime.Types.Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of EventItems.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventItemCountArgs} args - Arguments to filter EventItems to count.
   * @example
   * // Count the number of EventItems
   * const count = await prisma.eventItem.count({
   *   where: {
   *     // ... the filter for the EventItems we want to count
   *   }
   * })
  **/
  count<T extends EventItemCountArgs>(
    args?: Prisma.Subset<T, EventItemCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], EventItemCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a EventItem.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends EventItemAggregateArgs>(args: Prisma.Subset<T, EventItemAggregateArgs>): Prisma.PrismaPromise<GetEventItemAggregateType<T>>

  /**
   * Group by EventItem.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventItemGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends EventItemGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: EventItemGroupByArgs['orderBy'] }
      : { orderBy?: EventItemGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, EventItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEventItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the EventItem model
 */
readonly fields: EventItemFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for EventItem.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__EventItemClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  Event<T extends Prisma.EventDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.EventDefaultArgs<ExtArgs>>): Prisma.Prisma__EventClient<runtime.Types.Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  Product<T extends Prisma.ProductDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProductDefaultArgs<ExtArgs>>): Prisma.Prisma__ProductClient<runtime.Types.Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  EventItemOption<T extends Prisma.EventItem$EventItemOptionArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.EventItem$EventItemOptionArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the EventItem model
 */
export interface EventItemFieldRefs {
  readonly id: Prisma.FieldRef<"EventItem", 'String'>
  readonly eventId: Prisma.FieldRef<"EventItem", 'String'>
  readonly productId: Prisma.FieldRef<"EventItem", 'String'>
  readonly quantity: Prisma.FieldRef<"EventItem", 'Int'>
  readonly unitPrice: Prisma.FieldRef<"EventItem", 'Float'>
  readonly totalPrice: Prisma.FieldRef<"EventItem", 'Float'>
  readonly notes: Prisma.FieldRef<"EventItem", 'String'>
  readonly createdAt: Prisma.FieldRef<"EventItem", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"EventItem", 'DateTime'>
}
    

// Custom InputTypes
/**
 * EventItem findUnique
 */
export type EventItemFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItem
   */
  select?: Prisma.EventItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EventItem
   */
  omit?: Prisma.EventItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemInclude<ExtArgs> | null
  /**
   * Filter, which EventItem to fetch.
   */
  where: Prisma.EventItemWhereUniqueInput
}

/**
 * EventItem findUniqueOrThrow
 */
export type EventItemFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItem
   */
  select?: Prisma.EventItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EventItem
   */
  omit?: Prisma.EventItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemInclude<ExtArgs> | null
  /**
   * Filter, which EventItem to fetch.
   */
  where: Prisma.EventItemWhereUniqueInput
}

/**
 * EventItem findFirst
 */
export type EventItemFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItem
   */
  select?: Prisma.EventItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EventItem
   */
  omit?: Prisma.EventItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemInclude<ExtArgs> | null
  /**
   * Filter, which EventItem to fetch.
   */
  where?: Prisma.EventItemWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of EventItems to fetch.
   */
  orderBy?: Prisma.EventItemOrderByWithRelationInput | Prisma.EventItemOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for EventItems.
   */
  cursor?: Prisma.EventItemWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` EventItems from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` EventItems.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of EventItems.
   */
  distinct?: Prisma.EventItemScalarFieldEnum | Prisma.EventItemScalarFieldEnum[]
}

/**
 * EventItem findFirstOrThrow
 */
export type EventItemFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItem
   */
  select?: Prisma.EventItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EventItem
   */
  omit?: Prisma.EventItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemInclude<ExtArgs> | null
  /**
   * Filter, which EventItem to fetch.
   */
  where?: Prisma.EventItemWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of EventItems to fetch.
   */
  orderBy?: Prisma.EventItemOrderByWithRelationInput | Prisma.EventItemOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for EventItems.
   */
  cursor?: Prisma.EventItemWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` EventItems from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` EventItems.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of EventItems.
   */
  distinct?: Prisma.EventItemScalarFieldEnum | Prisma.EventItemScalarFieldEnum[]
}

/**
 * EventItem findMany
 */
export type EventItemFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItem
   */
  select?: Prisma.EventItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EventItem
   */
  omit?: Prisma.EventItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemInclude<ExtArgs> | null
  /**
   * Filter, which EventItems to fetch.
   */
  where?: Prisma.EventItemWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of EventItems to fetch.
   */
  orderBy?: Prisma.EventItemOrderByWithRelationInput | Prisma.EventItemOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing EventItems.
   */
  cursor?: Prisma.EventItemWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` EventItems from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` EventItems.
   */
  skip?: number
  distinct?: Prisma.EventItemScalarFieldEnum | Prisma.EventItemScalarFieldEnum[]
}

/**
 * EventItem create
 */
export type EventItemCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItem
   */
  select?: Prisma.EventItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EventItem
   */
  omit?: Prisma.EventItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemInclude<ExtArgs> | null
  /**
   * The data needed to create a EventItem.
   */
  data: Prisma.XOR<Prisma.EventItemCreateInput, Prisma.EventItemUncheckedCreateInput>
}

/**
 * EventItem createMany
 */
export type EventItemCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many EventItems.
   */
  data: Prisma.EventItemCreateManyInput | Prisma.EventItemCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * EventItem createManyAndReturn
 */
export type EventItemCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItem
   */
  select?: Prisma.EventItemSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the EventItem
   */
  omit?: Prisma.EventItemOmit<ExtArgs> | null
  /**
   * The data used to create many EventItems.
   */
  data: Prisma.EventItemCreateManyInput | Prisma.EventItemCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * EventItem update
 */
export type EventItemUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItem
   */
  select?: Prisma.EventItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EventItem
   */
  omit?: Prisma.EventItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemInclude<ExtArgs> | null
  /**
   * The data needed to update a EventItem.
   */
  data: Prisma.XOR<Prisma.EventItemUpdateInput, Prisma.EventItemUncheckedUpdateInput>
  /**
   * Choose, which EventItem to update.
   */
  where: Prisma.EventItemWhereUniqueInput
}

/**
 * EventItem updateMany
 */
export type EventItemUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update EventItems.
   */
  data: Prisma.XOR<Prisma.EventItemUpdateManyMutationInput, Prisma.EventItemUncheckedUpdateManyInput>
  /**
   * Filter which EventItems to update
   */
  where?: Prisma.EventItemWhereInput
  /**
   * Limit how many EventItems to update.
   */
  limit?: number
}

/**
 * EventItem updateManyAndReturn
 */
export type EventItemUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItem
   */
  select?: Prisma.EventItemSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the EventItem
   */
  omit?: Prisma.EventItemOmit<ExtArgs> | null
  /**
   * The data used to update EventItems.
   */
  data: Prisma.XOR<Prisma.EventItemUpdateManyMutationInput, Prisma.EventItemUncheckedUpdateManyInput>
  /**
   * Filter which EventItems to update
   */
  where?: Prisma.EventItemWhereInput
  /**
   * Limit how many EventItems to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * EventItem upsert
 */
export type EventItemUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItem
   */
  select?: Prisma.EventItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EventItem
   */
  omit?: Prisma.EventItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemInclude<ExtArgs> | null
  /**
   * The filter to search for the EventItem to update in case it exists.
   */
  where: Prisma.EventItemWhereUniqueInput
  /**
   * In case the EventItem found by the `where` argument doesn't exist, create a new EventItem with this data.
   */
  create: Prisma.XOR<Prisma.EventItemCreateInput, Prisma.EventItemUncheckedCreateInput>
  /**
   * In case the EventItem was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.EventItemUpdateInput, Prisma.EventItemUncheckedUpdateInput>
}

/**
 * EventItem delete
 */
export type EventItemDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItem
   */
  select?: Prisma.EventItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EventItem
   */
  omit?: Prisma.EventItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemInclude<ExtArgs> | null
  /**
   * Filter which EventItem to delete.
   */
  where: Prisma.EventItemWhereUniqueInput
}

/**
 * EventItem deleteMany
 */
export type EventItemDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which EventItems to delete
   */
  where?: Prisma.EventItemWhereInput
  /**
   * Limit how many EventItems to delete.
   */
  limit?: number
}

/**
 * EventItem.EventItemOption
 */
export type EventItem$EventItemOptionArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItemOption
   */
  select?: Prisma.EventItemOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EventItemOption
   */
  omit?: Prisma.EventItemOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemOptionInclude<ExtArgs> | null
  where?: Prisma.EventItemOptionWhereInput
  orderBy?: Prisma.EventItemOptionOrderByWithRelationInput | Prisma.EventItemOptionOrderByWithRelationInput[]
  cursor?: Prisma.EventItemOptionWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.EventItemOptionScalarFieldEnum | Prisma.EventItemOptionScalarFieldEnum[]
}

/**
 * EventItem without action
 */
export type EventItemDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItem
   */
  select?: Prisma.EventItemSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EventItem
   */
  omit?: Prisma.EventItemOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemInclude<ExtArgs> | null
}
