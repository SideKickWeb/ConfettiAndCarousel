
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `user_roles` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model user_roles
 * 
 */
export type user_rolesModel = runtime.Types.Result.DefaultSelection<Prisma.$user_rolesPayload>

export type AggregateUser_roles = {
  _count: User_rolesCountAggregateOutputType | null
  _min: User_rolesMinAggregateOutputType | null
  _max: User_rolesMaxAggregateOutputType | null
}

export type User_rolesMinAggregateOutputType = {
  id: string | null
  userId: string | null
  role: string | null
  department: string | null
  isPrimary: boolean | null
  createdAt: Date | null
}

export type User_rolesMaxAggregateOutputType = {
  id: string | null
  userId: string | null
  role: string | null
  department: string | null
  isPrimary: boolean | null
  createdAt: Date | null
}

export type User_rolesCountAggregateOutputType = {
  id: number
  userId: number
  role: number
  department: number
  isPrimary: number
  createdAt: number
  _all: number
}


export type User_rolesMinAggregateInputType = {
  id?: true
  userId?: true
  role?: true
  department?: true
  isPrimary?: true
  createdAt?: true
}

export type User_rolesMaxAggregateInputType = {
  id?: true
  userId?: true
  role?: true
  department?: true
  isPrimary?: true
  createdAt?: true
}

export type User_rolesCountAggregateInputType = {
  id?: true
  userId?: true
  role?: true
  department?: true
  isPrimary?: true
  createdAt?: true
  _all?: true
}

export type User_rolesAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which user_roles to aggregate.
   */
  where?: Prisma.user_rolesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of user_roles to fetch.
   */
  orderBy?: Prisma.user_rolesOrderByWithRelationInput | Prisma.user_rolesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.user_rolesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` user_roles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` user_roles.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned user_roles
  **/
  _count?: true | User_rolesCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: User_rolesMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: User_rolesMaxAggregateInputType
}

export type GetUser_rolesAggregateType<T extends User_rolesAggregateArgs> = {
      [P in keyof T & keyof AggregateUser_roles]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateUser_roles[P]>
    : Prisma.GetScalarType<T[P], AggregateUser_roles[P]>
}




export type user_rolesGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.user_rolesWhereInput
  orderBy?: Prisma.user_rolesOrderByWithAggregationInput | Prisma.user_rolesOrderByWithAggregationInput[]
  by: Prisma.User_rolesScalarFieldEnum[] | Prisma.User_rolesScalarFieldEnum
  having?: Prisma.user_rolesScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: User_rolesCountAggregateInputType | true
  _min?: User_rolesMinAggregateInputType
  _max?: User_rolesMaxAggregateInputType
}

export type User_rolesGroupByOutputType = {
  id: string
  userId: string
  role: string
  department: string | null
  isPrimary: boolean
  createdAt: Date
  _count: User_rolesCountAggregateOutputType | null
  _min: User_rolesMinAggregateOutputType | null
  _max: User_rolesMaxAggregateOutputType | null
}

type GetUser_rolesGroupByPayload<T extends user_rolesGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<User_rolesGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof User_rolesGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], User_rolesGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], User_rolesGroupByOutputType[P]>
      }
    >
  > 



export type user_rolesWhereInput = {
  AND?: Prisma.user_rolesWhereInput | Prisma.user_rolesWhereInput[]
  OR?: Prisma.user_rolesWhereInput[]
  NOT?: Prisma.user_rolesWhereInput | Prisma.user_rolesWhereInput[]
  id?: Prisma.StringFilter<"user_roles"> | string
  userId?: Prisma.StringFilter<"user_roles"> | string
  role?: Prisma.StringFilter<"user_roles"> | string
  department?: Prisma.StringNullableFilter<"user_roles"> | string | null
  isPrimary?: Prisma.BoolFilter<"user_roles"> | boolean
  createdAt?: Prisma.DateTimeFilter<"user_roles"> | Date | string
  User?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}

export type user_rolesOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  role?: Prisma.SortOrder
  department?: Prisma.SortOrderInput | Prisma.SortOrder
  isPrimary?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  User?: Prisma.UserOrderByWithRelationInput
}

export type user_rolesWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.user_rolesWhereInput | Prisma.user_rolesWhereInput[]
  OR?: Prisma.user_rolesWhereInput[]
  NOT?: Prisma.user_rolesWhereInput | Prisma.user_rolesWhereInput[]
  userId?: Prisma.StringFilter<"user_roles"> | string
  role?: Prisma.StringFilter<"user_roles"> | string
  department?: Prisma.StringNullableFilter<"user_roles"> | string | null
  isPrimary?: Prisma.BoolFilter<"user_roles"> | boolean
  createdAt?: Prisma.DateTimeFilter<"user_roles"> | Date | string
  User?: Prisma.XOR<Prisma.UserScalarRelationFilter, Prisma.UserWhereInput>
}, "id">

export type user_rolesOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  role?: Prisma.SortOrder
  department?: Prisma.SortOrderInput | Prisma.SortOrder
  isPrimary?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  _count?: Prisma.user_rolesCountOrderByAggregateInput
  _max?: Prisma.user_rolesMaxOrderByAggregateInput
  _min?: Prisma.user_rolesMinOrderByAggregateInput
}

export type user_rolesScalarWhereWithAggregatesInput = {
  AND?: Prisma.user_rolesScalarWhereWithAggregatesInput | Prisma.user_rolesScalarWhereWithAggregatesInput[]
  OR?: Prisma.user_rolesScalarWhereWithAggregatesInput[]
  NOT?: Prisma.user_rolesScalarWhereWithAggregatesInput | Prisma.user_rolesScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"user_roles"> | string
  userId?: Prisma.StringWithAggregatesFilter<"user_roles"> | string
  role?: Prisma.StringWithAggregatesFilter<"user_roles"> | string
  department?: Prisma.StringNullableWithAggregatesFilter<"user_roles"> | string | null
  isPrimary?: Prisma.BoolWithAggregatesFilter<"user_roles"> | boolean
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"user_roles"> | Date | string
}

export type user_rolesCreateInput = {
  id: string
  role: string
  department?: string | null
  isPrimary?: boolean
  createdAt?: Date | string
  User: Prisma.UserCreateNestedOneWithoutUser_rolesInput
}

export type user_rolesUncheckedCreateInput = {
  id: string
  userId: string
  role: string
  department?: string | null
  isPrimary?: boolean
  createdAt?: Date | string
}

export type user_rolesUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.StringFieldUpdateOperationsInput | string
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isPrimary?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  User?: Prisma.UserUpdateOneRequiredWithoutUser_rolesNestedInput
}

export type user_rolesUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.StringFieldUpdateOperationsInput | string
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isPrimary?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type user_rolesCreateManyInput = {
  id: string
  userId: string
  role: string
  department?: string | null
  isPrimary?: boolean
  createdAt?: Date | string
}

export type user_rolesUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.StringFieldUpdateOperationsInput | string
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isPrimary?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type user_rolesUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  userId?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.StringFieldUpdateOperationsInput | string
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isPrimary?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type User_rolesListRelationFilter = {
  every?: Prisma.user_rolesWhereInput
  some?: Prisma.user_rolesWhereInput
  none?: Prisma.user_rolesWhereInput
}

export type user_rolesOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type user_rolesCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  role?: Prisma.SortOrder
  department?: Prisma.SortOrder
  isPrimary?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type user_rolesMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  role?: Prisma.SortOrder
  department?: Prisma.SortOrder
  isPrimary?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type user_rolesMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  userId?: Prisma.SortOrder
  role?: Prisma.SortOrder
  department?: Prisma.SortOrder
  isPrimary?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type user_rolesCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.user_rolesCreateWithoutUserInput, Prisma.user_rolesUncheckedCreateWithoutUserInput> | Prisma.user_rolesCreateWithoutUserInput[] | Prisma.user_rolesUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.user_rolesCreateOrConnectWithoutUserInput | Prisma.user_rolesCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.user_rolesCreateManyUserInputEnvelope
  connect?: Prisma.user_rolesWhereUniqueInput | Prisma.user_rolesWhereUniqueInput[]
}

export type user_rolesUncheckedCreateNestedManyWithoutUserInput = {
  create?: Prisma.XOR<Prisma.user_rolesCreateWithoutUserInput, Prisma.user_rolesUncheckedCreateWithoutUserInput> | Prisma.user_rolesCreateWithoutUserInput[] | Prisma.user_rolesUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.user_rolesCreateOrConnectWithoutUserInput | Prisma.user_rolesCreateOrConnectWithoutUserInput[]
  createMany?: Prisma.user_rolesCreateManyUserInputEnvelope
  connect?: Prisma.user_rolesWhereUniqueInput | Prisma.user_rolesWhereUniqueInput[]
}

export type user_rolesUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.user_rolesCreateWithoutUserInput, Prisma.user_rolesUncheckedCreateWithoutUserInput> | Prisma.user_rolesCreateWithoutUserInput[] | Prisma.user_rolesUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.user_rolesCreateOrConnectWithoutUserInput | Prisma.user_rolesCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.user_rolesUpsertWithWhereUniqueWithoutUserInput | Prisma.user_rolesUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.user_rolesCreateManyUserInputEnvelope
  set?: Prisma.user_rolesWhereUniqueInput | Prisma.user_rolesWhereUniqueInput[]
  disconnect?: Prisma.user_rolesWhereUniqueInput | Prisma.user_rolesWhereUniqueInput[]
  delete?: Prisma.user_rolesWhereUniqueInput | Prisma.user_rolesWhereUniqueInput[]
  connect?: Prisma.user_rolesWhereUniqueInput | Prisma.user_rolesWhereUniqueInput[]
  update?: Prisma.user_rolesUpdateWithWhereUniqueWithoutUserInput | Prisma.user_rolesUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.user_rolesUpdateManyWithWhereWithoutUserInput | Prisma.user_rolesUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.user_rolesScalarWhereInput | Prisma.user_rolesScalarWhereInput[]
}

export type user_rolesUncheckedUpdateManyWithoutUserNestedInput = {
  create?: Prisma.XOR<Prisma.user_rolesCreateWithoutUserInput, Prisma.user_rolesUncheckedCreateWithoutUserInput> | Prisma.user_rolesCreateWithoutUserInput[] | Prisma.user_rolesUncheckedCreateWithoutUserInput[]
  connectOrCreate?: Prisma.user_rolesCreateOrConnectWithoutUserInput | Prisma.user_rolesCreateOrConnectWithoutUserInput[]
  upsert?: Prisma.user_rolesUpsertWithWhereUniqueWithoutUserInput | Prisma.user_rolesUpsertWithWhereUniqueWithoutUserInput[]
  createMany?: Prisma.user_rolesCreateManyUserInputEnvelope
  set?: Prisma.user_rolesWhereUniqueInput | Prisma.user_rolesWhereUniqueInput[]
  disconnect?: Prisma.user_rolesWhereUniqueInput | Prisma.user_rolesWhereUniqueInput[]
  delete?: Prisma.user_rolesWhereUniqueInput | Prisma.user_rolesWhereUniqueInput[]
  connect?: Prisma.user_rolesWhereUniqueInput | Prisma.user_rolesWhereUniqueInput[]
  update?: Prisma.user_rolesUpdateWithWhereUniqueWithoutUserInput | Prisma.user_rolesUpdateWithWhereUniqueWithoutUserInput[]
  updateMany?: Prisma.user_rolesUpdateManyWithWhereWithoutUserInput | Prisma.user_rolesUpdateManyWithWhereWithoutUserInput[]
  deleteMany?: Prisma.user_rolesScalarWhereInput | Prisma.user_rolesScalarWhereInput[]
}

export type user_rolesCreateWithoutUserInput = {
  id: string
  role: string
  department?: string | null
  isPrimary?: boolean
  createdAt?: Date | string
}

export type user_rolesUncheckedCreateWithoutUserInput = {
  id: string
  role: string
  department?: string | null
  isPrimary?: boolean
  createdAt?: Date | string
}

export type user_rolesCreateOrConnectWithoutUserInput = {
  where: Prisma.user_rolesWhereUniqueInput
  create: Prisma.XOR<Prisma.user_rolesCreateWithoutUserInput, Prisma.user_rolesUncheckedCreateWithoutUserInput>
}

export type user_rolesCreateManyUserInputEnvelope = {
  data: Prisma.user_rolesCreateManyUserInput | Prisma.user_rolesCreateManyUserInput[]
  skipDuplicates?: boolean
}

export type user_rolesUpsertWithWhereUniqueWithoutUserInput = {
  where: Prisma.user_rolesWhereUniqueInput
  update: Prisma.XOR<Prisma.user_rolesUpdateWithoutUserInput, Prisma.user_rolesUncheckedUpdateWithoutUserInput>
  create: Prisma.XOR<Prisma.user_rolesCreateWithoutUserInput, Prisma.user_rolesUncheckedCreateWithoutUserInput>
}

export type user_rolesUpdateWithWhereUniqueWithoutUserInput = {
  where: Prisma.user_rolesWhereUniqueInput
  data: Prisma.XOR<Prisma.user_rolesUpdateWithoutUserInput, Prisma.user_rolesUncheckedUpdateWithoutUserInput>
}

export type user_rolesUpdateManyWithWhereWithoutUserInput = {
  where: Prisma.user_rolesScalarWhereInput
  data: Prisma.XOR<Prisma.user_rolesUpdateManyMutationInput, Prisma.user_rolesUncheckedUpdateManyWithoutUserInput>
}

export type user_rolesScalarWhereInput = {
  AND?: Prisma.user_rolesScalarWhereInput | Prisma.user_rolesScalarWhereInput[]
  OR?: Prisma.user_rolesScalarWhereInput[]
  NOT?: Prisma.user_rolesScalarWhereInput | Prisma.user_rolesScalarWhereInput[]
  id?: Prisma.StringFilter<"user_roles"> | string
  userId?: Prisma.StringFilter<"user_roles"> | string
  role?: Prisma.StringFilter<"user_roles"> | string
  department?: Prisma.StringNullableFilter<"user_roles"> | string | null
  isPrimary?: Prisma.BoolFilter<"user_roles"> | boolean
  createdAt?: Prisma.DateTimeFilter<"user_roles"> | Date | string
}

export type user_rolesCreateManyUserInput = {
  id: string
  role: string
  department?: string | null
  isPrimary?: boolean
  createdAt?: Date | string
}

export type user_rolesUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.StringFieldUpdateOperationsInput | string
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isPrimary?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type user_rolesUncheckedUpdateWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.StringFieldUpdateOperationsInput | string
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isPrimary?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type user_rolesUncheckedUpdateManyWithoutUserInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  role?: Prisma.StringFieldUpdateOperationsInput | string
  department?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isPrimary?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type user_rolesSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  userId?: boolean
  role?: boolean
  department?: boolean
  isPrimary?: boolean
  createdAt?: boolean
  User?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["user_roles"]>

export type user_rolesSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  userId?: boolean
  role?: boolean
  department?: boolean
  isPrimary?: boolean
  createdAt?: boolean
  User?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["user_roles"]>

export type user_rolesSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  userId?: boolean
  role?: boolean
  department?: boolean
  isPrimary?: boolean
  createdAt?: boolean
  User?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}, ExtArgs["result"]["user_roles"]>

export type user_rolesSelectScalar = {
  id?: boolean
  userId?: boolean
  role?: boolean
  department?: boolean
  isPrimary?: boolean
  createdAt?: boolean
}

export type user_rolesOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "userId" | "role" | "department" | "isPrimary" | "createdAt", ExtArgs["result"]["user_roles"]>
export type user_rolesInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  User?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type user_rolesIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  User?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}
export type user_rolesIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  User?: boolean | Prisma.UserDefaultArgs<ExtArgs>
}

export type $user_rolesPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "user_roles"
  objects: {
    User: Prisma.$UserPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    userId: string
    role: string
    department: string | null
    isPrimary: boolean
    createdAt: Date
  }, ExtArgs["result"]["user_roles"]>
  composites: {}
}

export type user_rolesGetPayload<S extends boolean | null | undefined | user_rolesDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$user_rolesPayload, S>

export type user_rolesCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<user_rolesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: User_rolesCountAggregateInputType | true
  }

export interface user_rolesDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_roles'], meta: { name: 'user_roles' } }
  /**
   * Find zero or one User_roles that matches the filter.
   * @param {user_rolesFindUniqueArgs} args - Arguments to find a User_roles
   * @example
   * // Get one User_roles
   * const user_roles = await prisma.user_roles.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends user_rolesFindUniqueArgs>(args: Prisma.SelectSubset<T, user_rolesFindUniqueArgs<ExtArgs>>): Prisma.Prisma__user_rolesClient<runtime.Types.Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one User_roles that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {user_rolesFindUniqueOrThrowArgs} args - Arguments to find a User_roles
   * @example
   * // Get one User_roles
   * const user_roles = await prisma.user_roles.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends user_rolesFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, user_rolesFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__user_rolesClient<runtime.Types.Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first User_roles that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {user_rolesFindFirstArgs} args - Arguments to find a User_roles
   * @example
   * // Get one User_roles
   * const user_roles = await prisma.user_roles.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends user_rolesFindFirstArgs>(args?: Prisma.SelectSubset<T, user_rolesFindFirstArgs<ExtArgs>>): Prisma.Prisma__user_rolesClient<runtime.Types.Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first User_roles that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {user_rolesFindFirstOrThrowArgs} args - Arguments to find a User_roles
   * @example
   * // Get one User_roles
   * const user_roles = await prisma.user_roles.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends user_rolesFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, user_rolesFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__user_rolesClient<runtime.Types.Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more User_roles that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {user_rolesFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all User_roles
   * const user_roles = await prisma.user_roles.findMany()
   * 
   * // Get first 10 User_roles
   * const user_roles = await prisma.user_roles.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const user_rolesWithIdOnly = await prisma.user_roles.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends user_rolesFindManyArgs>(args?: Prisma.SelectSubset<T, user_rolesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a User_roles.
   * @param {user_rolesCreateArgs} args - Arguments to create a User_roles.
   * @example
   * // Create one User_roles
   * const User_roles = await prisma.user_roles.create({
   *   data: {
   *     // ... data to create a User_roles
   *   }
   * })
   * 
   */
  create<T extends user_rolesCreateArgs>(args: Prisma.SelectSubset<T, user_rolesCreateArgs<ExtArgs>>): Prisma.Prisma__user_rolesClient<runtime.Types.Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many User_roles.
   * @param {user_rolesCreateManyArgs} args - Arguments to create many User_roles.
   * @example
   * // Create many User_roles
   * const user_roles = await prisma.user_roles.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends user_rolesCreateManyArgs>(args?: Prisma.SelectSubset<T, user_rolesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many User_roles and returns the data saved in the database.
   * @param {user_rolesCreateManyAndReturnArgs} args - Arguments to create many User_roles.
   * @example
   * // Create many User_roles
   * const user_roles = await prisma.user_roles.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many User_roles and only return the `id`
   * const user_rolesWithIdOnly = await prisma.user_roles.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends user_rolesCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, user_rolesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a User_roles.
   * @param {user_rolesDeleteArgs} args - Arguments to delete one User_roles.
   * @example
   * // Delete one User_roles
   * const User_roles = await prisma.user_roles.delete({
   *   where: {
   *     // ... filter to delete one User_roles
   *   }
   * })
   * 
   */
  delete<T extends user_rolesDeleteArgs>(args: Prisma.SelectSubset<T, user_rolesDeleteArgs<ExtArgs>>): Prisma.Prisma__user_rolesClient<runtime.Types.Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one User_roles.
   * @param {user_rolesUpdateArgs} args - Arguments to update one User_roles.
   * @example
   * // Update one User_roles
   * const user_roles = await prisma.user_roles.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends user_rolesUpdateArgs>(args: Prisma.SelectSubset<T, user_rolesUpdateArgs<ExtArgs>>): Prisma.Prisma__user_rolesClient<runtime.Types.Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more User_roles.
   * @param {user_rolesDeleteManyArgs} args - Arguments to filter User_roles to delete.
   * @example
   * // Delete a few User_roles
   * const { count } = await prisma.user_roles.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends user_rolesDeleteManyArgs>(args?: Prisma.SelectSubset<T, user_rolesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more User_roles.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {user_rolesUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many User_roles
   * const user_roles = await prisma.user_roles.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends user_rolesUpdateManyArgs>(args: Prisma.SelectSubset<T, user_rolesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more User_roles and returns the data updated in the database.
   * @param {user_rolesUpdateManyAndReturnArgs} args - Arguments to update many User_roles.
   * @example
   * // Update many User_roles
   * const user_roles = await prisma.user_roles.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more User_roles and only return the `id`
   * const user_rolesWithIdOnly = await prisma.user_roles.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends user_rolesUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, user_rolesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one User_roles.
   * @param {user_rolesUpsertArgs} args - Arguments to update or create a User_roles.
   * @example
   * // Update or create a User_roles
   * const user_roles = await prisma.user_roles.upsert({
   *   create: {
   *     // ... data to create a User_roles
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the User_roles we want to update
   *   }
   * })
   */
  upsert<T extends user_rolesUpsertArgs>(args: Prisma.SelectSubset<T, user_rolesUpsertArgs<ExtArgs>>): Prisma.Prisma__user_rolesClient<runtime.Types.Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of User_roles.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {user_rolesCountArgs} args - Arguments to filter User_roles to count.
   * @example
   * // Count the number of User_roles
   * const count = await prisma.user_roles.count({
   *   where: {
   *     // ... the filter for the User_roles we want to count
   *   }
   * })
  **/
  count<T extends user_rolesCountArgs>(
    args?: Prisma.Subset<T, user_rolesCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], User_rolesCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a User_roles.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {User_rolesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends User_rolesAggregateArgs>(args: Prisma.Subset<T, User_rolesAggregateArgs>): Prisma.PrismaPromise<GetUser_rolesAggregateType<T>>

  /**
   * Group by User_roles.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {user_rolesGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends user_rolesGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: user_rolesGroupByArgs['orderBy'] }
      : { orderBy?: user_rolesGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, user_rolesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_rolesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the user_roles model
 */
readonly fields: user_rolesFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for user_roles.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__user_rolesClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  User<T extends Prisma.UserDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.UserDefaultArgs<ExtArgs>>): Prisma.Prisma__UserClient<runtime.Types.Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the user_roles model
 */
export interface user_rolesFieldRefs {
  readonly id: Prisma.FieldRef<"user_roles", 'String'>
  readonly userId: Prisma.FieldRef<"user_roles", 'String'>
  readonly role: Prisma.FieldRef<"user_roles", 'String'>
  readonly department: Prisma.FieldRef<"user_roles", 'String'>
  readonly isPrimary: Prisma.FieldRef<"user_roles", 'Boolean'>
  readonly createdAt: Prisma.FieldRef<"user_roles", 'DateTime'>
}
    

// Custom InputTypes
/**
 * user_roles findUnique
 */
export type user_rolesFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the user_roles
   */
  select?: Prisma.user_rolesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the user_roles
   */
  omit?: Prisma.user_rolesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.user_rolesInclude<ExtArgs> | null
  /**
   * Filter, which user_roles to fetch.
   */
  where: Prisma.user_rolesWhereUniqueInput
}

/**
 * user_roles findUniqueOrThrow
 */
export type user_rolesFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the user_roles
   */
  select?: Prisma.user_rolesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the user_roles
   */
  omit?: Prisma.user_rolesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.user_rolesInclude<ExtArgs> | null
  /**
   * Filter, which user_roles to fetch.
   */
  where: Prisma.user_rolesWhereUniqueInput
}

/**
 * user_roles findFirst
 */
export type user_rolesFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the user_roles
   */
  select?: Prisma.user_rolesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the user_roles
   */
  omit?: Prisma.user_rolesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.user_rolesInclude<ExtArgs> | null
  /**
   * Filter, which user_roles to fetch.
   */
  where?: Prisma.user_rolesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of user_roles to fetch.
   */
  orderBy?: Prisma.user_rolesOrderByWithRelationInput | Prisma.user_rolesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for user_roles.
   */
  cursor?: Prisma.user_rolesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` user_roles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` user_roles.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of user_roles.
   */
  distinct?: Prisma.User_rolesScalarFieldEnum | Prisma.User_rolesScalarFieldEnum[]
}

/**
 * user_roles findFirstOrThrow
 */
export type user_rolesFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the user_roles
   */
  select?: Prisma.user_rolesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the user_roles
   */
  omit?: Prisma.user_rolesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.user_rolesInclude<ExtArgs> | null
  /**
   * Filter, which user_roles to fetch.
   */
  where?: Prisma.user_rolesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of user_roles to fetch.
   */
  orderBy?: Prisma.user_rolesOrderByWithRelationInput | Prisma.user_rolesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for user_roles.
   */
  cursor?: Prisma.user_rolesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` user_roles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` user_roles.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of user_roles.
   */
  distinct?: Prisma.User_rolesScalarFieldEnum | Prisma.User_rolesScalarFieldEnum[]
}

/**
 * user_roles findMany
 */
export type user_rolesFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the user_roles
   */
  select?: Prisma.user_rolesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the user_roles
   */
  omit?: Prisma.user_rolesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.user_rolesInclude<ExtArgs> | null
  /**
   * Filter, which user_roles to fetch.
   */
  where?: Prisma.user_rolesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of user_roles to fetch.
   */
  orderBy?: Prisma.user_rolesOrderByWithRelationInput | Prisma.user_rolesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing user_roles.
   */
  cursor?: Prisma.user_rolesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` user_roles from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` user_roles.
   */
  skip?: number
  distinct?: Prisma.User_rolesScalarFieldEnum | Prisma.User_rolesScalarFieldEnum[]
}

/**
 * user_roles create
 */
export type user_rolesCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the user_roles
   */
  select?: Prisma.user_rolesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the user_roles
   */
  omit?: Prisma.user_rolesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.user_rolesInclude<ExtArgs> | null
  /**
   * The data needed to create a user_roles.
   */
  data: Prisma.XOR<Prisma.user_rolesCreateInput, Prisma.user_rolesUncheckedCreateInput>
}

/**
 * user_roles createMany
 */
export type user_rolesCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many user_roles.
   */
  data: Prisma.user_rolesCreateManyInput | Prisma.user_rolesCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * user_roles createManyAndReturn
 */
export type user_rolesCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the user_roles
   */
  select?: Prisma.user_rolesSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the user_roles
   */
  omit?: Prisma.user_rolesOmit<ExtArgs> | null
  /**
   * The data used to create many user_roles.
   */
  data: Prisma.user_rolesCreateManyInput | Prisma.user_rolesCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.user_rolesIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * user_roles update
 */
export type user_rolesUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the user_roles
   */
  select?: Prisma.user_rolesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the user_roles
   */
  omit?: Prisma.user_rolesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.user_rolesInclude<ExtArgs> | null
  /**
   * The data needed to update a user_roles.
   */
  data: Prisma.XOR<Prisma.user_rolesUpdateInput, Prisma.user_rolesUncheckedUpdateInput>
  /**
   * Choose, which user_roles to update.
   */
  where: Prisma.user_rolesWhereUniqueInput
}

/**
 * user_roles updateMany
 */
export type user_rolesUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update user_roles.
   */
  data: Prisma.XOR<Prisma.user_rolesUpdateManyMutationInput, Prisma.user_rolesUncheckedUpdateManyInput>
  /**
   * Filter which user_roles to update
   */
  where?: Prisma.user_rolesWhereInput
  /**
   * Limit how many user_roles to update.
   */
  limit?: number
}

/**
 * user_roles updateManyAndReturn
 */
export type user_rolesUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the user_roles
   */
  select?: Prisma.user_rolesSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the user_roles
   */
  omit?: Prisma.user_rolesOmit<ExtArgs> | null
  /**
   * The data used to update user_roles.
   */
  data: Prisma.XOR<Prisma.user_rolesUpdateManyMutationInput, Prisma.user_rolesUncheckedUpdateManyInput>
  /**
   * Filter which user_roles to update
   */
  where?: Prisma.user_rolesWhereInput
  /**
   * Limit how many user_roles to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.user_rolesIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * user_roles upsert
 */
export type user_rolesUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the user_roles
   */
  select?: Prisma.user_rolesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the user_roles
   */
  omit?: Prisma.user_rolesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.user_rolesInclude<ExtArgs> | null
  /**
   * The filter to search for the user_roles to update in case it exists.
   */
  where: Prisma.user_rolesWhereUniqueInput
  /**
   * In case the user_roles found by the `where` argument doesn't exist, create a new user_roles with this data.
   */
  create: Prisma.XOR<Prisma.user_rolesCreateInput, Prisma.user_rolesUncheckedCreateInput>
  /**
   * In case the user_roles was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.user_rolesUpdateInput, Prisma.user_rolesUncheckedUpdateInput>
}

/**
 * user_roles delete
 */
export type user_rolesDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the user_roles
   */
  select?: Prisma.user_rolesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the user_roles
   */
  omit?: Prisma.user_rolesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.user_rolesInclude<ExtArgs> | null
  /**
   * Filter which user_roles to delete.
   */
  where: Prisma.user_rolesWhereUniqueInput
}

/**
 * user_roles deleteMany
 */
export type user_rolesDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which user_roles to delete
   */
  where?: Prisma.user_rolesWhereInput
  /**
   * Limit how many user_roles to delete.
   */
  limit?: number
}

/**
 * user_roles without action
 */
export type user_rolesDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the user_roles
   */
  select?: Prisma.user_rolesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the user_roles
   */
  omit?: Prisma.user_rolesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.user_rolesInclude<ExtArgs> | null
}
