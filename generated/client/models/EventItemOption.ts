
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `EventItemOption` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model EventItemOption
 * 
 */
export type EventItemOptionModel = runtime.Types.Result.DefaultSelection<Prisma.$EventItemOptionPayload>

export type AggregateEventItemOption = {
  _count: EventItemOptionCountAggregateOutputType | null
  _avg: EventItemOptionAvgAggregateOutputType | null
  _sum: EventItemOptionSumAggregateOutputType | null
  _min: EventItemOptionMinAggregateOutputType | null
  _max: EventItemOptionMaxAggregateOutputType | null
}

export type EventItemOptionAvgAggregateOutputType = {
  priceAdjustment: number | null
}

export type EventItemOptionSumAggregateOutputType = {
  priceAdjustment: number | null
}

export type EventItemOptionMinAggregateOutputType = {
  id: string | null
  eventItemId: string | null
  optionId: string | null
  optionName: string | null
  value: string | null
  label: string | null
  priceAdjustment: number | null
  createdAt: Date | null
}

export type EventItemOptionMaxAggregateOutputType = {
  id: string | null
  eventItemId: string | null
  optionId: string | null
  optionName: string | null
  value: string | null
  label: string | null
  priceAdjustment: number | null
  createdAt: Date | null
}

export type EventItemOptionCountAggregateOutputType = {
  id: number
  eventItemId: number
  optionId: number
  optionName: number
  value: number
  label: number
  priceAdjustment: number
  createdAt: number
  _all: number
}


export type EventItemOptionAvgAggregateInputType = {
  priceAdjustment?: true
}

export type EventItemOptionSumAggregateInputType = {
  priceAdjustment?: true
}

export type EventItemOptionMinAggregateInputType = {
  id?: true
  eventItemId?: true
  optionId?: true
  optionName?: true
  value?: true
  label?: true
  priceAdjustment?: true
  createdAt?: true
}

export type EventItemOptionMaxAggregateInputType = {
  id?: true
  eventItemId?: true
  optionId?: true
  optionName?: true
  value?: true
  label?: true
  priceAdjustment?: true
  createdAt?: true
}

export type EventItemOptionCountAggregateInputType = {
  id?: true
  eventItemId?: true
  optionId?: true
  optionName?: true
  value?: true
  label?: true
  priceAdjustment?: true
  createdAt?: true
  _all?: true
}

export type EventItemOptionAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which EventItemOption to aggregate.
   */
  where?: Prisma.EventItemOptionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of EventItemOptions to fetch.
   */
  orderBy?: Prisma.EventItemOptionOrderByWithRelationInput | Prisma.EventItemOptionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.EventItemOptionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` EventItemOptions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` EventItemOptions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned EventItemOptions
  **/
  _count?: true | EventItemOptionCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: EventItemOptionAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: EventItemOptionSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: EventItemOptionMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: EventItemOptionMaxAggregateInputType
}

export type GetEventItemOptionAggregateType<T extends EventItemOptionAggregateArgs> = {
      [P in keyof T & keyof AggregateEventItemOption]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateEventItemOption[P]>
    : Prisma.GetScalarType<T[P], AggregateEventItemOption[P]>
}




export type EventItemOptionGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.EventItemOptionWhereInput
  orderBy?: Prisma.EventItemOptionOrderByWithAggregationInput | Prisma.EventItemOptionOrderByWithAggregationInput[]
  by: Prisma.EventItemOptionScalarFieldEnum[] | Prisma.EventItemOptionScalarFieldEnum
  having?: Prisma.EventItemOptionScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: EventItemOptionCountAggregateInputType | true
  _avg?: EventItemOptionAvgAggregateInputType
  _sum?: EventItemOptionSumAggregateInputType
  _min?: EventItemOptionMinAggregateInputType
  _max?: EventItemOptionMaxAggregateInputType
}

export type EventItemOptionGroupByOutputType = {
  id: string
  eventItemId: string
  optionId: string
  optionName: string
  value: string
  label: string | null
  priceAdjustment: number
  createdAt: Date
  _count: EventItemOptionCountAggregateOutputType | null
  _avg: EventItemOptionAvgAggregateOutputType | null
  _sum: EventItemOptionSumAggregateOutputType | null
  _min: EventItemOptionMinAggregateOutputType | null
  _max: EventItemOptionMaxAggregateOutputType | null
}

type GetEventItemOptionGroupByPayload<T extends EventItemOptionGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<EventItemOptionGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof EventItemOptionGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], EventItemOptionGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], EventItemOptionGroupByOutputType[P]>
      }
    >
  > 



export type EventItemOptionWhereInput = {
  AND?: Prisma.EventItemOptionWhereInput | Prisma.EventItemOptionWhereInput[]
  OR?: Prisma.EventItemOptionWhereInput[]
  NOT?: Prisma.EventItemOptionWhereInput | Prisma.EventItemOptionWhereInput[]
  id?: Prisma.StringFilter<"EventItemOption"> | string
  eventItemId?: Prisma.StringFilter<"EventItemOption"> | string
  optionId?: Prisma.StringFilter<"EventItemOption"> | string
  optionName?: Prisma.StringFilter<"EventItemOption"> | string
  value?: Prisma.StringFilter<"EventItemOption"> | string
  label?: Prisma.StringNullableFilter<"EventItemOption"> | string | null
  priceAdjustment?: Prisma.FloatFilter<"EventItemOption"> | number
  createdAt?: Prisma.DateTimeFilter<"EventItemOption"> | Date | string
  eventItem?: Prisma.XOR<Prisma.EventItemScalarRelationFilter, Prisma.EventItemWhereInput>
  option?: Prisma.XOR<Prisma.ProductOptionScalarRelationFilter, Prisma.ProductOptionWhereInput>
}

export type EventItemOptionOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  eventItemId?: Prisma.SortOrder
  optionId?: Prisma.SortOrder
  optionName?: Prisma.SortOrder
  value?: Prisma.SortOrder
  label?: Prisma.SortOrderInput | Prisma.SortOrder
  priceAdjustment?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  eventItem?: Prisma.EventItemOrderByWithRelationInput
  option?: Prisma.ProductOptionOrderByWithRelationInput
}

export type EventItemOptionWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.EventItemOptionWhereInput | Prisma.EventItemOptionWhereInput[]
  OR?: Prisma.EventItemOptionWhereInput[]
  NOT?: Prisma.EventItemOptionWhereInput | Prisma.EventItemOptionWhereInput[]
  eventItemId?: Prisma.StringFilter<"EventItemOption"> | string
  optionId?: Prisma.StringFilter<"EventItemOption"> | string
  optionName?: Prisma.StringFilter<"EventItemOption"> | string
  value?: Prisma.StringFilter<"EventItemOption"> | string
  label?: Prisma.StringNullableFilter<"EventItemOption"> | string | null
  priceAdjustment?: Prisma.FloatFilter<"EventItemOption"> | number
  createdAt?: Prisma.DateTimeFilter<"EventItemOption"> | Date | string
  eventItem?: Prisma.XOR<Prisma.EventItemScalarRelationFilter, Prisma.EventItemWhereInput>
  option?: Prisma.XOR<Prisma.ProductOptionScalarRelationFilter, Prisma.ProductOptionWhereInput>
}, "id">

export type EventItemOptionOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  eventItemId?: Prisma.SortOrder
  optionId?: Prisma.SortOrder
  optionName?: Prisma.SortOrder
  value?: Prisma.SortOrder
  label?: Prisma.SortOrderInput | Prisma.SortOrder
  priceAdjustment?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  _count?: Prisma.EventItemOptionCountOrderByAggregateInput
  _avg?: Prisma.EventItemOptionAvgOrderByAggregateInput
  _max?: Prisma.EventItemOptionMaxOrderByAggregateInput
  _min?: Prisma.EventItemOptionMinOrderByAggregateInput
  _sum?: Prisma.EventItemOptionSumOrderByAggregateInput
}

export type EventItemOptionScalarWhereWithAggregatesInput = {
  AND?: Prisma.EventItemOptionScalarWhereWithAggregatesInput | Prisma.EventItemOptionScalarWhereWithAggregatesInput[]
  OR?: Prisma.EventItemOptionScalarWhereWithAggregatesInput[]
  NOT?: Prisma.EventItemOptionScalarWhereWithAggregatesInput | Prisma.EventItemOptionScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"EventItemOption"> | string
  eventItemId?: Prisma.StringWithAggregatesFilter<"EventItemOption"> | string
  optionId?: Prisma.StringWithAggregatesFilter<"EventItemOption"> | string
  optionName?: Prisma.StringWithAggregatesFilter<"EventItemOption"> | string
  value?: Prisma.StringWithAggregatesFilter<"EventItemOption"> | string
  label?: Prisma.StringNullableWithAggregatesFilter<"EventItemOption"> | string | null
  priceAdjustment?: Prisma.FloatWithAggregatesFilter<"EventItemOption"> | number
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"EventItemOption"> | Date | string
}

export type EventItemOptionCreateInput = {
  id?: string
  optionName: string
  value: string
  label?: string | null
  priceAdjustment?: number
  createdAt?: Date | string
  eventItem: Prisma.EventItemCreateNestedOneWithoutSelectedOptionsInput
  option: Prisma.ProductOptionCreateNestedOneWithoutEventItemOptionsInput
}

export type EventItemOptionUncheckedCreateInput = {
  id?: string
  eventItemId: string
  optionId: string
  optionName: string
  value: string
  label?: string | null
  priceAdjustment?: number
  createdAt?: Date | string
}

export type EventItemOptionUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  optionName?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.StringFieldUpdateOperationsInput | string
  label?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priceAdjustment?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  eventItem?: Prisma.EventItemUpdateOneRequiredWithoutSelectedOptionsNestedInput
  option?: Prisma.ProductOptionUpdateOneRequiredWithoutEventItemOptionsNestedInput
}

export type EventItemOptionUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  eventItemId?: Prisma.StringFieldUpdateOperationsInput | string
  optionId?: Prisma.StringFieldUpdateOperationsInput | string
  optionName?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.StringFieldUpdateOperationsInput | string
  label?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priceAdjustment?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EventItemOptionCreateManyInput = {
  id?: string
  eventItemId: string
  optionId: string
  optionName: string
  value: string
  label?: string | null
  priceAdjustment?: number
  createdAt?: Date | string
}

export type EventItemOptionUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  optionName?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.StringFieldUpdateOperationsInput | string
  label?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priceAdjustment?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EventItemOptionUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  eventItemId?: Prisma.StringFieldUpdateOperationsInput | string
  optionId?: Prisma.StringFieldUpdateOperationsInput | string
  optionName?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.StringFieldUpdateOperationsInput | string
  label?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priceAdjustment?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EventItemOptionListRelationFilter = {
  every?: Prisma.EventItemOptionWhereInput
  some?: Prisma.EventItemOptionWhereInput
  none?: Prisma.EventItemOptionWhereInput
}

export type EventItemOptionOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type EventItemOptionCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  eventItemId?: Prisma.SortOrder
  optionId?: Prisma.SortOrder
  optionName?: Prisma.SortOrder
  value?: Prisma.SortOrder
  label?: Prisma.SortOrder
  priceAdjustment?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type EventItemOptionAvgOrderByAggregateInput = {
  priceAdjustment?: Prisma.SortOrder
}

export type EventItemOptionMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  eventItemId?: Prisma.SortOrder
  optionId?: Prisma.SortOrder
  optionName?: Prisma.SortOrder
  value?: Prisma.SortOrder
  label?: Prisma.SortOrder
  priceAdjustment?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type EventItemOptionMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  eventItemId?: Prisma.SortOrder
  optionId?: Prisma.SortOrder
  optionName?: Prisma.SortOrder
  value?: Prisma.SortOrder
  label?: Prisma.SortOrder
  priceAdjustment?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
}

export type EventItemOptionSumOrderByAggregateInput = {
  priceAdjustment?: Prisma.SortOrder
}

export type EventItemOptionCreateNestedManyWithoutEventItemInput = {
  create?: Prisma.XOR<Prisma.EventItemOptionCreateWithoutEventItemInput, Prisma.EventItemOptionUncheckedCreateWithoutEventItemInput> | Prisma.EventItemOptionCreateWithoutEventItemInput[] | Prisma.EventItemOptionUncheckedCreateWithoutEventItemInput[]
  connectOrCreate?: Prisma.EventItemOptionCreateOrConnectWithoutEventItemInput | Prisma.EventItemOptionCreateOrConnectWithoutEventItemInput[]
  createMany?: Prisma.EventItemOptionCreateManyEventItemInputEnvelope
  connect?: Prisma.EventItemOptionWhereUniqueInput | Prisma.EventItemOptionWhereUniqueInput[]
}

export type EventItemOptionUncheckedCreateNestedManyWithoutEventItemInput = {
  create?: Prisma.XOR<Prisma.EventItemOptionCreateWithoutEventItemInput, Prisma.EventItemOptionUncheckedCreateWithoutEventItemInput> | Prisma.EventItemOptionCreateWithoutEventItemInput[] | Prisma.EventItemOptionUncheckedCreateWithoutEventItemInput[]
  connectOrCreate?: Prisma.EventItemOptionCreateOrConnectWithoutEventItemInput | Prisma.EventItemOptionCreateOrConnectWithoutEventItemInput[]
  createMany?: Prisma.EventItemOptionCreateManyEventItemInputEnvelope
  connect?: Prisma.EventItemOptionWhereUniqueInput | Prisma.EventItemOptionWhereUniqueInput[]
}

export type EventItemOptionUpdateManyWithoutEventItemNestedInput = {
  create?: Prisma.XOR<Prisma.EventItemOptionCreateWithoutEventItemInput, Prisma.EventItemOptionUncheckedCreateWithoutEventItemInput> | Prisma.EventItemOptionCreateWithoutEventItemInput[] | Prisma.EventItemOptionUncheckedCreateWithoutEventItemInput[]
  connectOrCreate?: Prisma.EventItemOptionCreateOrConnectWithoutEventItemInput | Prisma.EventItemOptionCreateOrConnectWithoutEventItemInput[]
  upsert?: Prisma.EventItemOptionUpsertWithWhereUniqueWithoutEventItemInput | Prisma.EventItemOptionUpsertWithWhereUniqueWithoutEventItemInput[]
  createMany?: Prisma.EventItemOptionCreateManyEventItemInputEnvelope
  set?: Prisma.EventItemOptionWhereUniqueInput | Prisma.EventItemOptionWhereUniqueInput[]
  disconnect?: Prisma.EventItemOptionWhereUniqueInput | Prisma.EventItemOptionWhereUniqueInput[]
  delete?: Prisma.EventItemOptionWhereUniqueInput | Prisma.EventItemOptionWhereUniqueInput[]
  connect?: Prisma.EventItemOptionWhereUniqueInput | Prisma.EventItemOptionWhereUniqueInput[]
  update?: Prisma.EventItemOptionUpdateWithWhereUniqueWithoutEventItemInput | Prisma.EventItemOptionUpdateWithWhereUniqueWithoutEventItemInput[]
  updateMany?: Prisma.EventItemOptionUpdateManyWithWhereWithoutEventItemInput | Prisma.EventItemOptionUpdateManyWithWhereWithoutEventItemInput[]
  deleteMany?: Prisma.EventItemOptionScalarWhereInput | Prisma.EventItemOptionScalarWhereInput[]
}

export type EventItemOptionUncheckedUpdateManyWithoutEventItemNestedInput = {
  create?: Prisma.XOR<Prisma.EventItemOptionCreateWithoutEventItemInput, Prisma.EventItemOptionUncheckedCreateWithoutEventItemInput> | Prisma.EventItemOptionCreateWithoutEventItemInput[] | Prisma.EventItemOptionUncheckedCreateWithoutEventItemInput[]
  connectOrCreate?: Prisma.EventItemOptionCreateOrConnectWithoutEventItemInput | Prisma.EventItemOptionCreateOrConnectWithoutEventItemInput[]
  upsert?: Prisma.EventItemOptionUpsertWithWhereUniqueWithoutEventItemInput | Prisma.EventItemOptionUpsertWithWhereUniqueWithoutEventItemInput[]
  createMany?: Prisma.EventItemOptionCreateManyEventItemInputEnvelope
  set?: Prisma.EventItemOptionWhereUniqueInput | Prisma.EventItemOptionWhereUniqueInput[]
  disconnect?: Prisma.EventItemOptionWhereUniqueInput | Prisma.EventItemOptionWhereUniqueInput[]
  delete?: Prisma.EventItemOptionWhereUniqueInput | Prisma.EventItemOptionWhereUniqueInput[]
  connect?: Prisma.EventItemOptionWhereUniqueInput | Prisma.EventItemOptionWhereUniqueInput[]
  update?: Prisma.EventItemOptionUpdateWithWhereUniqueWithoutEventItemInput | Prisma.EventItemOptionUpdateWithWhereUniqueWithoutEventItemInput[]
  updateMany?: Prisma.EventItemOptionUpdateManyWithWhereWithoutEventItemInput | Prisma.EventItemOptionUpdateManyWithWhereWithoutEventItemInput[]
  deleteMany?: Prisma.EventItemOptionScalarWhereInput | Prisma.EventItemOptionScalarWhereInput[]
}

export type FloatFieldUpdateOperationsInput = {
  set?: number
  increment?: number
  decrement?: number
  multiply?: number
  divide?: number
}

export type EventItemOptionCreateNestedManyWithoutOptionInput = {
  create?: Prisma.XOR<Prisma.EventItemOptionCreateWithoutOptionInput, Prisma.EventItemOptionUncheckedCreateWithoutOptionInput> | Prisma.EventItemOptionCreateWithoutOptionInput[] | Prisma.EventItemOptionUncheckedCreateWithoutOptionInput[]
  connectOrCreate?: Prisma.EventItemOptionCreateOrConnectWithoutOptionInput | Prisma.EventItemOptionCreateOrConnectWithoutOptionInput[]
  createMany?: Prisma.EventItemOptionCreateManyOptionInputEnvelope
  connect?: Prisma.EventItemOptionWhereUniqueInput | Prisma.EventItemOptionWhereUniqueInput[]
}

export type EventItemOptionUncheckedCreateNestedManyWithoutOptionInput = {
  create?: Prisma.XOR<Prisma.EventItemOptionCreateWithoutOptionInput, Prisma.EventItemOptionUncheckedCreateWithoutOptionInput> | Prisma.EventItemOptionCreateWithoutOptionInput[] | Prisma.EventItemOptionUncheckedCreateWithoutOptionInput[]
  connectOrCreate?: Prisma.EventItemOptionCreateOrConnectWithoutOptionInput | Prisma.EventItemOptionCreateOrConnectWithoutOptionInput[]
  createMany?: Prisma.EventItemOptionCreateManyOptionInputEnvelope
  connect?: Prisma.EventItemOptionWhereUniqueInput | Prisma.EventItemOptionWhereUniqueInput[]
}

export type EventItemOptionUpdateManyWithoutOptionNestedInput = {
  create?: Prisma.XOR<Prisma.EventItemOptionCreateWithoutOptionInput, Prisma.EventItemOptionUncheckedCreateWithoutOptionInput> | Prisma.EventItemOptionCreateWithoutOptionInput[] | Prisma.EventItemOptionUncheckedCreateWithoutOptionInput[]
  connectOrCreate?: Prisma.EventItemOptionCreateOrConnectWithoutOptionInput | Prisma.EventItemOptionCreateOrConnectWithoutOptionInput[]
  upsert?: Prisma.EventItemOptionUpsertWithWhereUniqueWithoutOptionInput | Prisma.EventItemOptionUpsertWithWhereUniqueWithoutOptionInput[]
  createMany?: Prisma.EventItemOptionCreateManyOptionInputEnvelope
  set?: Prisma.EventItemOptionWhereUniqueInput | Prisma.EventItemOptionWhereUniqueInput[]
  disconnect?: Prisma.EventItemOptionWhereUniqueInput | Prisma.EventItemOptionWhereUniqueInput[]
  delete?: Prisma.EventItemOptionWhereUniqueInput | Prisma.EventItemOptionWhereUniqueInput[]
  connect?: Prisma.EventItemOptionWhereUniqueInput | Prisma.EventItemOptionWhereUniqueInput[]
  update?: Prisma.EventItemOptionUpdateWithWhereUniqueWithoutOptionInput | Prisma.EventItemOptionUpdateWithWhereUniqueWithoutOptionInput[]
  updateMany?: Prisma.EventItemOptionUpdateManyWithWhereWithoutOptionInput | Prisma.EventItemOptionUpdateManyWithWhereWithoutOptionInput[]
  deleteMany?: Prisma.EventItemOptionScalarWhereInput | Prisma.EventItemOptionScalarWhereInput[]
}

export type EventItemOptionUncheckedUpdateManyWithoutOptionNestedInput = {
  create?: Prisma.XOR<Prisma.EventItemOptionCreateWithoutOptionInput, Prisma.EventItemOptionUncheckedCreateWithoutOptionInput> | Prisma.EventItemOptionCreateWithoutOptionInput[] | Prisma.EventItemOptionUncheckedCreateWithoutOptionInput[]
  connectOrCreate?: Prisma.EventItemOptionCreateOrConnectWithoutOptionInput | Prisma.EventItemOptionCreateOrConnectWithoutOptionInput[]
  upsert?: Prisma.EventItemOptionUpsertWithWhereUniqueWithoutOptionInput | Prisma.EventItemOptionUpsertWithWhereUniqueWithoutOptionInput[]
  createMany?: Prisma.EventItemOptionCreateManyOptionInputEnvelope
  set?: Prisma.EventItemOptionWhereUniqueInput | Prisma.EventItemOptionWhereUniqueInput[]
  disconnect?: Prisma.EventItemOptionWhereUniqueInput | Prisma.EventItemOptionWhereUniqueInput[]
  delete?: Prisma.EventItemOptionWhereUniqueInput | Prisma.EventItemOptionWhereUniqueInput[]
  connect?: Prisma.EventItemOptionWhereUniqueInput | Prisma.EventItemOptionWhereUniqueInput[]
  update?: Prisma.EventItemOptionUpdateWithWhereUniqueWithoutOptionInput | Prisma.EventItemOptionUpdateWithWhereUniqueWithoutOptionInput[]
  updateMany?: Prisma.EventItemOptionUpdateManyWithWhereWithoutOptionInput | Prisma.EventItemOptionUpdateManyWithWhereWithoutOptionInput[]
  deleteMany?: Prisma.EventItemOptionScalarWhereInput | Prisma.EventItemOptionScalarWhereInput[]
}

export type EventItemOptionCreateWithoutEventItemInput = {
  id?: string
  optionName: string
  value: string
  label?: string | null
  priceAdjustment?: number
  createdAt?: Date | string
  option: Prisma.ProductOptionCreateNestedOneWithoutEventItemOptionsInput
}

export type EventItemOptionUncheckedCreateWithoutEventItemInput = {
  id?: string
  optionId: string
  optionName: string
  value: string
  label?: string | null
  priceAdjustment?: number
  createdAt?: Date | string
}

export type EventItemOptionCreateOrConnectWithoutEventItemInput = {
  where: Prisma.EventItemOptionWhereUniqueInput
  create: Prisma.XOR<Prisma.EventItemOptionCreateWithoutEventItemInput, Prisma.EventItemOptionUncheckedCreateWithoutEventItemInput>
}

export type EventItemOptionCreateManyEventItemInputEnvelope = {
  data: Prisma.EventItemOptionCreateManyEventItemInput | Prisma.EventItemOptionCreateManyEventItemInput[]
  skipDuplicates?: boolean
}

export type EventItemOptionUpsertWithWhereUniqueWithoutEventItemInput = {
  where: Prisma.EventItemOptionWhereUniqueInput
  update: Prisma.XOR<Prisma.EventItemOptionUpdateWithoutEventItemInput, Prisma.EventItemOptionUncheckedUpdateWithoutEventItemInput>
  create: Prisma.XOR<Prisma.EventItemOptionCreateWithoutEventItemInput, Prisma.EventItemOptionUncheckedCreateWithoutEventItemInput>
}

export type EventItemOptionUpdateWithWhereUniqueWithoutEventItemInput = {
  where: Prisma.EventItemOptionWhereUniqueInput
  data: Prisma.XOR<Prisma.EventItemOptionUpdateWithoutEventItemInput, Prisma.EventItemOptionUncheckedUpdateWithoutEventItemInput>
}

export type EventItemOptionUpdateManyWithWhereWithoutEventItemInput = {
  where: Prisma.EventItemOptionScalarWhereInput
  data: Prisma.XOR<Prisma.EventItemOptionUpdateManyMutationInput, Prisma.EventItemOptionUncheckedUpdateManyWithoutEventItemInput>
}

export type EventItemOptionScalarWhereInput = {
  AND?: Prisma.EventItemOptionScalarWhereInput | Prisma.EventItemOptionScalarWhereInput[]
  OR?: Prisma.EventItemOptionScalarWhereInput[]
  NOT?: Prisma.EventItemOptionScalarWhereInput | Prisma.EventItemOptionScalarWhereInput[]
  id?: Prisma.StringFilter<"EventItemOption"> | string
  eventItemId?: Prisma.StringFilter<"EventItemOption"> | string
  optionId?: Prisma.StringFilter<"EventItemOption"> | string
  optionName?: Prisma.StringFilter<"EventItemOption"> | string
  value?: Prisma.StringFilter<"EventItemOption"> | string
  label?: Prisma.StringNullableFilter<"EventItemOption"> | string | null
  priceAdjustment?: Prisma.FloatFilter<"EventItemOption"> | number
  createdAt?: Prisma.DateTimeFilter<"EventItemOption"> | Date | string
}

export type EventItemOptionCreateWithoutOptionInput = {
  id?: string
  optionName: string
  value: string
  label?: string | null
  priceAdjustment?: number
  createdAt?: Date | string
  eventItem: Prisma.EventItemCreateNestedOneWithoutSelectedOptionsInput
}

export type EventItemOptionUncheckedCreateWithoutOptionInput = {
  id?: string
  eventItemId: string
  optionName: string
  value: string
  label?: string | null
  priceAdjustment?: number
  createdAt?: Date | string
}

export type EventItemOptionCreateOrConnectWithoutOptionInput = {
  where: Prisma.EventItemOptionWhereUniqueInput
  create: Prisma.XOR<Prisma.EventItemOptionCreateWithoutOptionInput, Prisma.EventItemOptionUncheckedCreateWithoutOptionInput>
}

export type EventItemOptionCreateManyOptionInputEnvelope = {
  data: Prisma.EventItemOptionCreateManyOptionInput | Prisma.EventItemOptionCreateManyOptionInput[]
  skipDuplicates?: boolean
}

export type EventItemOptionUpsertWithWhereUniqueWithoutOptionInput = {
  where: Prisma.EventItemOptionWhereUniqueInput
  update: Prisma.XOR<Prisma.EventItemOptionUpdateWithoutOptionInput, Prisma.EventItemOptionUncheckedUpdateWithoutOptionInput>
  create: Prisma.XOR<Prisma.EventItemOptionCreateWithoutOptionInput, Prisma.EventItemOptionUncheckedCreateWithoutOptionInput>
}

export type EventItemOptionUpdateWithWhereUniqueWithoutOptionInput = {
  where: Prisma.EventItemOptionWhereUniqueInput
  data: Prisma.XOR<Prisma.EventItemOptionUpdateWithoutOptionInput, Prisma.EventItemOptionUncheckedUpdateWithoutOptionInput>
}

export type EventItemOptionUpdateManyWithWhereWithoutOptionInput = {
  where: Prisma.EventItemOptionScalarWhereInput
  data: Prisma.XOR<Prisma.EventItemOptionUpdateManyMutationInput, Prisma.EventItemOptionUncheckedUpdateManyWithoutOptionInput>
}

export type EventItemOptionCreateManyEventItemInput = {
  id?: string
  optionId: string
  optionName: string
  value: string
  label?: string | null
  priceAdjustment?: number
  createdAt?: Date | string
}

export type EventItemOptionUpdateWithoutEventItemInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  optionName?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.StringFieldUpdateOperationsInput | string
  label?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priceAdjustment?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  option?: Prisma.ProductOptionUpdateOneRequiredWithoutEventItemOptionsNestedInput
}

export type EventItemOptionUncheckedUpdateWithoutEventItemInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  optionId?: Prisma.StringFieldUpdateOperationsInput | string
  optionName?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.StringFieldUpdateOperationsInput | string
  label?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priceAdjustment?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EventItemOptionUncheckedUpdateManyWithoutEventItemInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  optionId?: Prisma.StringFieldUpdateOperationsInput | string
  optionName?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.StringFieldUpdateOperationsInput | string
  label?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priceAdjustment?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EventItemOptionCreateManyOptionInput = {
  id?: string
  eventItemId: string
  optionName: string
  value: string
  label?: string | null
  priceAdjustment?: number
  createdAt?: Date | string
}

export type EventItemOptionUpdateWithoutOptionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  optionName?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.StringFieldUpdateOperationsInput | string
  label?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priceAdjustment?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  eventItem?: Prisma.EventItemUpdateOneRequiredWithoutSelectedOptionsNestedInput
}

export type EventItemOptionUncheckedUpdateWithoutOptionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  eventItemId?: Prisma.StringFieldUpdateOperationsInput | string
  optionName?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.StringFieldUpdateOperationsInput | string
  label?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priceAdjustment?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type EventItemOptionUncheckedUpdateManyWithoutOptionInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  eventItemId?: Prisma.StringFieldUpdateOperationsInput | string
  optionName?: Prisma.StringFieldUpdateOperationsInput | string
  value?: Prisma.StringFieldUpdateOperationsInput | string
  label?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  priceAdjustment?: Prisma.FloatFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}



export type EventItemOptionSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  eventItemId?: boolean
  optionId?: boolean
  optionName?: boolean
  value?: boolean
  label?: boolean
  priceAdjustment?: boolean
  createdAt?: boolean
  eventItem?: boolean | Prisma.EventItemDefaultArgs<ExtArgs>
  option?: boolean | Prisma.ProductOptionDefaultArgs<ExtArgs>
}, ExtArgs["result"]["eventItemOption"]>

export type EventItemOptionSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  eventItemId?: boolean
  optionId?: boolean
  optionName?: boolean
  value?: boolean
  label?: boolean
  priceAdjustment?: boolean
  createdAt?: boolean
  eventItem?: boolean | Prisma.EventItemDefaultArgs<ExtArgs>
  option?: boolean | Prisma.ProductOptionDefaultArgs<ExtArgs>
}, ExtArgs["result"]["eventItemOption"]>

export type EventItemOptionSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  eventItemId?: boolean
  optionId?: boolean
  optionName?: boolean
  value?: boolean
  label?: boolean
  priceAdjustment?: boolean
  createdAt?: boolean
  eventItem?: boolean | Prisma.EventItemDefaultArgs<ExtArgs>
  option?: boolean | Prisma.ProductOptionDefaultArgs<ExtArgs>
}, ExtArgs["result"]["eventItemOption"]>

export type EventItemOptionSelectScalar = {
  id?: boolean
  eventItemId?: boolean
  optionId?: boolean
  optionName?: boolean
  value?: boolean
  label?: boolean
  priceAdjustment?: boolean
  createdAt?: boolean
}

export type EventItemOptionOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "eventItemId" | "optionId" | "optionName" | "value" | "label" | "priceAdjustment" | "createdAt", ExtArgs["result"]["eventItemOption"]>
export type EventItemOptionInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  eventItem?: boolean | Prisma.EventItemDefaultArgs<ExtArgs>
  option?: boolean | Prisma.ProductOptionDefaultArgs<ExtArgs>
}
export type EventItemOptionIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  eventItem?: boolean | Prisma.EventItemDefaultArgs<ExtArgs>
  option?: boolean | Prisma.ProductOptionDefaultArgs<ExtArgs>
}
export type EventItemOptionIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  eventItem?: boolean | Prisma.EventItemDefaultArgs<ExtArgs>
  option?: boolean | Prisma.ProductOptionDefaultArgs<ExtArgs>
}

export type $EventItemOptionPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "EventItemOption"
  objects: {
    eventItem: Prisma.$EventItemPayload<ExtArgs>
    option: Prisma.$ProductOptionPayload<ExtArgs>
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    eventItemId: string
    optionId: string
    optionName: string
    value: string
    label: string | null
    priceAdjustment: number
    createdAt: Date
  }, ExtArgs["result"]["eventItemOption"]>
  composites: {}
}

export type EventItemOptionGetPayload<S extends boolean | null | undefined | EventItemOptionDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$EventItemOptionPayload, S>

export type EventItemOptionCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<EventItemOptionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: EventItemOptionCountAggregateInputType | true
  }

export interface EventItemOptionDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EventItemOption'], meta: { name: 'EventItemOption' } }
  /**
   * Find zero or one EventItemOption that matches the filter.
   * @param {EventItemOptionFindUniqueArgs} args - Arguments to find a EventItemOption
   * @example
   * // Get one EventItemOption
   * const eventItemOption = await prisma.eventItemOption.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends EventItemOptionFindUniqueArgs>(args: Prisma.SelectSubset<T, EventItemOptionFindUniqueArgs<ExtArgs>>): Prisma.Prisma__EventItemOptionClient<runtime.Types.Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one EventItemOption that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {EventItemOptionFindUniqueOrThrowArgs} args - Arguments to find a EventItemOption
   * @example
   * // Get one EventItemOption
   * const eventItemOption = await prisma.eventItemOption.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends EventItemOptionFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, EventItemOptionFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__EventItemOptionClient<runtime.Types.Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first EventItemOption that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventItemOptionFindFirstArgs} args - Arguments to find a EventItemOption
   * @example
   * // Get one EventItemOption
   * const eventItemOption = await prisma.eventItemOption.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends EventItemOptionFindFirstArgs>(args?: Prisma.SelectSubset<T, EventItemOptionFindFirstArgs<ExtArgs>>): Prisma.Prisma__EventItemOptionClient<runtime.Types.Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first EventItemOption that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventItemOptionFindFirstOrThrowArgs} args - Arguments to find a EventItemOption
   * @example
   * // Get one EventItemOption
   * const eventItemOption = await prisma.eventItemOption.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends EventItemOptionFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, EventItemOptionFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__EventItemOptionClient<runtime.Types.Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more EventItemOptions that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventItemOptionFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all EventItemOptions
   * const eventItemOptions = await prisma.eventItemOption.findMany()
   * 
   * // Get first 10 EventItemOptions
   * const eventItemOptions = await prisma.eventItemOption.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const eventItemOptionWithIdOnly = await prisma.eventItemOption.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends EventItemOptionFindManyArgs>(args?: Prisma.SelectSubset<T, EventItemOptionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a EventItemOption.
   * @param {EventItemOptionCreateArgs} args - Arguments to create a EventItemOption.
   * @example
   * // Create one EventItemOption
   * const EventItemOption = await prisma.eventItemOption.create({
   *   data: {
   *     // ... data to create a EventItemOption
   *   }
   * })
   * 
   */
  create<T extends EventItemOptionCreateArgs>(args: Prisma.SelectSubset<T, EventItemOptionCreateArgs<ExtArgs>>): Prisma.Prisma__EventItemOptionClient<runtime.Types.Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many EventItemOptions.
   * @param {EventItemOptionCreateManyArgs} args - Arguments to create many EventItemOptions.
   * @example
   * // Create many EventItemOptions
   * const eventItemOption = await prisma.eventItemOption.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends EventItemOptionCreateManyArgs>(args?: Prisma.SelectSubset<T, EventItemOptionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many EventItemOptions and returns the data saved in the database.
   * @param {EventItemOptionCreateManyAndReturnArgs} args - Arguments to create many EventItemOptions.
   * @example
   * // Create many EventItemOptions
   * const eventItemOption = await prisma.eventItemOption.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many EventItemOptions and only return the `id`
   * const eventItemOptionWithIdOnly = await prisma.eventItemOption.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends EventItemOptionCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, EventItemOptionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a EventItemOption.
   * @param {EventItemOptionDeleteArgs} args - Arguments to delete one EventItemOption.
   * @example
   * // Delete one EventItemOption
   * const EventItemOption = await prisma.eventItemOption.delete({
   *   where: {
   *     // ... filter to delete one EventItemOption
   *   }
   * })
   * 
   */
  delete<T extends EventItemOptionDeleteArgs>(args: Prisma.SelectSubset<T, EventItemOptionDeleteArgs<ExtArgs>>): Prisma.Prisma__EventItemOptionClient<runtime.Types.Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one EventItemOption.
   * @param {EventItemOptionUpdateArgs} args - Arguments to update one EventItemOption.
   * @example
   * // Update one EventItemOption
   * const eventItemOption = await prisma.eventItemOption.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends EventItemOptionUpdateArgs>(args: Prisma.SelectSubset<T, EventItemOptionUpdateArgs<ExtArgs>>): Prisma.Prisma__EventItemOptionClient<runtime.Types.Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more EventItemOptions.
   * @param {EventItemOptionDeleteManyArgs} args - Arguments to filter EventItemOptions to delete.
   * @example
   * // Delete a few EventItemOptions
   * const { count } = await prisma.eventItemOption.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends EventItemOptionDeleteManyArgs>(args?: Prisma.SelectSubset<T, EventItemOptionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more EventItemOptions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventItemOptionUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many EventItemOptions
   * const eventItemOption = await prisma.eventItemOption.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends EventItemOptionUpdateManyArgs>(args: Prisma.SelectSubset<T, EventItemOptionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more EventItemOptions and returns the data updated in the database.
   * @param {EventItemOptionUpdateManyAndReturnArgs} args - Arguments to update many EventItemOptions.
   * @example
   * // Update many EventItemOptions
   * const eventItemOption = await prisma.eventItemOption.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more EventItemOptions and only return the `id`
   * const eventItemOptionWithIdOnly = await prisma.eventItemOption.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends EventItemOptionUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, EventItemOptionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one EventItemOption.
   * @param {EventItemOptionUpsertArgs} args - Arguments to update or create a EventItemOption.
   * @example
   * // Update or create a EventItemOption
   * const eventItemOption = await prisma.eventItemOption.upsert({
   *   create: {
   *     // ... data to create a EventItemOption
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the EventItemOption we want to update
   *   }
   * })
   */
  upsert<T extends EventItemOptionUpsertArgs>(args: Prisma.SelectSubset<T, EventItemOptionUpsertArgs<ExtArgs>>): Prisma.Prisma__EventItemOptionClient<runtime.Types.Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of EventItemOptions.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventItemOptionCountArgs} args - Arguments to filter EventItemOptions to count.
   * @example
   * // Count the number of EventItemOptions
   * const count = await prisma.eventItemOption.count({
   *   where: {
   *     // ... the filter for the EventItemOptions we want to count
   *   }
   * })
  **/
  count<T extends EventItemOptionCountArgs>(
    args?: Prisma.Subset<T, EventItemOptionCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], EventItemOptionCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a EventItemOption.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventItemOptionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends EventItemOptionAggregateArgs>(args: Prisma.Subset<T, EventItemOptionAggregateArgs>): Prisma.PrismaPromise<GetEventItemOptionAggregateType<T>>

  /**
   * Group by EventItemOption.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {EventItemOptionGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends EventItemOptionGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: EventItemOptionGroupByArgs['orderBy'] }
      : { orderBy?: EventItemOptionGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, EventItemOptionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEventItemOptionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the EventItemOption model
 */
readonly fields: EventItemOptionFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for EventItemOption.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__EventItemOptionClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  eventItem<T extends Prisma.EventItemDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.EventItemDefaultArgs<ExtArgs>>): Prisma.Prisma__EventItemClient<runtime.Types.Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  option<T extends Prisma.ProductOptionDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProductOptionDefaultArgs<ExtArgs>>): Prisma.Prisma__ProductOptionClient<runtime.Types.Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the EventItemOption model
 */
export interface EventItemOptionFieldRefs {
  readonly id: Prisma.FieldRef<"EventItemOption", 'String'>
  readonly eventItemId: Prisma.FieldRef<"EventItemOption", 'String'>
  readonly optionId: Prisma.FieldRef<"EventItemOption", 'String'>
  readonly optionName: Prisma.FieldRef<"EventItemOption", 'String'>
  readonly value: Prisma.FieldRef<"EventItemOption", 'String'>
  readonly label: Prisma.FieldRef<"EventItemOption", 'String'>
  readonly priceAdjustment: Prisma.FieldRef<"EventItemOption", 'Float'>
  readonly createdAt: Prisma.FieldRef<"EventItemOption", 'DateTime'>
}
    

// Custom InputTypes
/**
 * EventItemOption findUnique
 */
export type EventItemOptionFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItemOption
   */
  select?: Prisma.EventItemOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EventItemOption
   */
  omit?: Prisma.EventItemOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemOptionInclude<ExtArgs> | null
  /**
   * Filter, which EventItemOption to fetch.
   */
  where: Prisma.EventItemOptionWhereUniqueInput
}

/**
 * EventItemOption findUniqueOrThrow
 */
export type EventItemOptionFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItemOption
   */
  select?: Prisma.EventItemOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EventItemOption
   */
  omit?: Prisma.EventItemOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemOptionInclude<ExtArgs> | null
  /**
   * Filter, which EventItemOption to fetch.
   */
  where: Prisma.EventItemOptionWhereUniqueInput
}

/**
 * EventItemOption findFirst
 */
export type EventItemOptionFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItemOption
   */
  select?: Prisma.EventItemOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EventItemOption
   */
  omit?: Prisma.EventItemOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemOptionInclude<ExtArgs> | null
  /**
   * Filter, which EventItemOption to fetch.
   */
  where?: Prisma.EventItemOptionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of EventItemOptions to fetch.
   */
  orderBy?: Prisma.EventItemOptionOrderByWithRelationInput | Prisma.EventItemOptionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for EventItemOptions.
   */
  cursor?: Prisma.EventItemOptionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` EventItemOptions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` EventItemOptions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of EventItemOptions.
   */
  distinct?: Prisma.EventItemOptionScalarFieldEnum | Prisma.EventItemOptionScalarFieldEnum[]
}

/**
 * EventItemOption findFirstOrThrow
 */
export type EventItemOptionFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItemOption
   */
  select?: Prisma.EventItemOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EventItemOption
   */
  omit?: Prisma.EventItemOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemOptionInclude<ExtArgs> | null
  /**
   * Filter, which EventItemOption to fetch.
   */
  where?: Prisma.EventItemOptionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of EventItemOptions to fetch.
   */
  orderBy?: Prisma.EventItemOptionOrderByWithRelationInput | Prisma.EventItemOptionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for EventItemOptions.
   */
  cursor?: Prisma.EventItemOptionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` EventItemOptions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` EventItemOptions.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of EventItemOptions.
   */
  distinct?: Prisma.EventItemOptionScalarFieldEnum | Prisma.EventItemOptionScalarFieldEnum[]
}

/**
 * EventItemOption findMany
 */
export type EventItemOptionFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItemOption
   */
  select?: Prisma.EventItemOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EventItemOption
   */
  omit?: Prisma.EventItemOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemOptionInclude<ExtArgs> | null
  /**
   * Filter, which EventItemOptions to fetch.
   */
  where?: Prisma.EventItemOptionWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of EventItemOptions to fetch.
   */
  orderBy?: Prisma.EventItemOptionOrderByWithRelationInput | Prisma.EventItemOptionOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing EventItemOptions.
   */
  cursor?: Prisma.EventItemOptionWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` EventItemOptions from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` EventItemOptions.
   */
  skip?: number
  distinct?: Prisma.EventItemOptionScalarFieldEnum | Prisma.EventItemOptionScalarFieldEnum[]
}

/**
 * EventItemOption create
 */
export type EventItemOptionCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItemOption
   */
  select?: Prisma.EventItemOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EventItemOption
   */
  omit?: Prisma.EventItemOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemOptionInclude<ExtArgs> | null
  /**
   * The data needed to create a EventItemOption.
   */
  data: Prisma.XOR<Prisma.EventItemOptionCreateInput, Prisma.EventItemOptionUncheckedCreateInput>
}

/**
 * EventItemOption createMany
 */
export type EventItemOptionCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many EventItemOptions.
   */
  data: Prisma.EventItemOptionCreateManyInput | Prisma.EventItemOptionCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * EventItemOption createManyAndReturn
 */
export type EventItemOptionCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItemOption
   */
  select?: Prisma.EventItemOptionSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the EventItemOption
   */
  omit?: Prisma.EventItemOptionOmit<ExtArgs> | null
  /**
   * The data used to create many EventItemOptions.
   */
  data: Prisma.EventItemOptionCreateManyInput | Prisma.EventItemOptionCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemOptionIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * EventItemOption update
 */
export type EventItemOptionUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItemOption
   */
  select?: Prisma.EventItemOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EventItemOption
   */
  omit?: Prisma.EventItemOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemOptionInclude<ExtArgs> | null
  /**
   * The data needed to update a EventItemOption.
   */
  data: Prisma.XOR<Prisma.EventItemOptionUpdateInput, Prisma.EventItemOptionUncheckedUpdateInput>
  /**
   * Choose, which EventItemOption to update.
   */
  where: Prisma.EventItemOptionWhereUniqueInput
}

/**
 * EventItemOption updateMany
 */
export type EventItemOptionUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update EventItemOptions.
   */
  data: Prisma.XOR<Prisma.EventItemOptionUpdateManyMutationInput, Prisma.EventItemOptionUncheckedUpdateManyInput>
  /**
   * Filter which EventItemOptions to update
   */
  where?: Prisma.EventItemOptionWhereInput
  /**
   * Limit how many EventItemOptions to update.
   */
  limit?: number
}

/**
 * EventItemOption updateManyAndReturn
 */
export type EventItemOptionUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItemOption
   */
  select?: Prisma.EventItemOptionSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the EventItemOption
   */
  omit?: Prisma.EventItemOptionOmit<ExtArgs> | null
  /**
   * The data used to update EventItemOptions.
   */
  data: Prisma.XOR<Prisma.EventItemOptionUpdateManyMutationInput, Prisma.EventItemOptionUncheckedUpdateManyInput>
  /**
   * Filter which EventItemOptions to update
   */
  where?: Prisma.EventItemOptionWhereInput
  /**
   * Limit how many EventItemOptions to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemOptionIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * EventItemOption upsert
 */
export type EventItemOptionUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItemOption
   */
  select?: Prisma.EventItemOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EventItemOption
   */
  omit?: Prisma.EventItemOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemOptionInclude<ExtArgs> | null
  /**
   * The filter to search for the EventItemOption to update in case it exists.
   */
  where: Prisma.EventItemOptionWhereUniqueInput
  /**
   * In case the EventItemOption found by the `where` argument doesn't exist, create a new EventItemOption with this data.
   */
  create: Prisma.XOR<Prisma.EventItemOptionCreateInput, Prisma.EventItemOptionUncheckedCreateInput>
  /**
   * In case the EventItemOption was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.EventItemOptionUpdateInput, Prisma.EventItemOptionUncheckedUpdateInput>
}

/**
 * EventItemOption delete
 */
export type EventItemOptionDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItemOption
   */
  select?: Prisma.EventItemOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EventItemOption
   */
  omit?: Prisma.EventItemOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemOptionInclude<ExtArgs> | null
  /**
   * Filter which EventItemOption to delete.
   */
  where: Prisma.EventItemOptionWhereUniqueInput
}

/**
 * EventItemOption deleteMany
 */
export type EventItemOptionDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which EventItemOptions to delete
   */
  where?: Prisma.EventItemOptionWhereInput
  /**
   * Limit how many EventItemOptions to delete.
   */
  limit?: number
}

/**
 * EventItemOption without action
 */
export type EventItemOptionDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the EventItemOption
   */
  select?: Prisma.EventItemOptionSelect<ExtArgs> | null
  /**
   * Omit specific fields from the EventItemOption
   */
  omit?: Prisma.EventItemOptionOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.EventItemOptionInclude<ExtArgs> | null
}
