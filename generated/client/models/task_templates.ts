
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `task_templates` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model task_templates
 * 
 */
export type task_templatesModel = runtime.Types.Result.DefaultSelection<Prisma.$task_templatesPayload>

export type AggregateTask_templates = {
  _count: Task_templatesCountAggregateOutputType | null
  _avg: Task_templatesAvgAggregateOutputType | null
  _sum: Task_templatesSumAggregateOutputType | null
  _min: Task_templatesMinAggregateOutputType | null
  _max: Task_templatesMaxAggregateOutputType | null
}

export type Task_templatesAvgAggregateOutputType = {
  estimatedDuration: number | null
  leadTimeHours: number | null
  sequenceOrder: number | null
}

export type Task_templatesSumAggregateOutputType = {
  estimatedDuration: number | null
  leadTimeHours: number | null
  sequenceOrder: number | null
}

export type Task_templatesMinAggregateOutputType = {
  id: string | null
  productId: string | null
  name: string | null
  description: string | null
  estimatedDuration: number | null
  leadTimeHours: number | null
  sequenceOrder: number | null
  requiredRole: string | null
  triggerCondition: $Enums.TaskTriggerCondition | null
  isMandatory: boolean | null
  requiresCompletionBeforeNext: boolean | null
  autoAssignToRole: string | null
  notes: string | null
  isActive: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
  category: string | null
}

export type Task_templatesMaxAggregateOutputType = {
  id: string | null
  productId: string | null
  name: string | null
  description: string | null
  estimatedDuration: number | null
  leadTimeHours: number | null
  sequenceOrder: number | null
  requiredRole: string | null
  triggerCondition: $Enums.TaskTriggerCondition | null
  isMandatory: boolean | null
  requiresCompletionBeforeNext: boolean | null
  autoAssignToRole: string | null
  notes: string | null
  isActive: boolean | null
  createdAt: Date | null
  updatedAt: Date | null
  category: string | null
}

export type Task_templatesCountAggregateOutputType = {
  id: number
  productId: number
  name: number
  description: number
  estimatedDuration: number
  leadTimeHours: number
  sequenceOrder: number
  requiredRole: number
  triggerCondition: number
  isMandatory: number
  requiresCompletionBeforeNext: number
  autoAssignToRole: number
  notes: number
  isActive: number
  createdAt: number
  updatedAt: number
  category: number
  _all: number
}


export type Task_templatesAvgAggregateInputType = {
  estimatedDuration?: true
  leadTimeHours?: true
  sequenceOrder?: true
}

export type Task_templatesSumAggregateInputType = {
  estimatedDuration?: true
  leadTimeHours?: true
  sequenceOrder?: true
}

export type Task_templatesMinAggregateInputType = {
  id?: true
  productId?: true
  name?: true
  description?: true
  estimatedDuration?: true
  leadTimeHours?: true
  sequenceOrder?: true
  requiredRole?: true
  triggerCondition?: true
  isMandatory?: true
  requiresCompletionBeforeNext?: true
  autoAssignToRole?: true
  notes?: true
  isActive?: true
  createdAt?: true
  updatedAt?: true
  category?: true
}

export type Task_templatesMaxAggregateInputType = {
  id?: true
  productId?: true
  name?: true
  description?: true
  estimatedDuration?: true
  leadTimeHours?: true
  sequenceOrder?: true
  requiredRole?: true
  triggerCondition?: true
  isMandatory?: true
  requiresCompletionBeforeNext?: true
  autoAssignToRole?: true
  notes?: true
  isActive?: true
  createdAt?: true
  updatedAt?: true
  category?: true
}

export type Task_templatesCountAggregateInputType = {
  id?: true
  productId?: true
  name?: true
  description?: true
  estimatedDuration?: true
  leadTimeHours?: true
  sequenceOrder?: true
  requiredRole?: true
  triggerCondition?: true
  isMandatory?: true
  requiresCompletionBeforeNext?: true
  autoAssignToRole?: true
  notes?: true
  isActive?: true
  createdAt?: true
  updatedAt?: true
  category?: true
  _all?: true
}

export type Task_templatesAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which task_templates to aggregate.
   */
  where?: Prisma.task_templatesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of task_templates to fetch.
   */
  orderBy?: Prisma.task_templatesOrderByWithRelationInput | Prisma.task_templatesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.task_templatesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` task_templates from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` task_templates.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned task_templates
  **/
  _count?: true | Task_templatesCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: Task_templatesAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: Task_templatesSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: Task_templatesMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: Task_templatesMaxAggregateInputType
}

export type GetTask_templatesAggregateType<T extends Task_templatesAggregateArgs> = {
      [P in keyof T & keyof AggregateTask_templates]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateTask_templates[P]>
    : Prisma.GetScalarType<T[P], AggregateTask_templates[P]>
}




export type task_templatesGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.task_templatesWhereInput
  orderBy?: Prisma.task_templatesOrderByWithAggregationInput | Prisma.task_templatesOrderByWithAggregationInput[]
  by: Prisma.Task_templatesScalarFieldEnum[] | Prisma.Task_templatesScalarFieldEnum
  having?: Prisma.task_templatesScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: Task_templatesCountAggregateInputType | true
  _avg?: Task_templatesAvgAggregateInputType
  _sum?: Task_templatesSumAggregateInputType
  _min?: Task_templatesMinAggregateInputType
  _max?: Task_templatesMaxAggregateInputType
}

export type Task_templatesGroupByOutputType = {
  id: string
  productId: string
  name: string
  description: string | null
  estimatedDuration: number
  leadTimeHours: number
  sequenceOrder: number
  requiredRole: string | null
  triggerCondition: $Enums.TaskTriggerCondition
  isMandatory: boolean
  requiresCompletionBeforeNext: boolean
  autoAssignToRole: string | null
  notes: string | null
  isActive: boolean
  createdAt: Date
  updatedAt: Date
  category: string | null
  _count: Task_templatesCountAggregateOutputType | null
  _avg: Task_templatesAvgAggregateOutputType | null
  _sum: Task_templatesSumAggregateOutputType | null
  _min: Task_templatesMinAggregateOutputType | null
  _max: Task_templatesMaxAggregateOutputType | null
}

type GetTask_templatesGroupByPayload<T extends task_templatesGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<Task_templatesGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof Task_templatesGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], Task_templatesGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], Task_templatesGroupByOutputType[P]>
      }
    >
  > 



export type task_templatesWhereInput = {
  AND?: Prisma.task_templatesWhereInput | Prisma.task_templatesWhereInput[]
  OR?: Prisma.task_templatesWhereInput[]
  NOT?: Prisma.task_templatesWhereInput | Prisma.task_templatesWhereInput[]
  id?: Prisma.StringFilter<"task_templates"> | string
  productId?: Prisma.StringFilter<"task_templates"> | string
  name?: Prisma.StringFilter<"task_templates"> | string
  description?: Prisma.StringNullableFilter<"task_templates"> | string | null
  estimatedDuration?: Prisma.IntFilter<"task_templates"> | number
  leadTimeHours?: Prisma.IntFilter<"task_templates"> | number
  sequenceOrder?: Prisma.IntFilter<"task_templates"> | number
  requiredRole?: Prisma.StringNullableFilter<"task_templates"> | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFilter<"task_templates"> | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFilter<"task_templates"> | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFilter<"task_templates"> | boolean
  autoAssignToRole?: Prisma.StringNullableFilter<"task_templates"> | string | null
  notes?: Prisma.StringNullableFilter<"task_templates"> | string | null
  isActive?: Prisma.BoolFilter<"task_templates"> | boolean
  createdAt?: Prisma.DateTimeFilter<"task_templates"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"task_templates"> | Date | string
  category?: Prisma.StringNullableFilter<"task_templates"> | string | null
  Product?: Prisma.XOR<Prisma.ProductScalarRelationFilter, Prisma.ProductWhereInput>
  tasks?: Prisma.TasksListRelationFilter
}

export type task_templatesOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  estimatedDuration?: Prisma.SortOrder
  leadTimeHours?: Prisma.SortOrder
  sequenceOrder?: Prisma.SortOrder
  requiredRole?: Prisma.SortOrderInput | Prisma.SortOrder
  triggerCondition?: Prisma.SortOrder
  isMandatory?: Prisma.SortOrder
  requiresCompletionBeforeNext?: Prisma.SortOrder
  autoAssignToRole?: Prisma.SortOrderInput | Prisma.SortOrder
  notes?: Prisma.SortOrderInput | Prisma.SortOrder
  isActive?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  category?: Prisma.SortOrderInput | Prisma.SortOrder
  Product?: Prisma.ProductOrderByWithRelationInput
  tasks?: Prisma.tasksOrderByRelationAggregateInput
}

export type task_templatesWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.task_templatesWhereInput | Prisma.task_templatesWhereInput[]
  OR?: Prisma.task_templatesWhereInput[]
  NOT?: Prisma.task_templatesWhereInput | Prisma.task_templatesWhereInput[]
  productId?: Prisma.StringFilter<"task_templates"> | string
  name?: Prisma.StringFilter<"task_templates"> | string
  description?: Prisma.StringNullableFilter<"task_templates"> | string | null
  estimatedDuration?: Prisma.IntFilter<"task_templates"> | number
  leadTimeHours?: Prisma.IntFilter<"task_templates"> | number
  sequenceOrder?: Prisma.IntFilter<"task_templates"> | number
  requiredRole?: Prisma.StringNullableFilter<"task_templates"> | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFilter<"task_templates"> | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFilter<"task_templates"> | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFilter<"task_templates"> | boolean
  autoAssignToRole?: Prisma.StringNullableFilter<"task_templates"> | string | null
  notes?: Prisma.StringNullableFilter<"task_templates"> | string | null
  isActive?: Prisma.BoolFilter<"task_templates"> | boolean
  createdAt?: Prisma.DateTimeFilter<"task_templates"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"task_templates"> | Date | string
  category?: Prisma.StringNullableFilter<"task_templates"> | string | null
  Product?: Prisma.XOR<Prisma.ProductScalarRelationFilter, Prisma.ProductWhereInput>
  tasks?: Prisma.TasksListRelationFilter
}, "id">

export type task_templatesOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  estimatedDuration?: Prisma.SortOrder
  leadTimeHours?: Prisma.SortOrder
  sequenceOrder?: Prisma.SortOrder
  requiredRole?: Prisma.SortOrderInput | Prisma.SortOrder
  triggerCondition?: Prisma.SortOrder
  isMandatory?: Prisma.SortOrder
  requiresCompletionBeforeNext?: Prisma.SortOrder
  autoAssignToRole?: Prisma.SortOrderInput | Prisma.SortOrder
  notes?: Prisma.SortOrderInput | Prisma.SortOrder
  isActive?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  category?: Prisma.SortOrderInput | Prisma.SortOrder
  _count?: Prisma.task_templatesCountOrderByAggregateInput
  _avg?: Prisma.task_templatesAvgOrderByAggregateInput
  _max?: Prisma.task_templatesMaxOrderByAggregateInput
  _min?: Prisma.task_templatesMinOrderByAggregateInput
  _sum?: Prisma.task_templatesSumOrderByAggregateInput
}

export type task_templatesScalarWhereWithAggregatesInput = {
  AND?: Prisma.task_templatesScalarWhereWithAggregatesInput | Prisma.task_templatesScalarWhereWithAggregatesInput[]
  OR?: Prisma.task_templatesScalarWhereWithAggregatesInput[]
  NOT?: Prisma.task_templatesScalarWhereWithAggregatesInput | Prisma.task_templatesScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"task_templates"> | string
  productId?: Prisma.StringWithAggregatesFilter<"task_templates"> | string
  name?: Prisma.StringWithAggregatesFilter<"task_templates"> | string
  description?: Prisma.StringNullableWithAggregatesFilter<"task_templates"> | string | null
  estimatedDuration?: Prisma.IntWithAggregatesFilter<"task_templates"> | number
  leadTimeHours?: Prisma.IntWithAggregatesFilter<"task_templates"> | number
  sequenceOrder?: Prisma.IntWithAggregatesFilter<"task_templates"> | number
  requiredRole?: Prisma.StringNullableWithAggregatesFilter<"task_templates"> | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionWithAggregatesFilter<"task_templates"> | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolWithAggregatesFilter<"task_templates"> | boolean
  requiresCompletionBeforeNext?: Prisma.BoolWithAggregatesFilter<"task_templates"> | boolean
  autoAssignToRole?: Prisma.StringNullableWithAggregatesFilter<"task_templates"> | string | null
  notes?: Prisma.StringNullableWithAggregatesFilter<"task_templates"> | string | null
  isActive?: Prisma.BoolWithAggregatesFilter<"task_templates"> | boolean
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"task_templates"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"task_templates"> | Date | string
  category?: Prisma.StringNullableWithAggregatesFilter<"task_templates"> | string | null
}

export type task_templatesCreateInput = {
  id: string
  name: string
  description?: string | null
  estimatedDuration: number
  leadTimeHours?: number
  sequenceOrder?: number
  requiredRole?: string | null
  triggerCondition: $Enums.TaskTriggerCondition
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: string | null
  notes?: string | null
  isActive?: boolean
  createdAt?: Date | string
  updatedAt: Date | string
  category?: string | null
  Product: Prisma.ProductCreateNestedOneWithoutTask_templatesInput
  tasks?: Prisma.tasksCreateNestedManyWithoutTask_templatesInput
}

export type task_templatesUncheckedCreateInput = {
  id: string
  productId: string
  name: string
  description?: string | null
  estimatedDuration: number
  leadTimeHours?: number
  sequenceOrder?: number
  requiredRole?: string | null
  triggerCondition: $Enums.TaskTriggerCondition
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: string | null
  notes?: string | null
  isActive?: boolean
  createdAt?: Date | string
  updatedAt: Date | string
  category?: string | null
  tasks?: Prisma.tasksUncheckedCreateNestedManyWithoutTask_templatesInput
}

export type task_templatesUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  estimatedDuration?: Prisma.IntFieldUpdateOperationsInput | number
  leadTimeHours?: Prisma.IntFieldUpdateOperationsInput | number
  sequenceOrder?: Prisma.IntFieldUpdateOperationsInput | number
  requiredRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFieldUpdateOperationsInput | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoAssignToRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  Product?: Prisma.ProductUpdateOneRequiredWithoutTask_templatesNestedInput
  tasks?: Prisma.tasksUpdateManyWithoutTask_templatesNestedInput
}

export type task_templatesUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  estimatedDuration?: Prisma.IntFieldUpdateOperationsInput | number
  leadTimeHours?: Prisma.IntFieldUpdateOperationsInput | number
  sequenceOrder?: Prisma.IntFieldUpdateOperationsInput | number
  requiredRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFieldUpdateOperationsInput | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoAssignToRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tasks?: Prisma.tasksUncheckedUpdateManyWithoutTask_templatesNestedInput
}

export type task_templatesCreateManyInput = {
  id: string
  productId: string
  name: string
  description?: string | null
  estimatedDuration: number
  leadTimeHours?: number
  sequenceOrder?: number
  requiredRole?: string | null
  triggerCondition: $Enums.TaskTriggerCondition
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: string | null
  notes?: string | null
  isActive?: boolean
  createdAt?: Date | string
  updatedAt: Date | string
  category?: string | null
}

export type task_templatesUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  estimatedDuration?: Prisma.IntFieldUpdateOperationsInput | number
  leadTimeHours?: Prisma.IntFieldUpdateOperationsInput | number
  sequenceOrder?: Prisma.IntFieldUpdateOperationsInput | number
  requiredRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFieldUpdateOperationsInput | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoAssignToRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type task_templatesUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  estimatedDuration?: Prisma.IntFieldUpdateOperationsInput | number
  leadTimeHours?: Prisma.IntFieldUpdateOperationsInput | number
  sequenceOrder?: Prisma.IntFieldUpdateOperationsInput | number
  requiredRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFieldUpdateOperationsInput | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoAssignToRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type Task_templatesListRelationFilter = {
  every?: Prisma.task_templatesWhereInput
  some?: Prisma.task_templatesWhereInput
  none?: Prisma.task_templatesWhereInput
}

export type task_templatesOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type task_templatesCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  estimatedDuration?: Prisma.SortOrder
  leadTimeHours?: Prisma.SortOrder
  sequenceOrder?: Prisma.SortOrder
  requiredRole?: Prisma.SortOrder
  triggerCondition?: Prisma.SortOrder
  isMandatory?: Prisma.SortOrder
  requiresCompletionBeforeNext?: Prisma.SortOrder
  autoAssignToRole?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  category?: Prisma.SortOrder
}

export type task_templatesAvgOrderByAggregateInput = {
  estimatedDuration?: Prisma.SortOrder
  leadTimeHours?: Prisma.SortOrder
  sequenceOrder?: Prisma.SortOrder
}

export type task_templatesMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  estimatedDuration?: Prisma.SortOrder
  leadTimeHours?: Prisma.SortOrder
  sequenceOrder?: Prisma.SortOrder
  requiredRole?: Prisma.SortOrder
  triggerCondition?: Prisma.SortOrder
  isMandatory?: Prisma.SortOrder
  requiresCompletionBeforeNext?: Prisma.SortOrder
  autoAssignToRole?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  category?: Prisma.SortOrder
}

export type task_templatesMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  productId?: Prisma.SortOrder
  name?: Prisma.SortOrder
  description?: Prisma.SortOrder
  estimatedDuration?: Prisma.SortOrder
  leadTimeHours?: Prisma.SortOrder
  sequenceOrder?: Prisma.SortOrder
  requiredRole?: Prisma.SortOrder
  triggerCondition?: Prisma.SortOrder
  isMandatory?: Prisma.SortOrder
  requiresCompletionBeforeNext?: Prisma.SortOrder
  autoAssignToRole?: Prisma.SortOrder
  notes?: Prisma.SortOrder
  isActive?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  category?: Prisma.SortOrder
}

export type task_templatesSumOrderByAggregateInput = {
  estimatedDuration?: Prisma.SortOrder
  leadTimeHours?: Prisma.SortOrder
  sequenceOrder?: Prisma.SortOrder
}

export type Task_templatesNullableScalarRelationFilter = {
  is?: Prisma.task_templatesWhereInput | null
  isNot?: Prisma.task_templatesWhereInput | null
}

export type task_templatesCreateNestedManyWithoutProductInput = {
  create?: Prisma.XOR<Prisma.task_templatesCreateWithoutProductInput, Prisma.task_templatesUncheckedCreateWithoutProductInput> | Prisma.task_templatesCreateWithoutProductInput[] | Prisma.task_templatesUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.task_templatesCreateOrConnectWithoutProductInput | Prisma.task_templatesCreateOrConnectWithoutProductInput[]
  createMany?: Prisma.task_templatesCreateManyProductInputEnvelope
  connect?: Prisma.task_templatesWhereUniqueInput | Prisma.task_templatesWhereUniqueInput[]
}

export type task_templatesUncheckedCreateNestedManyWithoutProductInput = {
  create?: Prisma.XOR<Prisma.task_templatesCreateWithoutProductInput, Prisma.task_templatesUncheckedCreateWithoutProductInput> | Prisma.task_templatesCreateWithoutProductInput[] | Prisma.task_templatesUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.task_templatesCreateOrConnectWithoutProductInput | Prisma.task_templatesCreateOrConnectWithoutProductInput[]
  createMany?: Prisma.task_templatesCreateManyProductInputEnvelope
  connect?: Prisma.task_templatesWhereUniqueInput | Prisma.task_templatesWhereUniqueInput[]
}

export type task_templatesUpdateManyWithoutProductNestedInput = {
  create?: Prisma.XOR<Prisma.task_templatesCreateWithoutProductInput, Prisma.task_templatesUncheckedCreateWithoutProductInput> | Prisma.task_templatesCreateWithoutProductInput[] | Prisma.task_templatesUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.task_templatesCreateOrConnectWithoutProductInput | Prisma.task_templatesCreateOrConnectWithoutProductInput[]
  upsert?: Prisma.task_templatesUpsertWithWhereUniqueWithoutProductInput | Prisma.task_templatesUpsertWithWhereUniqueWithoutProductInput[]
  createMany?: Prisma.task_templatesCreateManyProductInputEnvelope
  set?: Prisma.task_templatesWhereUniqueInput | Prisma.task_templatesWhereUniqueInput[]
  disconnect?: Prisma.task_templatesWhereUniqueInput | Prisma.task_templatesWhereUniqueInput[]
  delete?: Prisma.task_templatesWhereUniqueInput | Prisma.task_templatesWhereUniqueInput[]
  connect?: Prisma.task_templatesWhereUniqueInput | Prisma.task_templatesWhereUniqueInput[]
  update?: Prisma.task_templatesUpdateWithWhereUniqueWithoutProductInput | Prisma.task_templatesUpdateWithWhereUniqueWithoutProductInput[]
  updateMany?: Prisma.task_templatesUpdateManyWithWhereWithoutProductInput | Prisma.task_templatesUpdateManyWithWhereWithoutProductInput[]
  deleteMany?: Prisma.task_templatesScalarWhereInput | Prisma.task_templatesScalarWhereInput[]
}

export type task_templatesUncheckedUpdateManyWithoutProductNestedInput = {
  create?: Prisma.XOR<Prisma.task_templatesCreateWithoutProductInput, Prisma.task_templatesUncheckedCreateWithoutProductInput> | Prisma.task_templatesCreateWithoutProductInput[] | Prisma.task_templatesUncheckedCreateWithoutProductInput[]
  connectOrCreate?: Prisma.task_templatesCreateOrConnectWithoutProductInput | Prisma.task_templatesCreateOrConnectWithoutProductInput[]
  upsert?: Prisma.task_templatesUpsertWithWhereUniqueWithoutProductInput | Prisma.task_templatesUpsertWithWhereUniqueWithoutProductInput[]
  createMany?: Prisma.task_templatesCreateManyProductInputEnvelope
  set?: Prisma.task_templatesWhereUniqueInput | Prisma.task_templatesWhereUniqueInput[]
  disconnect?: Prisma.task_templatesWhereUniqueInput | Prisma.task_templatesWhereUniqueInput[]
  delete?: Prisma.task_templatesWhereUniqueInput | Prisma.task_templatesWhereUniqueInput[]
  connect?: Prisma.task_templatesWhereUniqueInput | Prisma.task_templatesWhereUniqueInput[]
  update?: Prisma.task_templatesUpdateWithWhereUniqueWithoutProductInput | Prisma.task_templatesUpdateWithWhereUniqueWithoutProductInput[]
  updateMany?: Prisma.task_templatesUpdateManyWithWhereWithoutProductInput | Prisma.task_templatesUpdateManyWithWhereWithoutProductInput[]
  deleteMany?: Prisma.task_templatesScalarWhereInput | Prisma.task_templatesScalarWhereInput[]
}

export type EnumTaskTriggerConditionFieldUpdateOperationsInput = {
  set?: $Enums.TaskTriggerCondition
}

export type task_templatesCreateNestedOneWithoutTasksInput = {
  create?: Prisma.XOR<Prisma.task_templatesCreateWithoutTasksInput, Prisma.task_templatesUncheckedCreateWithoutTasksInput>
  connectOrCreate?: Prisma.task_templatesCreateOrConnectWithoutTasksInput
  connect?: Prisma.task_templatesWhereUniqueInput
}

export type task_templatesUpdateOneWithoutTasksNestedInput = {
  create?: Prisma.XOR<Prisma.task_templatesCreateWithoutTasksInput, Prisma.task_templatesUncheckedCreateWithoutTasksInput>
  connectOrCreate?: Prisma.task_templatesCreateOrConnectWithoutTasksInput
  upsert?: Prisma.task_templatesUpsertWithoutTasksInput
  disconnect?: Prisma.task_templatesWhereInput | boolean
  delete?: Prisma.task_templatesWhereInput | boolean
  connect?: Prisma.task_templatesWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.task_templatesUpdateToOneWithWhereWithoutTasksInput, Prisma.task_templatesUpdateWithoutTasksInput>, Prisma.task_templatesUncheckedUpdateWithoutTasksInput>
}

export type task_templatesCreateWithoutProductInput = {
  id: string
  name: string
  description?: string | null
  estimatedDuration: number
  leadTimeHours?: number
  sequenceOrder?: number
  requiredRole?: string | null
  triggerCondition: $Enums.TaskTriggerCondition
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: string | null
  notes?: string | null
  isActive?: boolean
  createdAt?: Date | string
  updatedAt: Date | string
  category?: string | null
  tasks?: Prisma.tasksCreateNestedManyWithoutTask_templatesInput
}

export type task_templatesUncheckedCreateWithoutProductInput = {
  id: string
  name: string
  description?: string | null
  estimatedDuration: number
  leadTimeHours?: number
  sequenceOrder?: number
  requiredRole?: string | null
  triggerCondition: $Enums.TaskTriggerCondition
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: string | null
  notes?: string | null
  isActive?: boolean
  createdAt?: Date | string
  updatedAt: Date | string
  category?: string | null
  tasks?: Prisma.tasksUncheckedCreateNestedManyWithoutTask_templatesInput
}

export type task_templatesCreateOrConnectWithoutProductInput = {
  where: Prisma.task_templatesWhereUniqueInput
  create: Prisma.XOR<Prisma.task_templatesCreateWithoutProductInput, Prisma.task_templatesUncheckedCreateWithoutProductInput>
}

export type task_templatesCreateManyProductInputEnvelope = {
  data: Prisma.task_templatesCreateManyProductInput | Prisma.task_templatesCreateManyProductInput[]
  skipDuplicates?: boolean
}

export type task_templatesUpsertWithWhereUniqueWithoutProductInput = {
  where: Prisma.task_templatesWhereUniqueInput
  update: Prisma.XOR<Prisma.task_templatesUpdateWithoutProductInput, Prisma.task_templatesUncheckedUpdateWithoutProductInput>
  create: Prisma.XOR<Prisma.task_templatesCreateWithoutProductInput, Prisma.task_templatesUncheckedCreateWithoutProductInput>
}

export type task_templatesUpdateWithWhereUniqueWithoutProductInput = {
  where: Prisma.task_templatesWhereUniqueInput
  data: Prisma.XOR<Prisma.task_templatesUpdateWithoutProductInput, Prisma.task_templatesUncheckedUpdateWithoutProductInput>
}

export type task_templatesUpdateManyWithWhereWithoutProductInput = {
  where: Prisma.task_templatesScalarWhereInput
  data: Prisma.XOR<Prisma.task_templatesUpdateManyMutationInput, Prisma.task_templatesUncheckedUpdateManyWithoutProductInput>
}

export type task_templatesScalarWhereInput = {
  AND?: Prisma.task_templatesScalarWhereInput | Prisma.task_templatesScalarWhereInput[]
  OR?: Prisma.task_templatesScalarWhereInput[]
  NOT?: Prisma.task_templatesScalarWhereInput | Prisma.task_templatesScalarWhereInput[]
  id?: Prisma.StringFilter<"task_templates"> | string
  productId?: Prisma.StringFilter<"task_templates"> | string
  name?: Prisma.StringFilter<"task_templates"> | string
  description?: Prisma.StringNullableFilter<"task_templates"> | string | null
  estimatedDuration?: Prisma.IntFilter<"task_templates"> | number
  leadTimeHours?: Prisma.IntFilter<"task_templates"> | number
  sequenceOrder?: Prisma.IntFilter<"task_templates"> | number
  requiredRole?: Prisma.StringNullableFilter<"task_templates"> | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFilter<"task_templates"> | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFilter<"task_templates"> | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFilter<"task_templates"> | boolean
  autoAssignToRole?: Prisma.StringNullableFilter<"task_templates"> | string | null
  notes?: Prisma.StringNullableFilter<"task_templates"> | string | null
  isActive?: Prisma.BoolFilter<"task_templates"> | boolean
  createdAt?: Prisma.DateTimeFilter<"task_templates"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"task_templates"> | Date | string
  category?: Prisma.StringNullableFilter<"task_templates"> | string | null
}

export type task_templatesCreateWithoutTasksInput = {
  id: string
  name: string
  description?: string | null
  estimatedDuration: number
  leadTimeHours?: number
  sequenceOrder?: number
  requiredRole?: string | null
  triggerCondition: $Enums.TaskTriggerCondition
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: string | null
  notes?: string | null
  isActive?: boolean
  createdAt?: Date | string
  updatedAt: Date | string
  category?: string | null
  Product: Prisma.ProductCreateNestedOneWithoutTask_templatesInput
}

export type task_templatesUncheckedCreateWithoutTasksInput = {
  id: string
  productId: string
  name: string
  description?: string | null
  estimatedDuration: number
  leadTimeHours?: number
  sequenceOrder?: number
  requiredRole?: string | null
  triggerCondition: $Enums.TaskTriggerCondition
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: string | null
  notes?: string | null
  isActive?: boolean
  createdAt?: Date | string
  updatedAt: Date | string
  category?: string | null
}

export type task_templatesCreateOrConnectWithoutTasksInput = {
  where: Prisma.task_templatesWhereUniqueInput
  create: Prisma.XOR<Prisma.task_templatesCreateWithoutTasksInput, Prisma.task_templatesUncheckedCreateWithoutTasksInput>
}

export type task_templatesUpsertWithoutTasksInput = {
  update: Prisma.XOR<Prisma.task_templatesUpdateWithoutTasksInput, Prisma.task_templatesUncheckedUpdateWithoutTasksInput>
  create: Prisma.XOR<Prisma.task_templatesCreateWithoutTasksInput, Prisma.task_templatesUncheckedCreateWithoutTasksInput>
  where?: Prisma.task_templatesWhereInput
}

export type task_templatesUpdateToOneWithWhereWithoutTasksInput = {
  where?: Prisma.task_templatesWhereInput
  data: Prisma.XOR<Prisma.task_templatesUpdateWithoutTasksInput, Prisma.task_templatesUncheckedUpdateWithoutTasksInput>
}

export type task_templatesUpdateWithoutTasksInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  estimatedDuration?: Prisma.IntFieldUpdateOperationsInput | number
  leadTimeHours?: Prisma.IntFieldUpdateOperationsInput | number
  sequenceOrder?: Prisma.IntFieldUpdateOperationsInput | number
  requiredRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFieldUpdateOperationsInput | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoAssignToRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  Product?: Prisma.ProductUpdateOneRequiredWithoutTask_templatesNestedInput
}

export type task_templatesUncheckedUpdateWithoutTasksInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  productId?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  estimatedDuration?: Prisma.IntFieldUpdateOperationsInput | number
  leadTimeHours?: Prisma.IntFieldUpdateOperationsInput | number
  sequenceOrder?: Prisma.IntFieldUpdateOperationsInput | number
  requiredRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFieldUpdateOperationsInput | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoAssignToRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}

export type task_templatesCreateManyProductInput = {
  id: string
  name: string
  description?: string | null
  estimatedDuration: number
  leadTimeHours?: number
  sequenceOrder?: number
  requiredRole?: string | null
  triggerCondition: $Enums.TaskTriggerCondition
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: string | null
  notes?: string | null
  isActive?: boolean
  createdAt?: Date | string
  updatedAt: Date | string
  category?: string | null
}

export type task_templatesUpdateWithoutProductInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  estimatedDuration?: Prisma.IntFieldUpdateOperationsInput | number
  leadTimeHours?: Prisma.IntFieldUpdateOperationsInput | number
  sequenceOrder?: Prisma.IntFieldUpdateOperationsInput | number
  requiredRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFieldUpdateOperationsInput | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoAssignToRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tasks?: Prisma.tasksUpdateManyWithoutTask_templatesNestedInput
}

export type task_templatesUncheckedUpdateWithoutProductInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  estimatedDuration?: Prisma.IntFieldUpdateOperationsInput | number
  leadTimeHours?: Prisma.IntFieldUpdateOperationsInput | number
  sequenceOrder?: Prisma.IntFieldUpdateOperationsInput | number
  requiredRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFieldUpdateOperationsInput | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoAssignToRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  tasks?: Prisma.tasksUncheckedUpdateManyWithoutTask_templatesNestedInput
}

export type task_templatesUncheckedUpdateManyWithoutProductInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  name?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  estimatedDuration?: Prisma.IntFieldUpdateOperationsInput | number
  leadTimeHours?: Prisma.IntFieldUpdateOperationsInput | number
  sequenceOrder?: Prisma.IntFieldUpdateOperationsInput | number
  requiredRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  triggerCondition?: Prisma.EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
  isMandatory?: Prisma.BoolFieldUpdateOperationsInput | boolean
  requiresCompletionBeforeNext?: Prisma.BoolFieldUpdateOperationsInput | boolean
  autoAssignToRole?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  notes?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  isActive?: Prisma.BoolFieldUpdateOperationsInput | boolean
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  category?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
}


/**
 * Count Type Task_templatesCountOutputType
 */

export type Task_templatesCountOutputType = {
  tasks: number
}

export type Task_templatesCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  tasks?: boolean | Task_templatesCountOutputTypeCountTasksArgs
}

/**
 * Task_templatesCountOutputType without action
 */
export type Task_templatesCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Task_templatesCountOutputType
   */
  select?: Prisma.Task_templatesCountOutputTypeSelect<ExtArgs> | null
}

/**
 * Task_templatesCountOutputType without action
 */
export type Task_templatesCountOutputTypeCountTasksArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.tasksWhereInput
}


export type task_templatesSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  productId?: boolean
  name?: boolean
  description?: boolean
  estimatedDuration?: boolean
  leadTimeHours?: boolean
  sequenceOrder?: boolean
  requiredRole?: boolean
  triggerCondition?: boolean
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: boolean
  notes?: boolean
  isActive?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  category?: boolean
  Product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
  tasks?: boolean | Prisma.task_templates$tasksArgs<ExtArgs>
  _count?: boolean | Prisma.Task_templatesCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["task_templates"]>

export type task_templatesSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  productId?: boolean
  name?: boolean
  description?: boolean
  estimatedDuration?: boolean
  leadTimeHours?: boolean
  sequenceOrder?: boolean
  requiredRole?: boolean
  triggerCondition?: boolean
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: boolean
  notes?: boolean
  isActive?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  category?: boolean
  Product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}, ExtArgs["result"]["task_templates"]>

export type task_templatesSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  productId?: boolean
  name?: boolean
  description?: boolean
  estimatedDuration?: boolean
  leadTimeHours?: boolean
  sequenceOrder?: boolean
  requiredRole?: boolean
  triggerCondition?: boolean
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: boolean
  notes?: boolean
  isActive?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  category?: boolean
  Product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}, ExtArgs["result"]["task_templates"]>

export type task_templatesSelectScalar = {
  id?: boolean
  productId?: boolean
  name?: boolean
  description?: boolean
  estimatedDuration?: boolean
  leadTimeHours?: boolean
  sequenceOrder?: boolean
  requiredRole?: boolean
  triggerCondition?: boolean
  isMandatory?: boolean
  requiresCompletionBeforeNext?: boolean
  autoAssignToRole?: boolean
  notes?: boolean
  isActive?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  category?: boolean
}

export type task_templatesOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "productId" | "name" | "description" | "estimatedDuration" | "leadTimeHours" | "sequenceOrder" | "requiredRole" | "triggerCondition" | "isMandatory" | "requiresCompletionBeforeNext" | "autoAssignToRole" | "notes" | "isActive" | "createdAt" | "updatedAt" | "category", ExtArgs["result"]["task_templates"]>
export type task_templatesInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
  tasks?: boolean | Prisma.task_templates$tasksArgs<ExtArgs>
  _count?: boolean | Prisma.Task_templatesCountOutputTypeDefaultArgs<ExtArgs>
}
export type task_templatesIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}
export type task_templatesIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  Product?: boolean | Prisma.ProductDefaultArgs<ExtArgs>
}

export type $task_templatesPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "task_templates"
  objects: {
    Product: Prisma.$ProductPayload<ExtArgs>
    tasks: Prisma.$tasksPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    productId: string
    name: string
    description: string | null
    estimatedDuration: number
    leadTimeHours: number
    sequenceOrder: number
    requiredRole: string | null
    triggerCondition: $Enums.TaskTriggerCondition
    isMandatory: boolean
    requiresCompletionBeforeNext: boolean
    autoAssignToRole: string | null
    notes: string | null
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    category: string | null
  }, ExtArgs["result"]["task_templates"]>
  composites: {}
}

export type task_templatesGetPayload<S extends boolean | null | undefined | task_templatesDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$task_templatesPayload, S>

export type task_templatesCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<task_templatesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: Task_templatesCountAggregateInputType | true
  }

export interface task_templatesDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['task_templates'], meta: { name: 'task_templates' } }
  /**
   * Find zero or one Task_templates that matches the filter.
   * @param {task_templatesFindUniqueArgs} args - Arguments to find a Task_templates
   * @example
   * // Get one Task_templates
   * const task_templates = await prisma.task_templates.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends task_templatesFindUniqueArgs>(args: Prisma.SelectSubset<T, task_templatesFindUniqueArgs<ExtArgs>>): Prisma.Prisma__task_templatesClient<runtime.Types.Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Task_templates that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {task_templatesFindUniqueOrThrowArgs} args - Arguments to find a Task_templates
   * @example
   * // Get one Task_templates
   * const task_templates = await prisma.task_templates.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends task_templatesFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, task_templatesFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__task_templatesClient<runtime.Types.Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Task_templates that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {task_templatesFindFirstArgs} args - Arguments to find a Task_templates
   * @example
   * // Get one Task_templates
   * const task_templates = await prisma.task_templates.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends task_templatesFindFirstArgs>(args?: Prisma.SelectSubset<T, task_templatesFindFirstArgs<ExtArgs>>): Prisma.Prisma__task_templatesClient<runtime.Types.Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Task_templates that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {task_templatesFindFirstOrThrowArgs} args - Arguments to find a Task_templates
   * @example
   * // Get one Task_templates
   * const task_templates = await prisma.task_templates.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends task_templatesFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, task_templatesFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__task_templatesClient<runtime.Types.Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Task_templates that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {task_templatesFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Task_templates
   * const task_templates = await prisma.task_templates.findMany()
   * 
   * // Get first 10 Task_templates
   * const task_templates = await prisma.task_templates.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const task_templatesWithIdOnly = await prisma.task_templates.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends task_templatesFindManyArgs>(args?: Prisma.SelectSubset<T, task_templatesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Task_templates.
   * @param {task_templatesCreateArgs} args - Arguments to create a Task_templates.
   * @example
   * // Create one Task_templates
   * const Task_templates = await prisma.task_templates.create({
   *   data: {
   *     // ... data to create a Task_templates
   *   }
   * })
   * 
   */
  create<T extends task_templatesCreateArgs>(args: Prisma.SelectSubset<T, task_templatesCreateArgs<ExtArgs>>): Prisma.Prisma__task_templatesClient<runtime.Types.Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Task_templates.
   * @param {task_templatesCreateManyArgs} args - Arguments to create many Task_templates.
   * @example
   * // Create many Task_templates
   * const task_templates = await prisma.task_templates.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends task_templatesCreateManyArgs>(args?: Prisma.SelectSubset<T, task_templatesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Task_templates and returns the data saved in the database.
   * @param {task_templatesCreateManyAndReturnArgs} args - Arguments to create many Task_templates.
   * @example
   * // Create many Task_templates
   * const task_templates = await prisma.task_templates.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Task_templates and only return the `id`
   * const task_templatesWithIdOnly = await prisma.task_templates.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends task_templatesCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, task_templatesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Task_templates.
   * @param {task_templatesDeleteArgs} args - Arguments to delete one Task_templates.
   * @example
   * // Delete one Task_templates
   * const Task_templates = await prisma.task_templates.delete({
   *   where: {
   *     // ... filter to delete one Task_templates
   *   }
   * })
   * 
   */
  delete<T extends task_templatesDeleteArgs>(args: Prisma.SelectSubset<T, task_templatesDeleteArgs<ExtArgs>>): Prisma.Prisma__task_templatesClient<runtime.Types.Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Task_templates.
   * @param {task_templatesUpdateArgs} args - Arguments to update one Task_templates.
   * @example
   * // Update one Task_templates
   * const task_templates = await prisma.task_templates.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends task_templatesUpdateArgs>(args: Prisma.SelectSubset<T, task_templatesUpdateArgs<ExtArgs>>): Prisma.Prisma__task_templatesClient<runtime.Types.Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Task_templates.
   * @param {task_templatesDeleteManyArgs} args - Arguments to filter Task_templates to delete.
   * @example
   * // Delete a few Task_templates
   * const { count } = await prisma.task_templates.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends task_templatesDeleteManyArgs>(args?: Prisma.SelectSubset<T, task_templatesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Task_templates.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {task_templatesUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Task_templates
   * const task_templates = await prisma.task_templates.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends task_templatesUpdateManyArgs>(args: Prisma.SelectSubset<T, task_templatesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Task_templates and returns the data updated in the database.
   * @param {task_templatesUpdateManyAndReturnArgs} args - Arguments to update many Task_templates.
   * @example
   * // Update many Task_templates
   * const task_templates = await prisma.task_templates.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Task_templates and only return the `id`
   * const task_templatesWithIdOnly = await prisma.task_templates.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends task_templatesUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, task_templatesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Task_templates.
   * @param {task_templatesUpsertArgs} args - Arguments to update or create a Task_templates.
   * @example
   * // Update or create a Task_templates
   * const task_templates = await prisma.task_templates.upsert({
   *   create: {
   *     // ... data to create a Task_templates
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Task_templates we want to update
   *   }
   * })
   */
  upsert<T extends task_templatesUpsertArgs>(args: Prisma.SelectSubset<T, task_templatesUpsertArgs<ExtArgs>>): Prisma.Prisma__task_templatesClient<runtime.Types.Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Task_templates.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {task_templatesCountArgs} args - Arguments to filter Task_templates to count.
   * @example
   * // Count the number of Task_templates
   * const count = await prisma.task_templates.count({
   *   where: {
   *     // ... the filter for the Task_templates we want to count
   *   }
   * })
  **/
  count<T extends task_templatesCountArgs>(
    args?: Prisma.Subset<T, task_templatesCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], Task_templatesCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Task_templates.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {Task_templatesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends Task_templatesAggregateArgs>(args: Prisma.Subset<T, Task_templatesAggregateArgs>): Prisma.PrismaPromise<GetTask_templatesAggregateType<T>>

  /**
   * Group by Task_templates.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {task_templatesGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends task_templatesGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: task_templatesGroupByArgs['orderBy'] }
      : { orderBy?: task_templatesGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, task_templatesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTask_templatesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the task_templates model
 */
readonly fields: task_templatesFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for task_templates.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__task_templatesClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  Product<T extends Prisma.ProductDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ProductDefaultArgs<ExtArgs>>): Prisma.Prisma__ProductClient<runtime.Types.Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  tasks<T extends Prisma.task_templates$tasksArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.task_templates$tasksArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the task_templates model
 */
export interface task_templatesFieldRefs {
  readonly id: Prisma.FieldRef<"task_templates", 'String'>
  readonly productId: Prisma.FieldRef<"task_templates", 'String'>
  readonly name: Prisma.FieldRef<"task_templates", 'String'>
  readonly description: Prisma.FieldRef<"task_templates", 'String'>
  readonly estimatedDuration: Prisma.FieldRef<"task_templates", 'Int'>
  readonly leadTimeHours: Prisma.FieldRef<"task_templates", 'Int'>
  readonly sequenceOrder: Prisma.FieldRef<"task_templates", 'Int'>
  readonly requiredRole: Prisma.FieldRef<"task_templates", 'String'>
  readonly triggerCondition: Prisma.FieldRef<"task_templates", 'TaskTriggerCondition'>
  readonly isMandatory: Prisma.FieldRef<"task_templates", 'Boolean'>
  readonly requiresCompletionBeforeNext: Prisma.FieldRef<"task_templates", 'Boolean'>
  readonly autoAssignToRole: Prisma.FieldRef<"task_templates", 'String'>
  readonly notes: Prisma.FieldRef<"task_templates", 'String'>
  readonly isActive: Prisma.FieldRef<"task_templates", 'Boolean'>
  readonly createdAt: Prisma.FieldRef<"task_templates", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"task_templates", 'DateTime'>
  readonly category: Prisma.FieldRef<"task_templates", 'String'>
}
    

// Custom InputTypes
/**
 * task_templates findUnique
 */
export type task_templatesFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the task_templates
   */
  select?: Prisma.task_templatesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the task_templates
   */
  omit?: Prisma.task_templatesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.task_templatesInclude<ExtArgs> | null
  /**
   * Filter, which task_templates to fetch.
   */
  where: Prisma.task_templatesWhereUniqueInput
}

/**
 * task_templates findUniqueOrThrow
 */
export type task_templatesFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the task_templates
   */
  select?: Prisma.task_templatesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the task_templates
   */
  omit?: Prisma.task_templatesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.task_templatesInclude<ExtArgs> | null
  /**
   * Filter, which task_templates to fetch.
   */
  where: Prisma.task_templatesWhereUniqueInput
}

/**
 * task_templates findFirst
 */
export type task_templatesFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the task_templates
   */
  select?: Prisma.task_templatesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the task_templates
   */
  omit?: Prisma.task_templatesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.task_templatesInclude<ExtArgs> | null
  /**
   * Filter, which task_templates to fetch.
   */
  where?: Prisma.task_templatesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of task_templates to fetch.
   */
  orderBy?: Prisma.task_templatesOrderByWithRelationInput | Prisma.task_templatesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for task_templates.
   */
  cursor?: Prisma.task_templatesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` task_templates from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` task_templates.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of task_templates.
   */
  distinct?: Prisma.Task_templatesScalarFieldEnum | Prisma.Task_templatesScalarFieldEnum[]
}

/**
 * task_templates findFirstOrThrow
 */
export type task_templatesFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the task_templates
   */
  select?: Prisma.task_templatesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the task_templates
   */
  omit?: Prisma.task_templatesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.task_templatesInclude<ExtArgs> | null
  /**
   * Filter, which task_templates to fetch.
   */
  where?: Prisma.task_templatesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of task_templates to fetch.
   */
  orderBy?: Prisma.task_templatesOrderByWithRelationInput | Prisma.task_templatesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for task_templates.
   */
  cursor?: Prisma.task_templatesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` task_templates from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` task_templates.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of task_templates.
   */
  distinct?: Prisma.Task_templatesScalarFieldEnum | Prisma.Task_templatesScalarFieldEnum[]
}

/**
 * task_templates findMany
 */
export type task_templatesFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the task_templates
   */
  select?: Prisma.task_templatesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the task_templates
   */
  omit?: Prisma.task_templatesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.task_templatesInclude<ExtArgs> | null
  /**
   * Filter, which task_templates to fetch.
   */
  where?: Prisma.task_templatesWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of task_templates to fetch.
   */
  orderBy?: Prisma.task_templatesOrderByWithRelationInput | Prisma.task_templatesOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing task_templates.
   */
  cursor?: Prisma.task_templatesWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` task_templates from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` task_templates.
   */
  skip?: number
  distinct?: Prisma.Task_templatesScalarFieldEnum | Prisma.Task_templatesScalarFieldEnum[]
}

/**
 * task_templates create
 */
export type task_templatesCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the task_templates
   */
  select?: Prisma.task_templatesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the task_templates
   */
  omit?: Prisma.task_templatesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.task_templatesInclude<ExtArgs> | null
  /**
   * The data needed to create a task_templates.
   */
  data: Prisma.XOR<Prisma.task_templatesCreateInput, Prisma.task_templatesUncheckedCreateInput>
}

/**
 * task_templates createMany
 */
export type task_templatesCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many task_templates.
   */
  data: Prisma.task_templatesCreateManyInput | Prisma.task_templatesCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * task_templates createManyAndReturn
 */
export type task_templatesCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the task_templates
   */
  select?: Prisma.task_templatesSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the task_templates
   */
  omit?: Prisma.task_templatesOmit<ExtArgs> | null
  /**
   * The data used to create many task_templates.
   */
  data: Prisma.task_templatesCreateManyInput | Prisma.task_templatesCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.task_templatesIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * task_templates update
 */
export type task_templatesUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the task_templates
   */
  select?: Prisma.task_templatesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the task_templates
   */
  omit?: Prisma.task_templatesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.task_templatesInclude<ExtArgs> | null
  /**
   * The data needed to update a task_templates.
   */
  data: Prisma.XOR<Prisma.task_templatesUpdateInput, Prisma.task_templatesUncheckedUpdateInput>
  /**
   * Choose, which task_templates to update.
   */
  where: Prisma.task_templatesWhereUniqueInput
}

/**
 * task_templates updateMany
 */
export type task_templatesUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update task_templates.
   */
  data: Prisma.XOR<Prisma.task_templatesUpdateManyMutationInput, Prisma.task_templatesUncheckedUpdateManyInput>
  /**
   * Filter which task_templates to update
   */
  where?: Prisma.task_templatesWhereInput
  /**
   * Limit how many task_templates to update.
   */
  limit?: number
}

/**
 * task_templates updateManyAndReturn
 */
export type task_templatesUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the task_templates
   */
  select?: Prisma.task_templatesSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the task_templates
   */
  omit?: Prisma.task_templatesOmit<ExtArgs> | null
  /**
   * The data used to update task_templates.
   */
  data: Prisma.XOR<Prisma.task_templatesUpdateManyMutationInput, Prisma.task_templatesUncheckedUpdateManyInput>
  /**
   * Filter which task_templates to update
   */
  where?: Prisma.task_templatesWhereInput
  /**
   * Limit how many task_templates to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.task_templatesIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * task_templates upsert
 */
export type task_templatesUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the task_templates
   */
  select?: Prisma.task_templatesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the task_templates
   */
  omit?: Prisma.task_templatesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.task_templatesInclude<ExtArgs> | null
  /**
   * The filter to search for the task_templates to update in case it exists.
   */
  where: Prisma.task_templatesWhereUniqueInput
  /**
   * In case the task_templates found by the `where` argument doesn't exist, create a new task_templates with this data.
   */
  create: Prisma.XOR<Prisma.task_templatesCreateInput, Prisma.task_templatesUncheckedCreateInput>
  /**
   * In case the task_templates was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.task_templatesUpdateInput, Prisma.task_templatesUncheckedUpdateInput>
}

/**
 * task_templates delete
 */
export type task_templatesDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the task_templates
   */
  select?: Prisma.task_templatesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the task_templates
   */
  omit?: Prisma.task_templatesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.task_templatesInclude<ExtArgs> | null
  /**
   * Filter which task_templates to delete.
   */
  where: Prisma.task_templatesWhereUniqueInput
}

/**
 * task_templates deleteMany
 */
export type task_templatesDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which task_templates to delete
   */
  where?: Prisma.task_templatesWhereInput
  /**
   * Limit how many task_templates to delete.
   */
  limit?: number
}

/**
 * task_templates.tasks
 */
export type task_templates$tasksArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the tasks
   */
  select?: Prisma.tasksSelect<ExtArgs> | null
  /**
   * Omit specific fields from the tasks
   */
  omit?: Prisma.tasksOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.tasksInclude<ExtArgs> | null
  where?: Prisma.tasksWhereInput
  orderBy?: Prisma.tasksOrderByWithRelationInput | Prisma.tasksOrderByWithRelationInput[]
  cursor?: Prisma.tasksWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.TasksScalarFieldEnum | Prisma.TasksScalarFieldEnum[]
}

/**
 * task_templates without action
 */
export type task_templatesDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the task_templates
   */
  select?: Prisma.task_templatesSelect<ExtArgs> | null
  /**
   * Omit specific fields from the task_templates
   */
  omit?: Prisma.task_templatesOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.task_templatesInclude<ExtArgs> | null
}
