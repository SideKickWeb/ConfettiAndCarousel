
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Account
 * 
 */
export type Account = $Result.DefaultSelection<Prisma.$AccountPayload>
/**
 * Model Customer
 * 
 */
export type Customer = $Result.DefaultSelection<Prisma.$CustomerPayload>
/**
 * Model Event
 * 
 */
export type Event = $Result.DefaultSelection<Prisma.$EventPayload>
/**
 * Model HeroSetting
 * 
 */
export type HeroSetting = $Result.DefaultSelection<Prisma.$HeroSettingPayload>
/**
 * Model Order
 * 
 */
export type Order = $Result.DefaultSelection<Prisma.$OrderPayload>
/**
 * Model Product
 * 
 */
export type Product = $Result.DefaultSelection<Prisma.$ProductPayload>
/**
 * Model StaffInvitation
 * 
 */
export type StaffInvitation = $Result.DefaultSelection<Prisma.$StaffInvitationPayload>
/**
 * Model ProductCategory
 * 
 */
export type ProductCategory = $Result.DefaultSelection<Prisma.$ProductCategoryPayload>
/**
 * Model EventItem
 * 
 */
export type EventItem = $Result.DefaultSelection<Prisma.$EventItemPayload>
/**
 * Model EventItemOption
 * 
 */
export type EventItemOption = $Result.DefaultSelection<Prisma.$EventItemOptionPayload>
/**
 * Model EventStatusHistory
 * 
 */
export type EventStatusHistory = $Result.DefaultSelection<Prisma.$EventStatusHistoryPayload>
/**
 * Model OrderItem
 * 
 */
export type OrderItem = $Result.DefaultSelection<Prisma.$OrderItemPayload>
/**
 * Model OrderItemOption
 * 
 */
export type OrderItemOption = $Result.DefaultSelection<Prisma.$OrderItemOptionPayload>
/**
 * Model OrderStatusHistory
 * 
 */
export type OrderStatusHistory = $Result.DefaultSelection<Prisma.$OrderStatusHistoryPayload>
/**
 * Model ProductOption
 * 
 */
export type ProductOption = $Result.DefaultSelection<Prisma.$ProductOptionPayload>
/**
 * Model ProductOptionValue
 * 
 */
export type ProductOptionValue = $Result.DefaultSelection<Prisma.$ProductOptionValuePayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model task_dependencies
 * 
 */
export type task_dependencies = $Result.DefaultSelection<Prisma.$task_dependenciesPayload>
/**
 * Model task_templates
 * 
 */
export type task_templates = $Result.DefaultSelection<Prisma.$task_templatesPayload>
/**
 * Model tasks
 * 
 */
export type tasks = $Result.DefaultSelection<Prisma.$tasksPayload>
/**
 * Model user_roles
 * 
 */
export type user_roles = $Result.DefaultSelection<Prisma.$user_rolesPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const TaskPriority: {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  URGENT: 'URGENT'
};

export type TaskPriority = (typeof TaskPriority)[keyof typeof TaskPriority]


export const TaskStatus: {
  PENDING: 'PENDING',
  IN_PROGRESS: 'IN_PROGRESS',
  COMPLETED: 'COMPLETED',
  CANCELLED: 'CANCELLED',
  BLOCKED: 'BLOCKED'
};

export type TaskStatus = (typeof TaskStatus)[keyof typeof TaskStatus]


export const TaskTriggerCondition: {
  ORDER_CREATED: 'ORDER_CREATED',
  ORDER_CONFIRMED: 'ORDER_CONFIRMED',
  EVENT_CONFIRMED: 'EVENT_CONFIRMED',
  EVENT_PAID: 'EVENT_PAID',
  DAY_BEFORE: 'DAY_BEFORE',
  DAY_OF: 'DAY_OF',
  AFTER_EVENT: 'AFTER_EVENT'
};

export type TaskTriggerCondition = (typeof TaskTriggerCondition)[keyof typeof TaskTriggerCondition]

}

export type TaskPriority = $Enums.TaskPriority

export const TaskPriority: typeof $Enums.TaskPriority

export type TaskStatus = $Enums.TaskStatus

export const TaskStatus: typeof $Enums.TaskStatus

export type TaskTriggerCondition = $Enums.TaskTriggerCondition

export const TaskTriggerCondition: typeof $Enums.TaskTriggerCondition

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Accounts
 * const accounts = await prisma.account.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Accounts
   * const accounts = await prisma.account.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.account`: Exposes CRUD operations for the **Account** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Accounts
    * const accounts = await prisma.account.findMany()
    * ```
    */
  get account(): Prisma.AccountDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.customer`: Exposes CRUD operations for the **Customer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Customers
    * const customers = await prisma.customer.findMany()
    * ```
    */
  get customer(): Prisma.CustomerDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.event`: Exposes CRUD operations for the **Event** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Events
    * const events = await prisma.event.findMany()
    * ```
    */
  get event(): Prisma.EventDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.heroSetting`: Exposes CRUD operations for the **HeroSetting** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more HeroSettings
    * const heroSettings = await prisma.heroSetting.findMany()
    * ```
    */
  get heroSetting(): Prisma.HeroSettingDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.order`: Exposes CRUD operations for the **Order** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders
    * const orders = await prisma.order.findMany()
    * ```
    */
  get order(): Prisma.OrderDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.product`: Exposes CRUD operations for the **Product** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.product.findMany()
    * ```
    */
  get product(): Prisma.ProductDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.staffInvitation`: Exposes CRUD operations for the **StaffInvitation** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StaffInvitations
    * const staffInvitations = await prisma.staffInvitation.findMany()
    * ```
    */
  get staffInvitation(): Prisma.StaffInvitationDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productCategory`: Exposes CRUD operations for the **ProductCategory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductCategories
    * const productCategories = await prisma.productCategory.findMany()
    * ```
    */
  get productCategory(): Prisma.ProductCategoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.eventItem`: Exposes CRUD operations for the **EventItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EventItems
    * const eventItems = await prisma.eventItem.findMany()
    * ```
    */
  get eventItem(): Prisma.EventItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.eventItemOption`: Exposes CRUD operations for the **EventItemOption** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EventItemOptions
    * const eventItemOptions = await prisma.eventItemOption.findMany()
    * ```
    */
  get eventItemOption(): Prisma.EventItemOptionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.eventStatusHistory`: Exposes CRUD operations for the **EventStatusHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more EventStatusHistories
    * const eventStatusHistories = await prisma.eventStatusHistory.findMany()
    * ```
    */
  get eventStatusHistory(): Prisma.EventStatusHistoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orderItem`: Exposes CRUD operations for the **OrderItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderItems
    * const orderItems = await prisma.orderItem.findMany()
    * ```
    */
  get orderItem(): Prisma.OrderItemDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orderItemOption`: Exposes CRUD operations for the **OrderItemOption** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderItemOptions
    * const orderItemOptions = await prisma.orderItemOption.findMany()
    * ```
    */
  get orderItemOption(): Prisma.OrderItemOptionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.orderStatusHistory`: Exposes CRUD operations for the **OrderStatusHistory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderStatusHistories
    * const orderStatusHistories = await prisma.orderStatusHistory.findMany()
    * ```
    */
  get orderStatusHistory(): Prisma.OrderStatusHistoryDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productOption`: Exposes CRUD operations for the **ProductOption** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductOptions
    * const productOptions = await prisma.productOption.findMany()
    * ```
    */
  get productOption(): Prisma.ProductOptionDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.productOptionValue`: Exposes CRUD operations for the **ProductOptionValue** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductOptionValues
    * const productOptionValues = await prisma.productOptionValue.findMany()
    * ```
    */
  get productOptionValue(): Prisma.ProductOptionValueDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.task_dependencies`: Exposes CRUD operations for the **task_dependencies** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Task_dependencies
    * const task_dependencies = await prisma.task_dependencies.findMany()
    * ```
    */
  get task_dependencies(): Prisma.task_dependenciesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.task_templates`: Exposes CRUD operations for the **task_templates** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Task_templates
    * const task_templates = await prisma.task_templates.findMany()
    * ```
    */
  get task_templates(): Prisma.task_templatesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tasks`: Exposes CRUD operations for the **tasks** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tasks
    * const tasks = await prisma.tasks.findMany()
    * ```
    */
  get tasks(): Prisma.tasksDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_roles`: Exposes CRUD operations for the **user_roles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_roles
    * const user_roles = await prisma.user_roles.findMany()
    * ```
    */
  get user_roles(): Prisma.user_rolesDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.8.2
   * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Account: 'Account',
    Customer: 'Customer',
    Event: 'Event',
    HeroSetting: 'HeroSetting',
    Order: 'Order',
    Product: 'Product',
    StaffInvitation: 'StaffInvitation',
    ProductCategory: 'ProductCategory',
    EventItem: 'EventItem',
    EventItemOption: 'EventItemOption',
    EventStatusHistory: 'EventStatusHistory',
    OrderItem: 'OrderItem',
    OrderItemOption: 'OrderItemOption',
    OrderStatusHistory: 'OrderStatusHistory',
    ProductOption: 'ProductOption',
    ProductOptionValue: 'ProductOptionValue',
    User: 'User',
    task_dependencies: 'task_dependencies',
    task_templates: 'task_templates',
    tasks: 'tasks',
    user_roles: 'user_roles'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "account" | "customer" | "event" | "heroSetting" | "order" | "product" | "staffInvitation" | "productCategory" | "eventItem" | "eventItemOption" | "eventStatusHistory" | "orderItem" | "orderItemOption" | "orderStatusHistory" | "productOption" | "productOptionValue" | "user" | "task_dependencies" | "task_templates" | "tasks" | "user_roles"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      Account: {
        payload: Prisma.$AccountPayload<ExtArgs>
        fields: Prisma.AccountFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AccountFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AccountFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findFirst: {
            args: Prisma.AccountFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AccountFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          findMany: {
            args: Prisma.AccountFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          create: {
            args: Prisma.AccountCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          createMany: {
            args: Prisma.AccountCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AccountCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          delete: {
            args: Prisma.AccountDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          update: {
            args: Prisma.AccountUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          deleteMany: {
            args: Prisma.AccountDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AccountUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.AccountUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>[]
          }
          upsert: {
            args: Prisma.AccountUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AccountPayload>
          }
          aggregate: {
            args: Prisma.AccountAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAccount>
          }
          groupBy: {
            args: Prisma.AccountGroupByArgs<ExtArgs>
            result: $Utils.Optional<AccountGroupByOutputType>[]
          }
          count: {
            args: Prisma.AccountCountArgs<ExtArgs>
            result: $Utils.Optional<AccountCountAggregateOutputType> | number
          }
        }
      }
      Customer: {
        payload: Prisma.$CustomerPayload<ExtArgs>
        fields: Prisma.CustomerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CustomerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CustomerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          findFirst: {
            args: Prisma.CustomerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CustomerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          findMany: {
            args: Prisma.CustomerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>[]
          }
          create: {
            args: Prisma.CustomerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          createMany: {
            args: Prisma.CustomerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.CustomerCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>[]
          }
          delete: {
            args: Prisma.CustomerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          update: {
            args: Prisma.CustomerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          deleteMany: {
            args: Prisma.CustomerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CustomerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.CustomerUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>[]
          }
          upsert: {
            args: Prisma.CustomerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          aggregate: {
            args: Prisma.CustomerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCustomer>
          }
          groupBy: {
            args: Prisma.CustomerGroupByArgs<ExtArgs>
            result: $Utils.Optional<CustomerGroupByOutputType>[]
          }
          count: {
            args: Prisma.CustomerCountArgs<ExtArgs>
            result: $Utils.Optional<CustomerCountAggregateOutputType> | number
          }
        }
      }
      Event: {
        payload: Prisma.$EventPayload<ExtArgs>
        fields: Prisma.EventFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EventFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EventFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          findFirst: {
            args: Prisma.EventFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EventFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          findMany: {
            args: Prisma.EventFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>[]
          }
          create: {
            args: Prisma.EventCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          createMany: {
            args: Prisma.EventCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EventCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>[]
          }
          delete: {
            args: Prisma.EventDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          update: {
            args: Prisma.EventUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          deleteMany: {
            args: Prisma.EventDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EventUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EventUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>[]
          }
          upsert: {
            args: Prisma.EventUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventPayload>
          }
          aggregate: {
            args: Prisma.EventAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEvent>
          }
          groupBy: {
            args: Prisma.EventGroupByArgs<ExtArgs>
            result: $Utils.Optional<EventGroupByOutputType>[]
          }
          count: {
            args: Prisma.EventCountArgs<ExtArgs>
            result: $Utils.Optional<EventCountAggregateOutputType> | number
          }
        }
      }
      HeroSetting: {
        payload: Prisma.$HeroSettingPayload<ExtArgs>
        fields: Prisma.HeroSettingFieldRefs
        operations: {
          findUnique: {
            args: Prisma.HeroSettingFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HeroSettingPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.HeroSettingFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HeroSettingPayload>
          }
          findFirst: {
            args: Prisma.HeroSettingFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HeroSettingPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.HeroSettingFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HeroSettingPayload>
          }
          findMany: {
            args: Prisma.HeroSettingFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HeroSettingPayload>[]
          }
          create: {
            args: Prisma.HeroSettingCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HeroSettingPayload>
          }
          createMany: {
            args: Prisma.HeroSettingCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.HeroSettingCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HeroSettingPayload>[]
          }
          delete: {
            args: Prisma.HeroSettingDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HeroSettingPayload>
          }
          update: {
            args: Prisma.HeroSettingUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HeroSettingPayload>
          }
          deleteMany: {
            args: Prisma.HeroSettingDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.HeroSettingUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.HeroSettingUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HeroSettingPayload>[]
          }
          upsert: {
            args: Prisma.HeroSettingUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$HeroSettingPayload>
          }
          aggregate: {
            args: Prisma.HeroSettingAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateHeroSetting>
          }
          groupBy: {
            args: Prisma.HeroSettingGroupByArgs<ExtArgs>
            result: $Utils.Optional<HeroSettingGroupByOutputType>[]
          }
          count: {
            args: Prisma.HeroSettingCountArgs<ExtArgs>
            result: $Utils.Optional<HeroSettingCountAggregateOutputType> | number
          }
        }
      }
      Order: {
        payload: Prisma.$OrderPayload<ExtArgs>
        fields: Prisma.OrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findFirst: {
            args: Prisma.OrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findMany: {
            args: Prisma.OrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          create: {
            args: Prisma.OrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          createMany: {
            args: Prisma.OrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          delete: {
            args: Prisma.OrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          update: {
            args: Prisma.OrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          deleteMany: {
            args: Prisma.OrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          upsert: {
            args: Prisma.OrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          aggregate: {
            args: Prisma.OrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrder>
          }
          groupBy: {
            args: Prisma.OrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderCountArgs<ExtArgs>
            result: $Utils.Optional<OrderCountAggregateOutputType> | number
          }
        }
      }
      Product: {
        payload: Prisma.$ProductPayload<ExtArgs>
        fields: Prisma.ProductFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findFirst: {
            args: Prisma.ProductFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findMany: {
            args: Prisma.ProductFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          create: {
            args: Prisma.ProductCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          createMany: {
            args: Prisma.ProductCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          delete: {
            args: Prisma.ProductDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          update: {
            args: Prisma.ProductUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          deleteMany: {
            args: Prisma.ProductDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          upsert: {
            args: Prisma.ProductUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          aggregate: {
            args: Prisma.ProductAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct>
          }
          groupBy: {
            args: Prisma.ProductGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductCountArgs<ExtArgs>
            result: $Utils.Optional<ProductCountAggregateOutputType> | number
          }
        }
      }
      StaffInvitation: {
        payload: Prisma.$StaffInvitationPayload<ExtArgs>
        fields: Prisma.StaffInvitationFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StaffInvitationFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffInvitationPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StaffInvitationFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffInvitationPayload>
          }
          findFirst: {
            args: Prisma.StaffInvitationFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffInvitationPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StaffInvitationFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffInvitationPayload>
          }
          findMany: {
            args: Prisma.StaffInvitationFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffInvitationPayload>[]
          }
          create: {
            args: Prisma.StaffInvitationCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffInvitationPayload>
          }
          createMany: {
            args: Prisma.StaffInvitationCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StaffInvitationCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffInvitationPayload>[]
          }
          delete: {
            args: Prisma.StaffInvitationDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffInvitationPayload>
          }
          update: {
            args: Prisma.StaffInvitationUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffInvitationPayload>
          }
          deleteMany: {
            args: Prisma.StaffInvitationDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StaffInvitationUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.StaffInvitationUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffInvitationPayload>[]
          }
          upsert: {
            args: Prisma.StaffInvitationUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StaffInvitationPayload>
          }
          aggregate: {
            args: Prisma.StaffInvitationAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStaffInvitation>
          }
          groupBy: {
            args: Prisma.StaffInvitationGroupByArgs<ExtArgs>
            result: $Utils.Optional<StaffInvitationGroupByOutputType>[]
          }
          count: {
            args: Prisma.StaffInvitationCountArgs<ExtArgs>
            result: $Utils.Optional<StaffInvitationCountAggregateOutputType> | number
          }
        }
      }
      ProductCategory: {
        payload: Prisma.$ProductCategoryPayload<ExtArgs>
        fields: Prisma.ProductCategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductCategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductCategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          findFirst: {
            args: Prisma.ProductCategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductCategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          findMany: {
            args: Prisma.ProductCategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>[]
          }
          create: {
            args: Prisma.ProductCategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          createMany: {
            args: Prisma.ProductCategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductCategoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>[]
          }
          delete: {
            args: Prisma.ProductCategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          update: {
            args: Prisma.ProductCategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          deleteMany: {
            args: Prisma.ProductCategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductCategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductCategoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>[]
          }
          upsert: {
            args: Prisma.ProductCategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductCategoryPayload>
          }
          aggregate: {
            args: Prisma.ProductCategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductCategory>
          }
          groupBy: {
            args: Prisma.ProductCategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductCategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductCategoryCountArgs<ExtArgs>
            result: $Utils.Optional<ProductCategoryCountAggregateOutputType> | number
          }
        }
      }
      EventItem: {
        payload: Prisma.$EventItemPayload<ExtArgs>
        fields: Prisma.EventItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EventItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EventItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventItemPayload>
          }
          findFirst: {
            args: Prisma.EventItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EventItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventItemPayload>
          }
          findMany: {
            args: Prisma.EventItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventItemPayload>[]
          }
          create: {
            args: Prisma.EventItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventItemPayload>
          }
          createMany: {
            args: Prisma.EventItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EventItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventItemPayload>[]
          }
          delete: {
            args: Prisma.EventItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventItemPayload>
          }
          update: {
            args: Prisma.EventItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventItemPayload>
          }
          deleteMany: {
            args: Prisma.EventItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EventItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EventItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventItemPayload>[]
          }
          upsert: {
            args: Prisma.EventItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventItemPayload>
          }
          aggregate: {
            args: Prisma.EventItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEventItem>
          }
          groupBy: {
            args: Prisma.EventItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<EventItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.EventItemCountArgs<ExtArgs>
            result: $Utils.Optional<EventItemCountAggregateOutputType> | number
          }
        }
      }
      EventItemOption: {
        payload: Prisma.$EventItemOptionPayload<ExtArgs>
        fields: Prisma.EventItemOptionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EventItemOptionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventItemOptionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EventItemOptionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventItemOptionPayload>
          }
          findFirst: {
            args: Prisma.EventItemOptionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventItemOptionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EventItemOptionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventItemOptionPayload>
          }
          findMany: {
            args: Prisma.EventItemOptionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventItemOptionPayload>[]
          }
          create: {
            args: Prisma.EventItemOptionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventItemOptionPayload>
          }
          createMany: {
            args: Prisma.EventItemOptionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EventItemOptionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventItemOptionPayload>[]
          }
          delete: {
            args: Prisma.EventItemOptionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventItemOptionPayload>
          }
          update: {
            args: Prisma.EventItemOptionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventItemOptionPayload>
          }
          deleteMany: {
            args: Prisma.EventItemOptionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EventItemOptionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EventItemOptionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventItemOptionPayload>[]
          }
          upsert: {
            args: Prisma.EventItemOptionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventItemOptionPayload>
          }
          aggregate: {
            args: Prisma.EventItemOptionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEventItemOption>
          }
          groupBy: {
            args: Prisma.EventItemOptionGroupByArgs<ExtArgs>
            result: $Utils.Optional<EventItemOptionGroupByOutputType>[]
          }
          count: {
            args: Prisma.EventItemOptionCountArgs<ExtArgs>
            result: $Utils.Optional<EventItemOptionCountAggregateOutputType> | number
          }
        }
      }
      EventStatusHistory: {
        payload: Prisma.$EventStatusHistoryPayload<ExtArgs>
        fields: Prisma.EventStatusHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.EventStatusHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventStatusHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.EventStatusHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventStatusHistoryPayload>
          }
          findFirst: {
            args: Prisma.EventStatusHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventStatusHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.EventStatusHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventStatusHistoryPayload>
          }
          findMany: {
            args: Prisma.EventStatusHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventStatusHistoryPayload>[]
          }
          create: {
            args: Prisma.EventStatusHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventStatusHistoryPayload>
          }
          createMany: {
            args: Prisma.EventStatusHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.EventStatusHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventStatusHistoryPayload>[]
          }
          delete: {
            args: Prisma.EventStatusHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventStatusHistoryPayload>
          }
          update: {
            args: Prisma.EventStatusHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventStatusHistoryPayload>
          }
          deleteMany: {
            args: Prisma.EventStatusHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.EventStatusHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.EventStatusHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventStatusHistoryPayload>[]
          }
          upsert: {
            args: Prisma.EventStatusHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$EventStatusHistoryPayload>
          }
          aggregate: {
            args: Prisma.EventStatusHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEventStatusHistory>
          }
          groupBy: {
            args: Prisma.EventStatusHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<EventStatusHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.EventStatusHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<EventStatusHistoryCountAggregateOutputType> | number
          }
        }
      }
      OrderItem: {
        payload: Prisma.$OrderItemPayload<ExtArgs>
        fields: Prisma.OrderItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          findFirst: {
            args: Prisma.OrderItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          findMany: {
            args: Prisma.OrderItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>[]
          }
          create: {
            args: Prisma.OrderItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          createMany: {
            args: Prisma.OrderItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderItemCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>[]
          }
          delete: {
            args: Prisma.OrderItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          update: {
            args: Prisma.OrderItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          deleteMany: {
            args: Prisma.OrderItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderItemUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>[]
          }
          upsert: {
            args: Prisma.OrderItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          aggregate: {
            args: Prisma.OrderItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderItem>
          }
          groupBy: {
            args: Prisma.OrderItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderItemCountArgs<ExtArgs>
            result: $Utils.Optional<OrderItemCountAggregateOutputType> | number
          }
        }
      }
      OrderItemOption: {
        payload: Prisma.$OrderItemOptionPayload<ExtArgs>
        fields: Prisma.OrderItemOptionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderItemOptionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemOptionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderItemOptionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemOptionPayload>
          }
          findFirst: {
            args: Prisma.OrderItemOptionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemOptionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderItemOptionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemOptionPayload>
          }
          findMany: {
            args: Prisma.OrderItemOptionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemOptionPayload>[]
          }
          create: {
            args: Prisma.OrderItemOptionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemOptionPayload>
          }
          createMany: {
            args: Prisma.OrderItemOptionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderItemOptionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemOptionPayload>[]
          }
          delete: {
            args: Prisma.OrderItemOptionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemOptionPayload>
          }
          update: {
            args: Prisma.OrderItemOptionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemOptionPayload>
          }
          deleteMany: {
            args: Prisma.OrderItemOptionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderItemOptionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderItemOptionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemOptionPayload>[]
          }
          upsert: {
            args: Prisma.OrderItemOptionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemOptionPayload>
          }
          aggregate: {
            args: Prisma.OrderItemOptionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderItemOption>
          }
          groupBy: {
            args: Prisma.OrderItemOptionGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderItemOptionGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderItemOptionCountArgs<ExtArgs>
            result: $Utils.Optional<OrderItemOptionCountAggregateOutputType> | number
          }
        }
      }
      OrderStatusHistory: {
        payload: Prisma.$OrderStatusHistoryPayload<ExtArgs>
        fields: Prisma.OrderStatusHistoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderStatusHistoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderStatusHistoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderStatusHistoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderStatusHistoryPayload>
          }
          findFirst: {
            args: Prisma.OrderStatusHistoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderStatusHistoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderStatusHistoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderStatusHistoryPayload>
          }
          findMany: {
            args: Prisma.OrderStatusHistoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderStatusHistoryPayload>[]
          }
          create: {
            args: Prisma.OrderStatusHistoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderStatusHistoryPayload>
          }
          createMany: {
            args: Prisma.OrderStatusHistoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OrderStatusHistoryCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderStatusHistoryPayload>[]
          }
          delete: {
            args: Prisma.OrderStatusHistoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderStatusHistoryPayload>
          }
          update: {
            args: Prisma.OrderStatusHistoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderStatusHistoryPayload>
          }
          deleteMany: {
            args: Prisma.OrderStatusHistoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderStatusHistoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.OrderStatusHistoryUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderStatusHistoryPayload>[]
          }
          upsert: {
            args: Prisma.OrderStatusHistoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderStatusHistoryPayload>
          }
          aggregate: {
            args: Prisma.OrderStatusHistoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderStatusHistory>
          }
          groupBy: {
            args: Prisma.OrderStatusHistoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderStatusHistoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderStatusHistoryCountArgs<ExtArgs>
            result: $Utils.Optional<OrderStatusHistoryCountAggregateOutputType> | number
          }
        }
      }
      ProductOption: {
        payload: Prisma.$ProductOptionPayload<ExtArgs>
        fields: Prisma.ProductOptionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductOptionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOptionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductOptionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOptionPayload>
          }
          findFirst: {
            args: Prisma.ProductOptionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOptionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductOptionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOptionPayload>
          }
          findMany: {
            args: Prisma.ProductOptionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOptionPayload>[]
          }
          create: {
            args: Prisma.ProductOptionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOptionPayload>
          }
          createMany: {
            args: Prisma.ProductOptionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductOptionCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOptionPayload>[]
          }
          delete: {
            args: Prisma.ProductOptionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOptionPayload>
          }
          update: {
            args: Prisma.ProductOptionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOptionPayload>
          }
          deleteMany: {
            args: Prisma.ProductOptionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductOptionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductOptionUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOptionPayload>[]
          }
          upsert: {
            args: Prisma.ProductOptionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOptionPayload>
          }
          aggregate: {
            args: Prisma.ProductOptionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductOption>
          }
          groupBy: {
            args: Prisma.ProductOptionGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductOptionGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductOptionCountArgs<ExtArgs>
            result: $Utils.Optional<ProductOptionCountAggregateOutputType> | number
          }
        }
      }
      ProductOptionValue: {
        payload: Prisma.$ProductOptionValuePayload<ExtArgs>
        fields: Prisma.ProductOptionValueFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductOptionValueFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOptionValuePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductOptionValueFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOptionValuePayload>
          }
          findFirst: {
            args: Prisma.ProductOptionValueFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOptionValuePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductOptionValueFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOptionValuePayload>
          }
          findMany: {
            args: Prisma.ProductOptionValueFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOptionValuePayload>[]
          }
          create: {
            args: Prisma.ProductOptionValueCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOptionValuePayload>
          }
          createMany: {
            args: Prisma.ProductOptionValueCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductOptionValueCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOptionValuePayload>[]
          }
          delete: {
            args: Prisma.ProductOptionValueDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOptionValuePayload>
          }
          update: {
            args: Prisma.ProductOptionValueUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOptionValuePayload>
          }
          deleteMany: {
            args: Prisma.ProductOptionValueDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductOptionValueUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.ProductOptionValueUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOptionValuePayload>[]
          }
          upsert: {
            args: Prisma.ProductOptionValueUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductOptionValuePayload>
          }
          aggregate: {
            args: Prisma.ProductOptionValueAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductOptionValue>
          }
          groupBy: {
            args: Prisma.ProductOptionValueGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductOptionValueGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductOptionValueCountArgs<ExtArgs>
            result: $Utils.Optional<ProductOptionValueCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UserCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.UserUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      task_dependencies: {
        payload: Prisma.$task_dependenciesPayload<ExtArgs>
        fields: Prisma.task_dependenciesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.task_dependenciesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$task_dependenciesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.task_dependenciesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$task_dependenciesPayload>
          }
          findFirst: {
            args: Prisma.task_dependenciesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$task_dependenciesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.task_dependenciesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$task_dependenciesPayload>
          }
          findMany: {
            args: Prisma.task_dependenciesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$task_dependenciesPayload>[]
          }
          create: {
            args: Prisma.task_dependenciesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$task_dependenciesPayload>
          }
          createMany: {
            args: Prisma.task_dependenciesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.task_dependenciesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$task_dependenciesPayload>[]
          }
          delete: {
            args: Prisma.task_dependenciesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$task_dependenciesPayload>
          }
          update: {
            args: Prisma.task_dependenciesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$task_dependenciesPayload>
          }
          deleteMany: {
            args: Prisma.task_dependenciesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.task_dependenciesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.task_dependenciesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$task_dependenciesPayload>[]
          }
          upsert: {
            args: Prisma.task_dependenciesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$task_dependenciesPayload>
          }
          aggregate: {
            args: Prisma.Task_dependenciesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTask_dependencies>
          }
          groupBy: {
            args: Prisma.task_dependenciesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Task_dependenciesGroupByOutputType>[]
          }
          count: {
            args: Prisma.task_dependenciesCountArgs<ExtArgs>
            result: $Utils.Optional<Task_dependenciesCountAggregateOutputType> | number
          }
        }
      }
      task_templates: {
        payload: Prisma.$task_templatesPayload<ExtArgs>
        fields: Prisma.task_templatesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.task_templatesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$task_templatesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.task_templatesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$task_templatesPayload>
          }
          findFirst: {
            args: Prisma.task_templatesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$task_templatesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.task_templatesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$task_templatesPayload>
          }
          findMany: {
            args: Prisma.task_templatesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$task_templatesPayload>[]
          }
          create: {
            args: Prisma.task_templatesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$task_templatesPayload>
          }
          createMany: {
            args: Prisma.task_templatesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.task_templatesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$task_templatesPayload>[]
          }
          delete: {
            args: Prisma.task_templatesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$task_templatesPayload>
          }
          update: {
            args: Prisma.task_templatesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$task_templatesPayload>
          }
          deleteMany: {
            args: Prisma.task_templatesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.task_templatesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.task_templatesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$task_templatesPayload>[]
          }
          upsert: {
            args: Prisma.task_templatesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$task_templatesPayload>
          }
          aggregate: {
            args: Prisma.Task_templatesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTask_templates>
          }
          groupBy: {
            args: Prisma.task_templatesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Task_templatesGroupByOutputType>[]
          }
          count: {
            args: Prisma.task_templatesCountArgs<ExtArgs>
            result: $Utils.Optional<Task_templatesCountAggregateOutputType> | number
          }
        }
      }
      tasks: {
        payload: Prisma.$tasksPayload<ExtArgs>
        fields: Prisma.tasksFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tasksFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tasksPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tasksFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tasksPayload>
          }
          findFirst: {
            args: Prisma.tasksFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tasksPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tasksFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tasksPayload>
          }
          findMany: {
            args: Prisma.tasksFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tasksPayload>[]
          }
          create: {
            args: Prisma.tasksCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tasksPayload>
          }
          createMany: {
            args: Prisma.tasksCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tasksCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tasksPayload>[]
          }
          delete: {
            args: Prisma.tasksDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tasksPayload>
          }
          update: {
            args: Prisma.tasksUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tasksPayload>
          }
          deleteMany: {
            args: Prisma.tasksDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tasksUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.tasksUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tasksPayload>[]
          }
          upsert: {
            args: Prisma.tasksUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tasksPayload>
          }
          aggregate: {
            args: Prisma.TasksAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTasks>
          }
          groupBy: {
            args: Prisma.tasksGroupByArgs<ExtArgs>
            result: $Utils.Optional<TasksGroupByOutputType>[]
          }
          count: {
            args: Prisma.tasksCountArgs<ExtArgs>
            result: $Utils.Optional<TasksCountAggregateOutputType> | number
          }
        }
      }
      user_roles: {
        payload: Prisma.$user_rolesPayload<ExtArgs>
        fields: Prisma.user_rolesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_rolesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_rolesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>
          }
          findFirst: {
            args: Prisma.user_rolesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_rolesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>
          }
          findMany: {
            args: Prisma.user_rolesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>[]
          }
          create: {
            args: Prisma.user_rolesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>
          }
          createMany: {
            args: Prisma.user_rolesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_rolesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>[]
          }
          delete: {
            args: Prisma.user_rolesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>
          }
          update: {
            args: Prisma.user_rolesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>
          }
          deleteMany: {
            args: Prisma.user_rolesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_rolesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_rolesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>[]
          }
          upsert: {
            args: Prisma.user_rolesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_rolesPayload>
          }
          aggregate: {
            args: Prisma.User_rolesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_roles>
          }
          groupBy: {
            args: Prisma.user_rolesGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_rolesGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_rolesCountArgs<ExtArgs>
            result: $Utils.Optional<User_rolesCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    account?: AccountOmit
    customer?: CustomerOmit
    event?: EventOmit
    heroSetting?: HeroSettingOmit
    order?: OrderOmit
    product?: ProductOmit
    staffInvitation?: StaffInvitationOmit
    productCategory?: ProductCategoryOmit
    eventItem?: EventItemOmit
    eventItemOption?: EventItemOptionOmit
    eventStatusHistory?: EventStatusHistoryOmit
    orderItem?: OrderItemOmit
    orderItemOption?: OrderItemOptionOmit
    orderStatusHistory?: OrderStatusHistoryOmit
    productOption?: ProductOptionOmit
    productOptionValue?: ProductOptionValueOmit
    user?: UserOmit
    task_dependencies?: task_dependenciesOmit
    task_templates?: task_templatesOmit
    tasks?: tasksOmit
    user_roles?: user_rolesOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CustomerCountOutputType
   */

  export type CustomerCountOutputType = {
    Event: number
    Order: number
  }

  export type CustomerCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Event?: boolean | CustomerCountOutputTypeCountEventArgs
    Order?: boolean | CustomerCountOutputTypeCountOrderArgs
  }

  // Custom InputTypes
  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerCountOutputType
     */
    select?: CustomerCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeCountEventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventWhereInput
  }

  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeCountOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }


  /**
   * Count Type EventCountOutputType
   */

  export type EventCountOutputType = {
    EventItem: number
    EventStatusHistory: number
    tasks: number
  }

  export type EventCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    EventItem?: boolean | EventCountOutputTypeCountEventItemArgs
    EventStatusHistory?: boolean | EventCountOutputTypeCountEventStatusHistoryArgs
    tasks?: boolean | EventCountOutputTypeCountTasksArgs
  }

  // Custom InputTypes
  /**
   * EventCountOutputType without action
   */
  export type EventCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventCountOutputType
     */
    select?: EventCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EventCountOutputType without action
   */
  export type EventCountOutputTypeCountEventItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventItemWhereInput
  }

  /**
   * EventCountOutputType without action
   */
  export type EventCountOutputTypeCountEventStatusHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventStatusHistoryWhereInput
  }

  /**
   * EventCountOutputType without action
   */
  export type EventCountOutputTypeCountTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tasksWhereInput
  }


  /**
   * Count Type OrderCountOutputType
   */

  export type OrderCountOutputType = {
    OrderItem: number
    OrderStatusHistory: number
    tasks: number
  }

  export type OrderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    OrderItem?: boolean | OrderCountOutputTypeCountOrderItemArgs
    OrderStatusHistory?: boolean | OrderCountOutputTypeCountOrderStatusHistoryArgs
    tasks?: boolean | OrderCountOutputTypeCountTasksArgs
  }

  // Custom InputTypes
  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCountOutputType
     */
    select?: OrderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountOrderItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountOrderStatusHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderStatusHistoryWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tasksWhereInput
  }


  /**
   * Count Type ProductCountOutputType
   */

  export type ProductCountOutputType = {
    EventItem: number
    OrderItem: number
    ProductOption: number
    task_templates: number
    tasks: number
  }

  export type ProductCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    EventItem?: boolean | ProductCountOutputTypeCountEventItemArgs
    OrderItem?: boolean | ProductCountOutputTypeCountOrderItemArgs
    ProductOption?: boolean | ProductCountOutputTypeCountProductOptionArgs
    task_templates?: boolean | ProductCountOutputTypeCountTask_templatesArgs
    tasks?: boolean | ProductCountOutputTypeCountTasksArgs
  }

  // Custom InputTypes
  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCountOutputType
     */
    select?: ProductCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountEventItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventItemWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountOrderItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountProductOptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductOptionWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountTask_templatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: task_templatesWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tasksWhereInput
  }


  /**
   * Count Type ProductCategoryCountOutputType
   */

  export type ProductCategoryCountOutputType = {
    Product: number
  }

  export type ProductCategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Product?: boolean | ProductCategoryCountOutputTypeCountProductArgs
  }

  // Custom InputTypes
  /**
   * ProductCategoryCountOutputType without action
   */
  export type ProductCategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategoryCountOutputType
     */
    select?: ProductCategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductCategoryCountOutputType without action
   */
  export type ProductCategoryCountOutputTypeCountProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }


  /**
   * Count Type EventItemCountOutputType
   */

  export type EventItemCountOutputType = {
    EventItemOption: number
  }

  export type EventItemCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    EventItemOption?: boolean | EventItemCountOutputTypeCountEventItemOptionArgs
  }

  // Custom InputTypes
  /**
   * EventItemCountOutputType without action
   */
  export type EventItemCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItemCountOutputType
     */
    select?: EventItemCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EventItemCountOutputType without action
   */
  export type EventItemCountOutputTypeCountEventItemOptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventItemOptionWhereInput
  }


  /**
   * Count Type OrderItemCountOutputType
   */

  export type OrderItemCountOutputType = {
    OrderItemOption: number
  }

  export type OrderItemCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    OrderItemOption?: boolean | OrderItemCountOutputTypeCountOrderItemOptionArgs
  }

  // Custom InputTypes
  /**
   * OrderItemCountOutputType without action
   */
  export type OrderItemCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemCountOutputType
     */
    select?: OrderItemCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrderItemCountOutputType without action
   */
  export type OrderItemCountOutputTypeCountOrderItemOptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemOptionWhereInput
  }


  /**
   * Count Type ProductOptionCountOutputType
   */

  export type ProductOptionCountOutputType = {
    EventItemOption: number
    OrderItemOption: number
    ProductOptionValue: number
  }

  export type ProductOptionCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    EventItemOption?: boolean | ProductOptionCountOutputTypeCountEventItemOptionArgs
    OrderItemOption?: boolean | ProductOptionCountOutputTypeCountOrderItemOptionArgs
    ProductOptionValue?: boolean | ProductOptionCountOutputTypeCountProductOptionValueArgs
  }

  // Custom InputTypes
  /**
   * ProductOptionCountOutputType without action
   */
  export type ProductOptionCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOptionCountOutputType
     */
    select?: ProductOptionCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductOptionCountOutputType without action
   */
  export type ProductOptionCountOutputTypeCountEventItemOptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventItemOptionWhereInput
  }

  /**
   * ProductOptionCountOutputType without action
   */
  export type ProductOptionCountOutputTypeCountOrderItemOptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemOptionWhereInput
  }

  /**
   * ProductOptionCountOutputType without action
   */
  export type ProductOptionCountOutputTypeCountProductOptionValueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductOptionValueWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    tasks: number
    user_roles: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tasks?: boolean | UserCountOutputTypeCountTasksArgs
    user_roles?: boolean | UserCountOutputTypeCountUser_rolesArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tasksWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUser_rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_rolesWhereInput
  }


  /**
   * Count Type Task_templatesCountOutputType
   */

  export type Task_templatesCountOutputType = {
    tasks: number
  }

  export type Task_templatesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tasks?: boolean | Task_templatesCountOutputTypeCountTasksArgs
  }

  // Custom InputTypes
  /**
   * Task_templatesCountOutputType without action
   */
  export type Task_templatesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Task_templatesCountOutputType
     */
    select?: Task_templatesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Task_templatesCountOutputType without action
   */
  export type Task_templatesCountOutputTypeCountTasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tasksWhereInput
  }


  /**
   * Count Type TasksCountOutputType
   */

  export type TasksCountOutputType = {
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks: number
    task_dependencies_task_dependencies_taskIdTotasks: number
  }

  export type TasksCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: boolean | TasksCountOutputTypeCountTask_dependencies_task_dependencies_dependsOnTaskIdTotasksArgs
    task_dependencies_task_dependencies_taskIdTotasks?: boolean | TasksCountOutputTypeCountTask_dependencies_task_dependencies_taskIdTotasksArgs
  }

  // Custom InputTypes
  /**
   * TasksCountOutputType without action
   */
  export type TasksCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TasksCountOutputType
     */
    select?: TasksCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TasksCountOutputType without action
   */
  export type TasksCountOutputTypeCountTask_dependencies_task_dependencies_dependsOnTaskIdTotasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: task_dependenciesWhereInput
  }

  /**
   * TasksCountOutputType without action
   */
  export type TasksCountOutputTypeCountTask_dependencies_task_dependencies_taskIdTotasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: task_dependenciesWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Account
   */

  export type AggregateAccount = {
    _count: AccountCountAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  export type AccountMinAggregateOutputType = {
    id: string | null
    email: string | null
    firstName: string | null
    lastName: string | null
    password: string | null
    role: string | null
    accessLevel: string | null
    active: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AccountMaxAggregateOutputType = {
    id: string | null
    email: string | null
    firstName: string | null
    lastName: string | null
    password: string | null
    role: string | null
    accessLevel: string | null
    active: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type AccountCountAggregateOutputType = {
    id: number
    email: number
    firstName: number
    lastName: number
    password: number
    role: number
    accessLevel: number
    active: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type AccountMinAggregateInputType = {
    id?: true
    email?: true
    firstName?: true
    lastName?: true
    password?: true
    role?: true
    accessLevel?: true
    active?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AccountMaxAggregateInputType = {
    id?: true
    email?: true
    firstName?: true
    lastName?: true
    password?: true
    role?: true
    accessLevel?: true
    active?: true
    createdAt?: true
    updatedAt?: true
  }

  export type AccountCountAggregateInputType = {
    id?: true
    email?: true
    firstName?: true
    lastName?: true
    password?: true
    role?: true
    accessLevel?: true
    active?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type AccountAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Account to aggregate.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Accounts
    **/
    _count?: true | AccountCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AccountMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AccountMaxAggregateInputType
  }

  export type GetAccountAggregateType<T extends AccountAggregateArgs> = {
        [P in keyof T & keyof AggregateAccount]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAccount[P]>
      : GetScalarType<T[P], AggregateAccount[P]>
  }




  export type AccountGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AccountWhereInput
    orderBy?: AccountOrderByWithAggregationInput | AccountOrderByWithAggregationInput[]
    by: AccountScalarFieldEnum[] | AccountScalarFieldEnum
    having?: AccountScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AccountCountAggregateInputType | true
    _min?: AccountMinAggregateInputType
    _max?: AccountMaxAggregateInputType
  }

  export type AccountGroupByOutputType = {
    id: string
    email: string
    firstName: string
    lastName: string
    password: string
    role: string
    accessLevel: string
    active: boolean
    createdAt: Date
    updatedAt: Date
    _count: AccountCountAggregateOutputType | null
    _min: AccountMinAggregateOutputType | null
    _max: AccountMaxAggregateOutputType | null
  }

  type GetAccountGroupByPayload<T extends AccountGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AccountGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AccountGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AccountGroupByOutputType[P]>
            : GetScalarType<T[P], AccountGroupByOutputType[P]>
        }
      >
    >


  export type AccountSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    password?: boolean
    role?: boolean
    accessLevel?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["account"]>

  export type AccountSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    password?: boolean
    role?: boolean
    accessLevel?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["account"]>

  export type AccountSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    password?: boolean
    role?: boolean
    accessLevel?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["account"]>

  export type AccountSelectScalar = {
    id?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    password?: boolean
    role?: boolean
    accessLevel?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type AccountOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "firstName" | "lastName" | "password" | "role" | "accessLevel" | "active" | "createdAt" | "updatedAt", ExtArgs["result"]["account"]>

  export type $AccountPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Account"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      firstName: string
      lastName: string
      password: string
      role: string
      accessLevel: string
      active: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["account"]>
    composites: {}
  }

  type AccountGetPayload<S extends boolean | null | undefined | AccountDefaultArgs> = $Result.GetResult<Prisma.$AccountPayload, S>

  type AccountCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<AccountFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: AccountCountAggregateInputType | true
    }

  export interface AccountDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Account'], meta: { name: 'Account' } }
    /**
     * Find zero or one Account that matches the filter.
     * @param {AccountFindUniqueArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AccountFindUniqueArgs>(args: SelectSubset<T, AccountFindUniqueArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Account that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {AccountFindUniqueOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AccountFindUniqueOrThrowArgs>(args: SelectSubset<T, AccountFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AccountFindFirstArgs>(args?: SelectSubset<T, AccountFindFirstArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Account that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindFirstOrThrowArgs} args - Arguments to find a Account
     * @example
     * // Get one Account
     * const account = await prisma.account.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AccountFindFirstOrThrowArgs>(args?: SelectSubset<T, AccountFindFirstOrThrowArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Accounts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Accounts
     * const accounts = await prisma.account.findMany()
     * 
     * // Get first 10 Accounts
     * const accounts = await prisma.account.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const accountWithIdOnly = await prisma.account.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AccountFindManyArgs>(args?: SelectSubset<T, AccountFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Account.
     * @param {AccountCreateArgs} args - Arguments to create a Account.
     * @example
     * // Create one Account
     * const Account = await prisma.account.create({
     *   data: {
     *     // ... data to create a Account
     *   }
     * })
     * 
     */
    create<T extends AccountCreateArgs>(args: SelectSubset<T, AccountCreateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Accounts.
     * @param {AccountCreateManyArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AccountCreateManyArgs>(args?: SelectSubset<T, AccountCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Accounts and returns the data saved in the database.
     * @param {AccountCreateManyAndReturnArgs} args - Arguments to create many Accounts.
     * @example
     * // Create many Accounts
     * const account = await prisma.account.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Accounts and only return the `id`
     * const accountWithIdOnly = await prisma.account.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends AccountCreateManyAndReturnArgs>(args?: SelectSubset<T, AccountCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Account.
     * @param {AccountDeleteArgs} args - Arguments to delete one Account.
     * @example
     * // Delete one Account
     * const Account = await prisma.account.delete({
     *   where: {
     *     // ... filter to delete one Account
     *   }
     * })
     * 
     */
    delete<T extends AccountDeleteArgs>(args: SelectSubset<T, AccountDeleteArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Account.
     * @param {AccountUpdateArgs} args - Arguments to update one Account.
     * @example
     * // Update one Account
     * const account = await prisma.account.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AccountUpdateArgs>(args: SelectSubset<T, AccountUpdateArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Accounts.
     * @param {AccountDeleteManyArgs} args - Arguments to filter Accounts to delete.
     * @example
     * // Delete a few Accounts
     * const { count } = await prisma.account.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AccountDeleteManyArgs>(args?: SelectSubset<T, AccountDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AccountUpdateManyArgs>(args: SelectSubset<T, AccountUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Accounts and returns the data updated in the database.
     * @param {AccountUpdateManyAndReturnArgs} args - Arguments to update many Accounts.
     * @example
     * // Update many Accounts
     * const account = await prisma.account.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Accounts and only return the `id`
     * const accountWithIdOnly = await prisma.account.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends AccountUpdateManyAndReturnArgs>(args: SelectSubset<T, AccountUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Account.
     * @param {AccountUpsertArgs} args - Arguments to update or create a Account.
     * @example
     * // Update or create a Account
     * const account = await prisma.account.upsert({
     *   create: {
     *     // ... data to create a Account
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Account we want to update
     *   }
     * })
     */
    upsert<T extends AccountUpsertArgs>(args: SelectSubset<T, AccountUpsertArgs<ExtArgs>>): Prisma__AccountClient<$Result.GetResult<Prisma.$AccountPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Accounts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountCountArgs} args - Arguments to filter Accounts to count.
     * @example
     * // Count the number of Accounts
     * const count = await prisma.account.count({
     *   where: {
     *     // ... the filter for the Accounts we want to count
     *   }
     * })
    **/
    count<T extends AccountCountArgs>(
      args?: Subset<T, AccountCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AccountCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AccountAggregateArgs>(args: Subset<T, AccountAggregateArgs>): Prisma.PrismaPromise<GetAccountAggregateType<T>>

    /**
     * Group by Account.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AccountGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AccountGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AccountGroupByArgs['orderBy'] }
        : { orderBy?: AccountGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AccountGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAccountGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Account model
   */
  readonly fields: AccountFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Account.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AccountClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Account model
   */
  interface AccountFieldRefs {
    readonly id: FieldRef<"Account", 'String'>
    readonly email: FieldRef<"Account", 'String'>
    readonly firstName: FieldRef<"Account", 'String'>
    readonly lastName: FieldRef<"Account", 'String'>
    readonly password: FieldRef<"Account", 'String'>
    readonly role: FieldRef<"Account", 'String'>
    readonly accessLevel: FieldRef<"Account", 'String'>
    readonly active: FieldRef<"Account", 'Boolean'>
    readonly createdAt: FieldRef<"Account", 'DateTime'>
    readonly updatedAt: FieldRef<"Account", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Account findUnique
   */
  export type AccountFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findUniqueOrThrow
   */
  export type AccountFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account findFirst
   */
  export type AccountFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findFirstOrThrow
   */
  export type AccountFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Filter, which Account to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Accounts.
     */
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account findMany
   */
  export type AccountFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Filter, which Accounts to fetch.
     */
    where?: AccountWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Accounts to fetch.
     */
    orderBy?: AccountOrderByWithRelationInput | AccountOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Accounts.
     */
    cursor?: AccountWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Accounts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Accounts.
     */
    skip?: number
    distinct?: AccountScalarFieldEnum | AccountScalarFieldEnum[]
  }

  /**
   * Account create
   */
  export type AccountCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data needed to create a Account.
     */
    data: XOR<AccountCreateInput, AccountUncheckedCreateInput>
  }

  /**
   * Account createMany
   */
  export type AccountCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Account createManyAndReturn
   */
  export type AccountCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data used to create many Accounts.
     */
    data: AccountCreateManyInput | AccountCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Account update
   */
  export type AccountUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data needed to update a Account.
     */
    data: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
    /**
     * Choose, which Account to update.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account updateMany
   */
  export type AccountUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to update.
     */
    limit?: number
  }

  /**
   * Account updateManyAndReturn
   */
  export type AccountUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The data used to update Accounts.
     */
    data: XOR<AccountUpdateManyMutationInput, AccountUncheckedUpdateManyInput>
    /**
     * Filter which Accounts to update
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to update.
     */
    limit?: number
  }

  /**
   * Account upsert
   */
  export type AccountUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * The filter to search for the Account to update in case it exists.
     */
    where: AccountWhereUniqueInput
    /**
     * In case the Account found by the `where` argument doesn't exist, create a new Account with this data.
     */
    create: XOR<AccountCreateInput, AccountUncheckedCreateInput>
    /**
     * In case the Account was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AccountUpdateInput, AccountUncheckedUpdateInput>
  }

  /**
   * Account delete
   */
  export type AccountDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
    /**
     * Filter which Account to delete.
     */
    where: AccountWhereUniqueInput
  }

  /**
   * Account deleteMany
   */
  export type AccountDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Accounts to delete
     */
    where?: AccountWhereInput
    /**
     * Limit how many Accounts to delete.
     */
    limit?: number
  }

  /**
   * Account without action
   */
  export type AccountDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Account
     */
    select?: AccountSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Account
     */
    omit?: AccountOmit<ExtArgs> | null
  }


  /**
   * Model Customer
   */

  export type AggregateCustomer = {
    _count: CustomerCountAggregateOutputType | null
    _min: CustomerMinAggregateOutputType | null
    _max: CustomerMaxAggregateOutputType | null
  }

  export type CustomerMinAggregateOutputType = {
    id: string | null
    email: string | null
    firstName: string | null
    lastName: string | null
    phone: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CustomerMaxAggregateOutputType = {
    id: string | null
    email: string | null
    firstName: string | null
    lastName: string | null
    phone: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type CustomerCountAggregateOutputType = {
    id: number
    email: number
    firstName: number
    lastName: number
    phone: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type CustomerMinAggregateInputType = {
    id?: true
    email?: true
    firstName?: true
    lastName?: true
    phone?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CustomerMaxAggregateInputType = {
    id?: true
    email?: true
    firstName?: true
    lastName?: true
    phone?: true
    createdAt?: true
    updatedAt?: true
  }

  export type CustomerCountAggregateInputType = {
    id?: true
    email?: true
    firstName?: true
    lastName?: true
    phone?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type CustomerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Customer to aggregate.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Customers
    **/
    _count?: true | CustomerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CustomerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CustomerMaxAggregateInputType
  }

  export type GetCustomerAggregateType<T extends CustomerAggregateArgs> = {
        [P in keyof T & keyof AggregateCustomer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCustomer[P]>
      : GetScalarType<T[P], AggregateCustomer[P]>
  }




  export type CustomerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerWhereInput
    orderBy?: CustomerOrderByWithAggregationInput | CustomerOrderByWithAggregationInput[]
    by: CustomerScalarFieldEnum[] | CustomerScalarFieldEnum
    having?: CustomerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CustomerCountAggregateInputType | true
    _min?: CustomerMinAggregateInputType
    _max?: CustomerMaxAggregateInputType
  }

  export type CustomerGroupByOutputType = {
    id: string
    email: string
    firstName: string
    lastName: string
    phone: string | null
    createdAt: Date
    updatedAt: Date
    _count: CustomerCountAggregateOutputType | null
    _min: CustomerMinAggregateOutputType | null
    _max: CustomerMaxAggregateOutputType | null
  }

  type GetCustomerGroupByPayload<T extends CustomerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CustomerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CustomerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CustomerGroupByOutputType[P]>
            : GetScalarType<T[P], CustomerGroupByOutputType[P]>
        }
      >
    >


  export type CustomerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Event?: boolean | Customer$EventArgs<ExtArgs>
    Order?: boolean | Customer$OrderArgs<ExtArgs>
    _count?: boolean | CustomerCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customer"]>

  export type CustomerSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["customer"]>

  export type CustomerSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["customer"]>

  export type CustomerSelectScalar = {
    id?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type CustomerOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "firstName" | "lastName" | "phone" | "createdAt" | "updatedAt", ExtArgs["result"]["customer"]>
  export type CustomerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Event?: boolean | Customer$EventArgs<ExtArgs>
    Order?: boolean | Customer$OrderArgs<ExtArgs>
    _count?: boolean | CustomerCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type CustomerIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type CustomerIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $CustomerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Customer"
    objects: {
      Event: Prisma.$EventPayload<ExtArgs>[]
      Order: Prisma.$OrderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      firstName: string
      lastName: string
      phone: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["customer"]>
    composites: {}
  }

  type CustomerGetPayload<S extends boolean | null | undefined | CustomerDefaultArgs> = $Result.GetResult<Prisma.$CustomerPayload, S>

  type CustomerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<CustomerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: CustomerCountAggregateInputType | true
    }

  export interface CustomerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Customer'], meta: { name: 'Customer' } }
    /**
     * Find zero or one Customer that matches the filter.
     * @param {CustomerFindUniqueArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CustomerFindUniqueArgs>(args: SelectSubset<T, CustomerFindUniqueArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Customer that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {CustomerFindUniqueOrThrowArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CustomerFindUniqueOrThrowArgs>(args: SelectSubset<T, CustomerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Customer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerFindFirstArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CustomerFindFirstArgs>(args?: SelectSubset<T, CustomerFindFirstArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Customer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerFindFirstOrThrowArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CustomerFindFirstOrThrowArgs>(args?: SelectSubset<T, CustomerFindFirstOrThrowArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Customers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Customers
     * const customers = await prisma.customer.findMany()
     * 
     * // Get first 10 Customers
     * const customers = await prisma.customer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const customerWithIdOnly = await prisma.customer.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CustomerFindManyArgs>(args?: SelectSubset<T, CustomerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Customer.
     * @param {CustomerCreateArgs} args - Arguments to create a Customer.
     * @example
     * // Create one Customer
     * const Customer = await prisma.customer.create({
     *   data: {
     *     // ... data to create a Customer
     *   }
     * })
     * 
     */
    create<T extends CustomerCreateArgs>(args: SelectSubset<T, CustomerCreateArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Customers.
     * @param {CustomerCreateManyArgs} args - Arguments to create many Customers.
     * @example
     * // Create many Customers
     * const customer = await prisma.customer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CustomerCreateManyArgs>(args?: SelectSubset<T, CustomerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Customers and returns the data saved in the database.
     * @param {CustomerCreateManyAndReturnArgs} args - Arguments to create many Customers.
     * @example
     * // Create many Customers
     * const customer = await prisma.customer.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Customers and only return the `id`
     * const customerWithIdOnly = await prisma.customer.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends CustomerCreateManyAndReturnArgs>(args?: SelectSubset<T, CustomerCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Customer.
     * @param {CustomerDeleteArgs} args - Arguments to delete one Customer.
     * @example
     * // Delete one Customer
     * const Customer = await prisma.customer.delete({
     *   where: {
     *     // ... filter to delete one Customer
     *   }
     * })
     * 
     */
    delete<T extends CustomerDeleteArgs>(args: SelectSubset<T, CustomerDeleteArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Customer.
     * @param {CustomerUpdateArgs} args - Arguments to update one Customer.
     * @example
     * // Update one Customer
     * const customer = await prisma.customer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CustomerUpdateArgs>(args: SelectSubset<T, CustomerUpdateArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Customers.
     * @param {CustomerDeleteManyArgs} args - Arguments to filter Customers to delete.
     * @example
     * // Delete a few Customers
     * const { count } = await prisma.customer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CustomerDeleteManyArgs>(args?: SelectSubset<T, CustomerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Customers
     * const customer = await prisma.customer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CustomerUpdateManyArgs>(args: SelectSubset<T, CustomerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Customers and returns the data updated in the database.
     * @param {CustomerUpdateManyAndReturnArgs} args - Arguments to update many Customers.
     * @example
     * // Update many Customers
     * const customer = await prisma.customer.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Customers and only return the `id`
     * const customerWithIdOnly = await prisma.customer.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends CustomerUpdateManyAndReturnArgs>(args: SelectSubset<T, CustomerUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Customer.
     * @param {CustomerUpsertArgs} args - Arguments to update or create a Customer.
     * @example
     * // Update or create a Customer
     * const customer = await prisma.customer.upsert({
     *   create: {
     *     // ... data to create a Customer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Customer we want to update
     *   }
     * })
     */
    upsert<T extends CustomerUpsertArgs>(args: SelectSubset<T, CustomerUpsertArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerCountArgs} args - Arguments to filter Customers to count.
     * @example
     * // Count the number of Customers
     * const count = await prisma.customer.count({
     *   where: {
     *     // ... the filter for the Customers we want to count
     *   }
     * })
    **/
    count<T extends CustomerCountArgs>(
      args?: Subset<T, CustomerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CustomerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Customer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CustomerAggregateArgs>(args: Subset<T, CustomerAggregateArgs>): Prisma.PrismaPromise<GetCustomerAggregateType<T>>

    /**
     * Group by Customer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CustomerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CustomerGroupByArgs['orderBy'] }
        : { orderBy?: CustomerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CustomerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCustomerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Customer model
   */
  readonly fields: CustomerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Customer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CustomerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Event<T extends Customer$EventArgs<ExtArgs> = {}>(args?: Subset<T, Customer$EventArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Order<T extends Customer$OrderArgs<ExtArgs> = {}>(args?: Subset<T, Customer$OrderArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Customer model
   */
  interface CustomerFieldRefs {
    readonly id: FieldRef<"Customer", 'String'>
    readonly email: FieldRef<"Customer", 'String'>
    readonly firstName: FieldRef<"Customer", 'String'>
    readonly lastName: FieldRef<"Customer", 'String'>
    readonly phone: FieldRef<"Customer", 'String'>
    readonly createdAt: FieldRef<"Customer", 'DateTime'>
    readonly updatedAt: FieldRef<"Customer", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Customer findUnique
   */
  export type CustomerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer findUniqueOrThrow
   */
  export type CustomerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer findFirst
   */
  export type CustomerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Customers.
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Customers.
     */
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Customer findFirstOrThrow
   */
  export type CustomerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Customers.
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Customers.
     */
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Customer findMany
   */
  export type CustomerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customers to fetch.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Customers.
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Customer create
   */
  export type CustomerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * The data needed to create a Customer.
     */
    data: XOR<CustomerCreateInput, CustomerUncheckedCreateInput>
  }

  /**
   * Customer createMany
   */
  export type CustomerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Customers.
     */
    data: CustomerCreateManyInput | CustomerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Customer createManyAndReturn
   */
  export type CustomerCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * The data used to create many Customers.
     */
    data: CustomerCreateManyInput | CustomerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Customer update
   */
  export type CustomerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * The data needed to update a Customer.
     */
    data: XOR<CustomerUpdateInput, CustomerUncheckedUpdateInput>
    /**
     * Choose, which Customer to update.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer updateMany
   */
  export type CustomerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Customers.
     */
    data: XOR<CustomerUpdateManyMutationInput, CustomerUncheckedUpdateManyInput>
    /**
     * Filter which Customers to update
     */
    where?: CustomerWhereInput
    /**
     * Limit how many Customers to update.
     */
    limit?: number
  }

  /**
   * Customer updateManyAndReturn
   */
  export type CustomerUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * The data used to update Customers.
     */
    data: XOR<CustomerUpdateManyMutationInput, CustomerUncheckedUpdateManyInput>
    /**
     * Filter which Customers to update
     */
    where?: CustomerWhereInput
    /**
     * Limit how many Customers to update.
     */
    limit?: number
  }

  /**
   * Customer upsert
   */
  export type CustomerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * The filter to search for the Customer to update in case it exists.
     */
    where: CustomerWhereUniqueInput
    /**
     * In case the Customer found by the `where` argument doesn't exist, create a new Customer with this data.
     */
    create: XOR<CustomerCreateInput, CustomerUncheckedCreateInput>
    /**
     * In case the Customer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CustomerUpdateInput, CustomerUncheckedUpdateInput>
  }

  /**
   * Customer delete
   */
  export type CustomerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter which Customer to delete.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer deleteMany
   */
  export type CustomerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Customers to delete
     */
    where?: CustomerWhereInput
    /**
     * Limit how many Customers to delete.
     */
    limit?: number
  }

  /**
   * Customer.Event
   */
  export type Customer$EventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    where?: EventWhereInput
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    cursor?: EventWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * Customer.Order
   */
  export type Customer$OrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Customer without action
   */
  export type CustomerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
  }


  /**
   * Model Event
   */

  export type AggregateEvent = {
    _count: EventCountAggregateOutputType | null
    _avg: EventAvgAggregateOutputType | null
    _sum: EventSumAggregateOutputType | null
    _min: EventMinAggregateOutputType | null
    _max: EventMaxAggregateOutputType | null
  }

  export type EventAvgAggregateOutputType = {
    depositAmount: number | null
    totalAmount: number | null
  }

  export type EventSumAggregateOutputType = {
    depositAmount: number | null
    totalAmount: number | null
  }

  export type EventMinAggregateOutputType = {
    id: string | null
    title: string | null
    description: string | null
    location: string | null
    startDate: Date | null
    endDate: Date | null
    customerId: string | null
    status: string | null
    staffNotes: string | null
    assignedStaffId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    customerNotes: string | null
    depositAmount: number | null
    depositPaid: boolean | null
    endTime: string | null
    finalPaymentPaid: boolean | null
    reviewedAt: Date | null
    reviewedBy: string | null
    stage: string | null
    startTime: string | null
    totalAmount: number | null
  }

  export type EventMaxAggregateOutputType = {
    id: string | null
    title: string | null
    description: string | null
    location: string | null
    startDate: Date | null
    endDate: Date | null
    customerId: string | null
    status: string | null
    staffNotes: string | null
    assignedStaffId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    customerNotes: string | null
    depositAmount: number | null
    depositPaid: boolean | null
    endTime: string | null
    finalPaymentPaid: boolean | null
    reviewedAt: Date | null
    reviewedBy: string | null
    stage: string | null
    startTime: string | null
    totalAmount: number | null
  }

  export type EventCountAggregateOutputType = {
    id: number
    title: number
    description: number
    location: number
    startDate: number
    endDate: number
    customerId: number
    status: number
    staffNotes: number
    assignedStaffId: number
    createdAt: number
    updatedAt: number
    customerNotes: number
    depositAmount: number
    depositPaid: number
    endTime: number
    finalPaymentPaid: number
    reviewedAt: number
    reviewedBy: number
    stage: number
    startTime: number
    totalAmount: number
    _all: number
  }


  export type EventAvgAggregateInputType = {
    depositAmount?: true
    totalAmount?: true
  }

  export type EventSumAggregateInputType = {
    depositAmount?: true
    totalAmount?: true
  }

  export type EventMinAggregateInputType = {
    id?: true
    title?: true
    description?: true
    location?: true
    startDate?: true
    endDate?: true
    customerId?: true
    status?: true
    staffNotes?: true
    assignedStaffId?: true
    createdAt?: true
    updatedAt?: true
    customerNotes?: true
    depositAmount?: true
    depositPaid?: true
    endTime?: true
    finalPaymentPaid?: true
    reviewedAt?: true
    reviewedBy?: true
    stage?: true
    startTime?: true
    totalAmount?: true
  }

  export type EventMaxAggregateInputType = {
    id?: true
    title?: true
    description?: true
    location?: true
    startDate?: true
    endDate?: true
    customerId?: true
    status?: true
    staffNotes?: true
    assignedStaffId?: true
    createdAt?: true
    updatedAt?: true
    customerNotes?: true
    depositAmount?: true
    depositPaid?: true
    endTime?: true
    finalPaymentPaid?: true
    reviewedAt?: true
    reviewedBy?: true
    stage?: true
    startTime?: true
    totalAmount?: true
  }

  export type EventCountAggregateInputType = {
    id?: true
    title?: true
    description?: true
    location?: true
    startDate?: true
    endDate?: true
    customerId?: true
    status?: true
    staffNotes?: true
    assignedStaffId?: true
    createdAt?: true
    updatedAt?: true
    customerNotes?: true
    depositAmount?: true
    depositPaid?: true
    endTime?: true
    finalPaymentPaid?: true
    reviewedAt?: true
    reviewedBy?: true
    stage?: true
    startTime?: true
    totalAmount?: true
    _all?: true
  }

  export type EventAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Event to aggregate.
     */
    where?: EventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Events to fetch.
     */
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Events
    **/
    _count?: true | EventCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EventAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EventSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EventMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EventMaxAggregateInputType
  }

  export type GetEventAggregateType<T extends EventAggregateArgs> = {
        [P in keyof T & keyof AggregateEvent]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEvent[P]>
      : GetScalarType<T[P], AggregateEvent[P]>
  }




  export type EventGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventWhereInput
    orderBy?: EventOrderByWithAggregationInput | EventOrderByWithAggregationInput[]
    by: EventScalarFieldEnum[] | EventScalarFieldEnum
    having?: EventScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EventCountAggregateInputType | true
    _avg?: EventAvgAggregateInputType
    _sum?: EventSumAggregateInputType
    _min?: EventMinAggregateInputType
    _max?: EventMaxAggregateInputType
  }

  export type EventGroupByOutputType = {
    id: string
    title: string
    description: string | null
    location: string
    startDate: Date
    endDate: Date | null
    customerId: string | null
    status: string
    staffNotes: string | null
    assignedStaffId: string | null
    createdAt: Date
    updatedAt: Date
    customerNotes: string | null
    depositAmount: number | null
    depositPaid: boolean
    endTime: string | null
    finalPaymentPaid: boolean
    reviewedAt: Date | null
    reviewedBy: string | null
    stage: string
    startTime: string
    totalAmount: number | null
    _count: EventCountAggregateOutputType | null
    _avg: EventAvgAggregateOutputType | null
    _sum: EventSumAggregateOutputType | null
    _min: EventMinAggregateOutputType | null
    _max: EventMaxAggregateOutputType | null
  }

  type GetEventGroupByPayload<T extends EventGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EventGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EventGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EventGroupByOutputType[P]>
            : GetScalarType<T[P], EventGroupByOutputType[P]>
        }
      >
    >


  export type EventSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    location?: boolean
    startDate?: boolean
    endDate?: boolean
    customerId?: boolean
    status?: boolean
    staffNotes?: boolean
    assignedStaffId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    customerNotes?: boolean
    depositAmount?: boolean
    depositPaid?: boolean
    endTime?: boolean
    finalPaymentPaid?: boolean
    reviewedAt?: boolean
    reviewedBy?: boolean
    stage?: boolean
    startTime?: boolean
    totalAmount?: boolean
    Customer?: boolean | Event$CustomerArgs<ExtArgs>
    EventItem?: boolean | Event$EventItemArgs<ExtArgs>
    EventStatusHistory?: boolean | Event$EventStatusHistoryArgs<ExtArgs>
    tasks?: boolean | Event$tasksArgs<ExtArgs>
    _count?: boolean | EventCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["event"]>

  export type EventSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    location?: boolean
    startDate?: boolean
    endDate?: boolean
    customerId?: boolean
    status?: boolean
    staffNotes?: boolean
    assignedStaffId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    customerNotes?: boolean
    depositAmount?: boolean
    depositPaid?: boolean
    endTime?: boolean
    finalPaymentPaid?: boolean
    reviewedAt?: boolean
    reviewedBy?: boolean
    stage?: boolean
    startTime?: boolean
    totalAmount?: boolean
    Customer?: boolean | Event$CustomerArgs<ExtArgs>
  }, ExtArgs["result"]["event"]>

  export type EventSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    description?: boolean
    location?: boolean
    startDate?: boolean
    endDate?: boolean
    customerId?: boolean
    status?: boolean
    staffNotes?: boolean
    assignedStaffId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    customerNotes?: boolean
    depositAmount?: boolean
    depositPaid?: boolean
    endTime?: boolean
    finalPaymentPaid?: boolean
    reviewedAt?: boolean
    reviewedBy?: boolean
    stage?: boolean
    startTime?: boolean
    totalAmount?: boolean
    Customer?: boolean | Event$CustomerArgs<ExtArgs>
  }, ExtArgs["result"]["event"]>

  export type EventSelectScalar = {
    id?: boolean
    title?: boolean
    description?: boolean
    location?: boolean
    startDate?: boolean
    endDate?: boolean
    customerId?: boolean
    status?: boolean
    staffNotes?: boolean
    assignedStaffId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    customerNotes?: boolean
    depositAmount?: boolean
    depositPaid?: boolean
    endTime?: boolean
    finalPaymentPaid?: boolean
    reviewedAt?: boolean
    reviewedBy?: boolean
    stage?: boolean
    startTime?: boolean
    totalAmount?: boolean
  }

  export type EventOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "description" | "location" | "startDate" | "endDate" | "customerId" | "status" | "staffNotes" | "assignedStaffId" | "createdAt" | "updatedAt" | "customerNotes" | "depositAmount" | "depositPaid" | "endTime" | "finalPaymentPaid" | "reviewedAt" | "reviewedBy" | "stage" | "startTime" | "totalAmount", ExtArgs["result"]["event"]>
  export type EventInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Customer?: boolean | Event$CustomerArgs<ExtArgs>
    EventItem?: boolean | Event$EventItemArgs<ExtArgs>
    EventStatusHistory?: boolean | Event$EventStatusHistoryArgs<ExtArgs>
    tasks?: boolean | Event$tasksArgs<ExtArgs>
    _count?: boolean | EventCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EventIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Customer?: boolean | Event$CustomerArgs<ExtArgs>
  }
  export type EventIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Customer?: boolean | Event$CustomerArgs<ExtArgs>
  }

  export type $EventPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Event"
    objects: {
      Customer: Prisma.$CustomerPayload<ExtArgs> | null
      EventItem: Prisma.$EventItemPayload<ExtArgs>[]
      EventStatusHistory: Prisma.$EventStatusHistoryPayload<ExtArgs>[]
      tasks: Prisma.$tasksPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      description: string | null
      location: string
      startDate: Date
      endDate: Date | null
      customerId: string | null
      status: string
      staffNotes: string | null
      assignedStaffId: string | null
      createdAt: Date
      updatedAt: Date
      customerNotes: string | null
      depositAmount: number | null
      depositPaid: boolean
      endTime: string | null
      finalPaymentPaid: boolean
      reviewedAt: Date | null
      reviewedBy: string | null
      stage: string
      startTime: string
      totalAmount: number | null
    }, ExtArgs["result"]["event"]>
    composites: {}
  }

  type EventGetPayload<S extends boolean | null | undefined | EventDefaultArgs> = $Result.GetResult<Prisma.$EventPayload, S>

  type EventCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EventFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EventCountAggregateInputType | true
    }

  export interface EventDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Event'], meta: { name: 'Event' } }
    /**
     * Find zero or one Event that matches the filter.
     * @param {EventFindUniqueArgs} args - Arguments to find a Event
     * @example
     * // Get one Event
     * const event = await prisma.event.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EventFindUniqueArgs>(args: SelectSubset<T, EventFindUniqueArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Event that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EventFindUniqueOrThrowArgs} args - Arguments to find a Event
     * @example
     * // Get one Event
     * const event = await prisma.event.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EventFindUniqueOrThrowArgs>(args: SelectSubset<T, EventFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Event that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventFindFirstArgs} args - Arguments to find a Event
     * @example
     * // Get one Event
     * const event = await prisma.event.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EventFindFirstArgs>(args?: SelectSubset<T, EventFindFirstArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Event that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventFindFirstOrThrowArgs} args - Arguments to find a Event
     * @example
     * // Get one Event
     * const event = await prisma.event.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EventFindFirstOrThrowArgs>(args?: SelectSubset<T, EventFindFirstOrThrowArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Events
     * const events = await prisma.event.findMany()
     * 
     * // Get first 10 Events
     * const events = await prisma.event.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eventWithIdOnly = await prisma.event.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EventFindManyArgs>(args?: SelectSubset<T, EventFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Event.
     * @param {EventCreateArgs} args - Arguments to create a Event.
     * @example
     * // Create one Event
     * const Event = await prisma.event.create({
     *   data: {
     *     // ... data to create a Event
     *   }
     * })
     * 
     */
    create<T extends EventCreateArgs>(args: SelectSubset<T, EventCreateArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Events.
     * @param {EventCreateManyArgs} args - Arguments to create many Events.
     * @example
     * // Create many Events
     * const event = await prisma.event.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EventCreateManyArgs>(args?: SelectSubset<T, EventCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Events and returns the data saved in the database.
     * @param {EventCreateManyAndReturnArgs} args - Arguments to create many Events.
     * @example
     * // Create many Events
     * const event = await prisma.event.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Events and only return the `id`
     * const eventWithIdOnly = await prisma.event.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EventCreateManyAndReturnArgs>(args?: SelectSubset<T, EventCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Event.
     * @param {EventDeleteArgs} args - Arguments to delete one Event.
     * @example
     * // Delete one Event
     * const Event = await prisma.event.delete({
     *   where: {
     *     // ... filter to delete one Event
     *   }
     * })
     * 
     */
    delete<T extends EventDeleteArgs>(args: SelectSubset<T, EventDeleteArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Event.
     * @param {EventUpdateArgs} args - Arguments to update one Event.
     * @example
     * // Update one Event
     * const event = await prisma.event.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EventUpdateArgs>(args: SelectSubset<T, EventUpdateArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Events.
     * @param {EventDeleteManyArgs} args - Arguments to filter Events to delete.
     * @example
     * // Delete a few Events
     * const { count } = await prisma.event.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EventDeleteManyArgs>(args?: SelectSubset<T, EventDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Events
     * const event = await prisma.event.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EventUpdateManyArgs>(args: SelectSubset<T, EventUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Events and returns the data updated in the database.
     * @param {EventUpdateManyAndReturnArgs} args - Arguments to update many Events.
     * @example
     * // Update many Events
     * const event = await prisma.event.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Events and only return the `id`
     * const eventWithIdOnly = await prisma.event.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EventUpdateManyAndReturnArgs>(args: SelectSubset<T, EventUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Event.
     * @param {EventUpsertArgs} args - Arguments to update or create a Event.
     * @example
     * // Update or create a Event
     * const event = await prisma.event.upsert({
     *   create: {
     *     // ... data to create a Event
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Event we want to update
     *   }
     * })
     */
    upsert<T extends EventUpsertArgs>(args: SelectSubset<T, EventUpsertArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventCountArgs} args - Arguments to filter Events to count.
     * @example
     * // Count the number of Events
     * const count = await prisma.event.count({
     *   where: {
     *     // ... the filter for the Events we want to count
     *   }
     * })
    **/
    count<T extends EventCountArgs>(
      args?: Subset<T, EventCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EventCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EventAggregateArgs>(args: Subset<T, EventAggregateArgs>): Prisma.PrismaPromise<GetEventAggregateType<T>>

    /**
     * Group by Event.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EventGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EventGroupByArgs['orderBy'] }
        : { orderBy?: EventGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EventGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEventGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Event model
   */
  readonly fields: EventFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Event.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EventClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Customer<T extends Event$CustomerArgs<ExtArgs> = {}>(args?: Subset<T, Event$CustomerArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    EventItem<T extends Event$EventItemArgs<ExtArgs> = {}>(args?: Subset<T, Event$EventItemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    EventStatusHistory<T extends Event$EventStatusHistoryArgs<ExtArgs> = {}>(args?: Subset<T, Event$EventStatusHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventStatusHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tasks<T extends Event$tasksArgs<ExtArgs> = {}>(args?: Subset<T, Event$tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Event model
   */
  interface EventFieldRefs {
    readonly id: FieldRef<"Event", 'String'>
    readonly title: FieldRef<"Event", 'String'>
    readonly description: FieldRef<"Event", 'String'>
    readonly location: FieldRef<"Event", 'String'>
    readonly startDate: FieldRef<"Event", 'DateTime'>
    readonly endDate: FieldRef<"Event", 'DateTime'>
    readonly customerId: FieldRef<"Event", 'String'>
    readonly status: FieldRef<"Event", 'String'>
    readonly staffNotes: FieldRef<"Event", 'String'>
    readonly assignedStaffId: FieldRef<"Event", 'String'>
    readonly createdAt: FieldRef<"Event", 'DateTime'>
    readonly updatedAt: FieldRef<"Event", 'DateTime'>
    readonly customerNotes: FieldRef<"Event", 'String'>
    readonly depositAmount: FieldRef<"Event", 'Float'>
    readonly depositPaid: FieldRef<"Event", 'Boolean'>
    readonly endTime: FieldRef<"Event", 'String'>
    readonly finalPaymentPaid: FieldRef<"Event", 'Boolean'>
    readonly reviewedAt: FieldRef<"Event", 'DateTime'>
    readonly reviewedBy: FieldRef<"Event", 'String'>
    readonly stage: FieldRef<"Event", 'String'>
    readonly startTime: FieldRef<"Event", 'String'>
    readonly totalAmount: FieldRef<"Event", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * Event findUnique
   */
  export type EventFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter, which Event to fetch.
     */
    where: EventWhereUniqueInput
  }

  /**
   * Event findUniqueOrThrow
   */
  export type EventFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter, which Event to fetch.
     */
    where: EventWhereUniqueInput
  }

  /**
   * Event findFirst
   */
  export type EventFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter, which Event to fetch.
     */
    where?: EventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Events to fetch.
     */
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Events.
     */
    cursor?: EventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Events.
     */
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * Event findFirstOrThrow
   */
  export type EventFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter, which Event to fetch.
     */
    where?: EventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Events to fetch.
     */
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Events.
     */
    cursor?: EventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Events.
     */
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * Event findMany
   */
  export type EventFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter, which Events to fetch.
     */
    where?: EventWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Events to fetch.
     */
    orderBy?: EventOrderByWithRelationInput | EventOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Events.
     */
    cursor?: EventWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Events.
     */
    skip?: number
    distinct?: EventScalarFieldEnum | EventScalarFieldEnum[]
  }

  /**
   * Event create
   */
  export type EventCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * The data needed to create a Event.
     */
    data: XOR<EventCreateInput, EventUncheckedCreateInput>
  }

  /**
   * Event createMany
   */
  export type EventCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Events.
     */
    data: EventCreateManyInput | EventCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Event createManyAndReturn
   */
  export type EventCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * The data used to create many Events.
     */
    data: EventCreateManyInput | EventCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Event update
   */
  export type EventUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * The data needed to update a Event.
     */
    data: XOR<EventUpdateInput, EventUncheckedUpdateInput>
    /**
     * Choose, which Event to update.
     */
    where: EventWhereUniqueInput
  }

  /**
   * Event updateMany
   */
  export type EventUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Events.
     */
    data: XOR<EventUpdateManyMutationInput, EventUncheckedUpdateManyInput>
    /**
     * Filter which Events to update
     */
    where?: EventWhereInput
    /**
     * Limit how many Events to update.
     */
    limit?: number
  }

  /**
   * Event updateManyAndReturn
   */
  export type EventUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * The data used to update Events.
     */
    data: XOR<EventUpdateManyMutationInput, EventUncheckedUpdateManyInput>
    /**
     * Filter which Events to update
     */
    where?: EventWhereInput
    /**
     * Limit how many Events to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Event upsert
   */
  export type EventUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * The filter to search for the Event to update in case it exists.
     */
    where: EventWhereUniqueInput
    /**
     * In case the Event found by the `where` argument doesn't exist, create a new Event with this data.
     */
    create: XOR<EventCreateInput, EventUncheckedCreateInput>
    /**
     * In case the Event was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EventUpdateInput, EventUncheckedUpdateInput>
  }

  /**
   * Event delete
   */
  export type EventDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    /**
     * Filter which Event to delete.
     */
    where: EventWhereUniqueInput
  }

  /**
   * Event deleteMany
   */
  export type EventDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Events to delete
     */
    where?: EventWhereInput
    /**
     * Limit how many Events to delete.
     */
    limit?: number
  }

  /**
   * Event.Customer
   */
  export type Event$CustomerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Customer
     */
    omit?: CustomerOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    where?: CustomerWhereInput
  }

  /**
   * Event.EventItem
   */
  export type Event$EventItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItem
     */
    select?: EventItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItem
     */
    omit?: EventItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemInclude<ExtArgs> | null
    where?: EventItemWhereInput
    orderBy?: EventItemOrderByWithRelationInput | EventItemOrderByWithRelationInput[]
    cursor?: EventItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventItemScalarFieldEnum | EventItemScalarFieldEnum[]
  }

  /**
   * Event.EventStatusHistory
   */
  export type Event$EventStatusHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventStatusHistory
     */
    select?: EventStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventStatusHistory
     */
    omit?: EventStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventStatusHistoryInclude<ExtArgs> | null
    where?: EventStatusHistoryWhereInput
    orderBy?: EventStatusHistoryOrderByWithRelationInput | EventStatusHistoryOrderByWithRelationInput[]
    cursor?: EventStatusHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventStatusHistoryScalarFieldEnum | EventStatusHistoryScalarFieldEnum[]
  }

  /**
   * Event.tasks
   */
  export type Event$tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    where?: tasksWhereInput
    orderBy?: tasksOrderByWithRelationInput | tasksOrderByWithRelationInput[]
    cursor?: tasksWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TasksScalarFieldEnum | TasksScalarFieldEnum[]
  }

  /**
   * Event without action
   */
  export type EventDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
  }


  /**
   * Model HeroSetting
   */

  export type AggregateHeroSetting = {
    _count: HeroSettingCountAggregateOutputType | null
    _min: HeroSettingMinAggregateOutputType | null
    _max: HeroSettingMaxAggregateOutputType | null
  }

  export type HeroSettingMinAggregateOutputType = {
    id: string | null
    imageUrl: string | null
    title: string | null
    description: string | null
    buttonText: string | null
    buttonLink: string | null
    textPosition: string | null
    active: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type HeroSettingMaxAggregateOutputType = {
    id: string | null
    imageUrl: string | null
    title: string | null
    description: string | null
    buttonText: string | null
    buttonLink: string | null
    textPosition: string | null
    active: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type HeroSettingCountAggregateOutputType = {
    id: number
    imageUrl: number
    title: number
    description: number
    buttonText: number
    buttonLink: number
    textPosition: number
    active: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type HeroSettingMinAggregateInputType = {
    id?: true
    imageUrl?: true
    title?: true
    description?: true
    buttonText?: true
    buttonLink?: true
    textPosition?: true
    active?: true
    createdAt?: true
    updatedAt?: true
  }

  export type HeroSettingMaxAggregateInputType = {
    id?: true
    imageUrl?: true
    title?: true
    description?: true
    buttonText?: true
    buttonLink?: true
    textPosition?: true
    active?: true
    createdAt?: true
    updatedAt?: true
  }

  export type HeroSettingCountAggregateInputType = {
    id?: true
    imageUrl?: true
    title?: true
    description?: true
    buttonText?: true
    buttonLink?: true
    textPosition?: true
    active?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type HeroSettingAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HeroSetting to aggregate.
     */
    where?: HeroSettingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HeroSettings to fetch.
     */
    orderBy?: HeroSettingOrderByWithRelationInput | HeroSettingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: HeroSettingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HeroSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HeroSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned HeroSettings
    **/
    _count?: true | HeroSettingCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: HeroSettingMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: HeroSettingMaxAggregateInputType
  }

  export type GetHeroSettingAggregateType<T extends HeroSettingAggregateArgs> = {
        [P in keyof T & keyof AggregateHeroSetting]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateHeroSetting[P]>
      : GetScalarType<T[P], AggregateHeroSetting[P]>
  }




  export type HeroSettingGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: HeroSettingWhereInput
    orderBy?: HeroSettingOrderByWithAggregationInput | HeroSettingOrderByWithAggregationInput[]
    by: HeroSettingScalarFieldEnum[] | HeroSettingScalarFieldEnum
    having?: HeroSettingScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: HeroSettingCountAggregateInputType | true
    _min?: HeroSettingMinAggregateInputType
    _max?: HeroSettingMaxAggregateInputType
  }

  export type HeroSettingGroupByOutputType = {
    id: string
    imageUrl: string
    title: string
    description: string
    buttonText: string
    buttonLink: string
    textPosition: string
    active: boolean
    createdAt: Date
    updatedAt: Date
    _count: HeroSettingCountAggregateOutputType | null
    _min: HeroSettingMinAggregateOutputType | null
    _max: HeroSettingMaxAggregateOutputType | null
  }

  type GetHeroSettingGroupByPayload<T extends HeroSettingGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<HeroSettingGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof HeroSettingGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], HeroSettingGroupByOutputType[P]>
            : GetScalarType<T[P], HeroSettingGroupByOutputType[P]>
        }
      >
    >


  export type HeroSettingSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    imageUrl?: boolean
    title?: boolean
    description?: boolean
    buttonText?: boolean
    buttonLink?: boolean
    textPosition?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["heroSetting"]>

  export type HeroSettingSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    imageUrl?: boolean
    title?: boolean
    description?: boolean
    buttonText?: boolean
    buttonLink?: boolean
    textPosition?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["heroSetting"]>

  export type HeroSettingSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    imageUrl?: boolean
    title?: boolean
    description?: boolean
    buttonText?: boolean
    buttonLink?: boolean
    textPosition?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["heroSetting"]>

  export type HeroSettingSelectScalar = {
    id?: boolean
    imageUrl?: boolean
    title?: boolean
    description?: boolean
    buttonText?: boolean
    buttonLink?: boolean
    textPosition?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type HeroSettingOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "imageUrl" | "title" | "description" | "buttonText" | "buttonLink" | "textPosition" | "active" | "createdAt" | "updatedAt", ExtArgs["result"]["heroSetting"]>

  export type $HeroSettingPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "HeroSetting"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      imageUrl: string
      title: string
      description: string
      buttonText: string
      buttonLink: string
      textPosition: string
      active: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["heroSetting"]>
    composites: {}
  }

  type HeroSettingGetPayload<S extends boolean | null | undefined | HeroSettingDefaultArgs> = $Result.GetResult<Prisma.$HeroSettingPayload, S>

  type HeroSettingCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<HeroSettingFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: HeroSettingCountAggregateInputType | true
    }

  export interface HeroSettingDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['HeroSetting'], meta: { name: 'HeroSetting' } }
    /**
     * Find zero or one HeroSetting that matches the filter.
     * @param {HeroSettingFindUniqueArgs} args - Arguments to find a HeroSetting
     * @example
     * // Get one HeroSetting
     * const heroSetting = await prisma.heroSetting.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends HeroSettingFindUniqueArgs>(args: SelectSubset<T, HeroSettingFindUniqueArgs<ExtArgs>>): Prisma__HeroSettingClient<$Result.GetResult<Prisma.$HeroSettingPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one HeroSetting that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {HeroSettingFindUniqueOrThrowArgs} args - Arguments to find a HeroSetting
     * @example
     * // Get one HeroSetting
     * const heroSetting = await prisma.heroSetting.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends HeroSettingFindUniqueOrThrowArgs>(args: SelectSubset<T, HeroSettingFindUniqueOrThrowArgs<ExtArgs>>): Prisma__HeroSettingClient<$Result.GetResult<Prisma.$HeroSettingPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HeroSetting that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HeroSettingFindFirstArgs} args - Arguments to find a HeroSetting
     * @example
     * // Get one HeroSetting
     * const heroSetting = await prisma.heroSetting.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends HeroSettingFindFirstArgs>(args?: SelectSubset<T, HeroSettingFindFirstArgs<ExtArgs>>): Prisma__HeroSettingClient<$Result.GetResult<Prisma.$HeroSettingPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first HeroSetting that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HeroSettingFindFirstOrThrowArgs} args - Arguments to find a HeroSetting
     * @example
     * // Get one HeroSetting
     * const heroSetting = await prisma.heroSetting.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends HeroSettingFindFirstOrThrowArgs>(args?: SelectSubset<T, HeroSettingFindFirstOrThrowArgs<ExtArgs>>): Prisma__HeroSettingClient<$Result.GetResult<Prisma.$HeroSettingPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more HeroSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HeroSettingFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all HeroSettings
     * const heroSettings = await prisma.heroSetting.findMany()
     * 
     * // Get first 10 HeroSettings
     * const heroSettings = await prisma.heroSetting.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const heroSettingWithIdOnly = await prisma.heroSetting.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends HeroSettingFindManyArgs>(args?: SelectSubset<T, HeroSettingFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HeroSettingPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a HeroSetting.
     * @param {HeroSettingCreateArgs} args - Arguments to create a HeroSetting.
     * @example
     * // Create one HeroSetting
     * const HeroSetting = await prisma.heroSetting.create({
     *   data: {
     *     // ... data to create a HeroSetting
     *   }
     * })
     * 
     */
    create<T extends HeroSettingCreateArgs>(args: SelectSubset<T, HeroSettingCreateArgs<ExtArgs>>): Prisma__HeroSettingClient<$Result.GetResult<Prisma.$HeroSettingPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many HeroSettings.
     * @param {HeroSettingCreateManyArgs} args - Arguments to create many HeroSettings.
     * @example
     * // Create many HeroSettings
     * const heroSetting = await prisma.heroSetting.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends HeroSettingCreateManyArgs>(args?: SelectSubset<T, HeroSettingCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many HeroSettings and returns the data saved in the database.
     * @param {HeroSettingCreateManyAndReturnArgs} args - Arguments to create many HeroSettings.
     * @example
     * // Create many HeroSettings
     * const heroSetting = await prisma.heroSetting.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many HeroSettings and only return the `id`
     * const heroSettingWithIdOnly = await prisma.heroSetting.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends HeroSettingCreateManyAndReturnArgs>(args?: SelectSubset<T, HeroSettingCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HeroSettingPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a HeroSetting.
     * @param {HeroSettingDeleteArgs} args - Arguments to delete one HeroSetting.
     * @example
     * // Delete one HeroSetting
     * const HeroSetting = await prisma.heroSetting.delete({
     *   where: {
     *     // ... filter to delete one HeroSetting
     *   }
     * })
     * 
     */
    delete<T extends HeroSettingDeleteArgs>(args: SelectSubset<T, HeroSettingDeleteArgs<ExtArgs>>): Prisma__HeroSettingClient<$Result.GetResult<Prisma.$HeroSettingPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one HeroSetting.
     * @param {HeroSettingUpdateArgs} args - Arguments to update one HeroSetting.
     * @example
     * // Update one HeroSetting
     * const heroSetting = await prisma.heroSetting.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends HeroSettingUpdateArgs>(args: SelectSubset<T, HeroSettingUpdateArgs<ExtArgs>>): Prisma__HeroSettingClient<$Result.GetResult<Prisma.$HeroSettingPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more HeroSettings.
     * @param {HeroSettingDeleteManyArgs} args - Arguments to filter HeroSettings to delete.
     * @example
     * // Delete a few HeroSettings
     * const { count } = await prisma.heroSetting.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends HeroSettingDeleteManyArgs>(args?: SelectSubset<T, HeroSettingDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HeroSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HeroSettingUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many HeroSettings
     * const heroSetting = await prisma.heroSetting.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends HeroSettingUpdateManyArgs>(args: SelectSubset<T, HeroSettingUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more HeroSettings and returns the data updated in the database.
     * @param {HeroSettingUpdateManyAndReturnArgs} args - Arguments to update many HeroSettings.
     * @example
     * // Update many HeroSettings
     * const heroSetting = await prisma.heroSetting.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more HeroSettings and only return the `id`
     * const heroSettingWithIdOnly = await prisma.heroSetting.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends HeroSettingUpdateManyAndReturnArgs>(args: SelectSubset<T, HeroSettingUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$HeroSettingPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one HeroSetting.
     * @param {HeroSettingUpsertArgs} args - Arguments to update or create a HeroSetting.
     * @example
     * // Update or create a HeroSetting
     * const heroSetting = await prisma.heroSetting.upsert({
     *   create: {
     *     // ... data to create a HeroSetting
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the HeroSetting we want to update
     *   }
     * })
     */
    upsert<T extends HeroSettingUpsertArgs>(args: SelectSubset<T, HeroSettingUpsertArgs<ExtArgs>>): Prisma__HeroSettingClient<$Result.GetResult<Prisma.$HeroSettingPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of HeroSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HeroSettingCountArgs} args - Arguments to filter HeroSettings to count.
     * @example
     * // Count the number of HeroSettings
     * const count = await prisma.heroSetting.count({
     *   where: {
     *     // ... the filter for the HeroSettings we want to count
     *   }
     * })
    **/
    count<T extends HeroSettingCountArgs>(
      args?: Subset<T, HeroSettingCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], HeroSettingCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a HeroSetting.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HeroSettingAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends HeroSettingAggregateArgs>(args: Subset<T, HeroSettingAggregateArgs>): Prisma.PrismaPromise<GetHeroSettingAggregateType<T>>

    /**
     * Group by HeroSetting.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {HeroSettingGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends HeroSettingGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: HeroSettingGroupByArgs['orderBy'] }
        : { orderBy?: HeroSettingGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, HeroSettingGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetHeroSettingGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the HeroSetting model
   */
  readonly fields: HeroSettingFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for HeroSetting.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__HeroSettingClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the HeroSetting model
   */
  interface HeroSettingFieldRefs {
    readonly id: FieldRef<"HeroSetting", 'String'>
    readonly imageUrl: FieldRef<"HeroSetting", 'String'>
    readonly title: FieldRef<"HeroSetting", 'String'>
    readonly description: FieldRef<"HeroSetting", 'String'>
    readonly buttonText: FieldRef<"HeroSetting", 'String'>
    readonly buttonLink: FieldRef<"HeroSetting", 'String'>
    readonly textPosition: FieldRef<"HeroSetting", 'String'>
    readonly active: FieldRef<"HeroSetting", 'Boolean'>
    readonly createdAt: FieldRef<"HeroSetting", 'DateTime'>
    readonly updatedAt: FieldRef<"HeroSetting", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * HeroSetting findUnique
   */
  export type HeroSettingFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HeroSetting
     */
    select?: HeroSettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HeroSetting
     */
    omit?: HeroSettingOmit<ExtArgs> | null
    /**
     * Filter, which HeroSetting to fetch.
     */
    where: HeroSettingWhereUniqueInput
  }

  /**
   * HeroSetting findUniqueOrThrow
   */
  export type HeroSettingFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HeroSetting
     */
    select?: HeroSettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HeroSetting
     */
    omit?: HeroSettingOmit<ExtArgs> | null
    /**
     * Filter, which HeroSetting to fetch.
     */
    where: HeroSettingWhereUniqueInput
  }

  /**
   * HeroSetting findFirst
   */
  export type HeroSettingFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HeroSetting
     */
    select?: HeroSettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HeroSetting
     */
    omit?: HeroSettingOmit<ExtArgs> | null
    /**
     * Filter, which HeroSetting to fetch.
     */
    where?: HeroSettingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HeroSettings to fetch.
     */
    orderBy?: HeroSettingOrderByWithRelationInput | HeroSettingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HeroSettings.
     */
    cursor?: HeroSettingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HeroSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HeroSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HeroSettings.
     */
    distinct?: HeroSettingScalarFieldEnum | HeroSettingScalarFieldEnum[]
  }

  /**
   * HeroSetting findFirstOrThrow
   */
  export type HeroSettingFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HeroSetting
     */
    select?: HeroSettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HeroSetting
     */
    omit?: HeroSettingOmit<ExtArgs> | null
    /**
     * Filter, which HeroSetting to fetch.
     */
    where?: HeroSettingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HeroSettings to fetch.
     */
    orderBy?: HeroSettingOrderByWithRelationInput | HeroSettingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for HeroSettings.
     */
    cursor?: HeroSettingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HeroSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HeroSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of HeroSettings.
     */
    distinct?: HeroSettingScalarFieldEnum | HeroSettingScalarFieldEnum[]
  }

  /**
   * HeroSetting findMany
   */
  export type HeroSettingFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HeroSetting
     */
    select?: HeroSettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HeroSetting
     */
    omit?: HeroSettingOmit<ExtArgs> | null
    /**
     * Filter, which HeroSettings to fetch.
     */
    where?: HeroSettingWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of HeroSettings to fetch.
     */
    orderBy?: HeroSettingOrderByWithRelationInput | HeroSettingOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing HeroSettings.
     */
    cursor?: HeroSettingWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` HeroSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` HeroSettings.
     */
    skip?: number
    distinct?: HeroSettingScalarFieldEnum | HeroSettingScalarFieldEnum[]
  }

  /**
   * HeroSetting create
   */
  export type HeroSettingCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HeroSetting
     */
    select?: HeroSettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HeroSetting
     */
    omit?: HeroSettingOmit<ExtArgs> | null
    /**
     * The data needed to create a HeroSetting.
     */
    data: XOR<HeroSettingCreateInput, HeroSettingUncheckedCreateInput>
  }

  /**
   * HeroSetting createMany
   */
  export type HeroSettingCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many HeroSettings.
     */
    data: HeroSettingCreateManyInput | HeroSettingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HeroSetting createManyAndReturn
   */
  export type HeroSettingCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HeroSetting
     */
    select?: HeroSettingSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the HeroSetting
     */
    omit?: HeroSettingOmit<ExtArgs> | null
    /**
     * The data used to create many HeroSettings.
     */
    data: HeroSettingCreateManyInput | HeroSettingCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * HeroSetting update
   */
  export type HeroSettingUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HeroSetting
     */
    select?: HeroSettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HeroSetting
     */
    omit?: HeroSettingOmit<ExtArgs> | null
    /**
     * The data needed to update a HeroSetting.
     */
    data: XOR<HeroSettingUpdateInput, HeroSettingUncheckedUpdateInput>
    /**
     * Choose, which HeroSetting to update.
     */
    where: HeroSettingWhereUniqueInput
  }

  /**
   * HeroSetting updateMany
   */
  export type HeroSettingUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update HeroSettings.
     */
    data: XOR<HeroSettingUpdateManyMutationInput, HeroSettingUncheckedUpdateManyInput>
    /**
     * Filter which HeroSettings to update
     */
    where?: HeroSettingWhereInput
    /**
     * Limit how many HeroSettings to update.
     */
    limit?: number
  }

  /**
   * HeroSetting updateManyAndReturn
   */
  export type HeroSettingUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HeroSetting
     */
    select?: HeroSettingSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the HeroSetting
     */
    omit?: HeroSettingOmit<ExtArgs> | null
    /**
     * The data used to update HeroSettings.
     */
    data: XOR<HeroSettingUpdateManyMutationInput, HeroSettingUncheckedUpdateManyInput>
    /**
     * Filter which HeroSettings to update
     */
    where?: HeroSettingWhereInput
    /**
     * Limit how many HeroSettings to update.
     */
    limit?: number
  }

  /**
   * HeroSetting upsert
   */
  export type HeroSettingUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HeroSetting
     */
    select?: HeroSettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HeroSetting
     */
    omit?: HeroSettingOmit<ExtArgs> | null
    /**
     * The filter to search for the HeroSetting to update in case it exists.
     */
    where: HeroSettingWhereUniqueInput
    /**
     * In case the HeroSetting found by the `where` argument doesn't exist, create a new HeroSetting with this data.
     */
    create: XOR<HeroSettingCreateInput, HeroSettingUncheckedCreateInput>
    /**
     * In case the HeroSetting was found with the provided `where` argument, update it with this data.
     */
    update: XOR<HeroSettingUpdateInput, HeroSettingUncheckedUpdateInput>
  }

  /**
   * HeroSetting delete
   */
  export type HeroSettingDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HeroSetting
     */
    select?: HeroSettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HeroSetting
     */
    omit?: HeroSettingOmit<ExtArgs> | null
    /**
     * Filter which HeroSetting to delete.
     */
    where: HeroSettingWhereUniqueInput
  }

  /**
   * HeroSetting deleteMany
   */
  export type HeroSettingDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which HeroSettings to delete
     */
    where?: HeroSettingWhereInput
    /**
     * Limit how many HeroSettings to delete.
     */
    limit?: number
  }

  /**
   * HeroSetting without action
   */
  export type HeroSettingDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the HeroSetting
     */
    select?: HeroSettingSelect<ExtArgs> | null
    /**
     * Omit specific fields from the HeroSetting
     */
    omit?: HeroSettingOmit<ExtArgs> | null
  }


  /**
   * Model Order
   */

  export type AggregateOrder = {
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  export type OrderAvgAggregateOutputType = {
    totalAmount: number | null
    discountAmount: number | null
    finalAmount: number | null
    shippingAmount: number | null
    taxAmount: number | null
  }

  export type OrderSumAggregateOutputType = {
    totalAmount: number | null
    discountAmount: number | null
    finalAmount: number | null
    shippingAmount: number | null
    taxAmount: number | null
  }

  export type OrderMinAggregateOutputType = {
    id: string | null
    customerId: string | null
    totalAmount: number | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
    assignedStaffId: string | null
    customerNotes: string | null
    deliveredAt: Date | null
    discountAmount: number | null
    finalAmount: number | null
    orderNumber: string | null
    paymentStatus: string | null
    reviewedAt: Date | null
    reviewedBy: string | null
    shippedAt: Date | null
    shippingAmount: number | null
    staffNotes: string | null
    stage: string | null
    taxAmount: number | null
  }

  export type OrderMaxAggregateOutputType = {
    id: string | null
    customerId: string | null
    totalAmount: number | null
    status: string | null
    createdAt: Date | null
    updatedAt: Date | null
    assignedStaffId: string | null
    customerNotes: string | null
    deliveredAt: Date | null
    discountAmount: number | null
    finalAmount: number | null
    orderNumber: string | null
    paymentStatus: string | null
    reviewedAt: Date | null
    reviewedBy: string | null
    shippedAt: Date | null
    shippingAmount: number | null
    staffNotes: string | null
    stage: string | null
    taxAmount: number | null
  }

  export type OrderCountAggregateOutputType = {
    id: number
    customerId: number
    totalAmount: number
    status: number
    createdAt: number
    updatedAt: number
    assignedStaffId: number
    billingAddress: number
    customerNotes: number
    deliveredAt: number
    discountAmount: number
    finalAmount: number
    orderNumber: number
    paymentStatus: number
    reviewedAt: number
    reviewedBy: number
    shippedAt: number
    shippingAddress: number
    shippingAmount: number
    staffNotes: number
    stage: number
    taxAmount: number
    _all: number
  }


  export type OrderAvgAggregateInputType = {
    totalAmount?: true
    discountAmount?: true
    finalAmount?: true
    shippingAmount?: true
    taxAmount?: true
  }

  export type OrderSumAggregateInputType = {
    totalAmount?: true
    discountAmount?: true
    finalAmount?: true
    shippingAmount?: true
    taxAmount?: true
  }

  export type OrderMinAggregateInputType = {
    id?: true
    customerId?: true
    totalAmount?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    assignedStaffId?: true
    customerNotes?: true
    deliveredAt?: true
    discountAmount?: true
    finalAmount?: true
    orderNumber?: true
    paymentStatus?: true
    reviewedAt?: true
    reviewedBy?: true
    shippedAt?: true
    shippingAmount?: true
    staffNotes?: true
    stage?: true
    taxAmount?: true
  }

  export type OrderMaxAggregateInputType = {
    id?: true
    customerId?: true
    totalAmount?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    assignedStaffId?: true
    customerNotes?: true
    deliveredAt?: true
    discountAmount?: true
    finalAmount?: true
    orderNumber?: true
    paymentStatus?: true
    reviewedAt?: true
    reviewedBy?: true
    shippedAt?: true
    shippingAmount?: true
    staffNotes?: true
    stage?: true
    taxAmount?: true
  }

  export type OrderCountAggregateInputType = {
    id?: true
    customerId?: true
    totalAmount?: true
    status?: true
    createdAt?: true
    updatedAt?: true
    assignedStaffId?: true
    billingAddress?: true
    customerNotes?: true
    deliveredAt?: true
    discountAmount?: true
    finalAmount?: true
    orderNumber?: true
    paymentStatus?: true
    reviewedAt?: true
    reviewedBy?: true
    shippedAt?: true
    shippingAddress?: true
    shippingAmount?: true
    staffNotes?: true
    stage?: true
    taxAmount?: true
    _all?: true
  }

  export type OrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Order to aggregate.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Orders
    **/
    _count?: true | OrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderMaxAggregateInputType
  }

  export type GetOrderAggregateType<T extends OrderAggregateArgs> = {
        [P in keyof T & keyof AggregateOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrder[P]>
      : GetScalarType<T[P], AggregateOrder[P]>
  }




  export type OrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithAggregationInput | OrderOrderByWithAggregationInput[]
    by: OrderScalarFieldEnum[] | OrderScalarFieldEnum
    having?: OrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderCountAggregateInputType | true
    _avg?: OrderAvgAggregateInputType
    _sum?: OrderSumAggregateInputType
    _min?: OrderMinAggregateInputType
    _max?: OrderMaxAggregateInputType
  }

  export type OrderGroupByOutputType = {
    id: string
    customerId: string
    totalAmount: number
    status: string
    createdAt: Date
    updatedAt: Date
    assignedStaffId: string | null
    billingAddress: JsonValue | null
    customerNotes: string | null
    deliveredAt: Date | null
    discountAmount: number | null
    finalAmount: number
    orderNumber: string
    paymentStatus: string
    reviewedAt: Date | null
    reviewedBy: string | null
    shippedAt: Date | null
    shippingAddress: JsonValue | null
    shippingAmount: number | null
    staffNotes: string | null
    stage: string
    taxAmount: number | null
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  type GetOrderGroupByPayload<T extends OrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderGroupByOutputType[P]>
            : GetScalarType<T[P], OrderGroupByOutputType[P]>
        }
      >
    >


  export type OrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    totalAmount?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    assignedStaffId?: boolean
    billingAddress?: boolean
    customerNotes?: boolean
    deliveredAt?: boolean
    discountAmount?: boolean
    finalAmount?: boolean
    orderNumber?: boolean
    paymentStatus?: boolean
    reviewedAt?: boolean
    reviewedBy?: boolean
    shippedAt?: boolean
    shippingAddress?: boolean
    shippingAmount?: boolean
    staffNotes?: boolean
    stage?: boolean
    taxAmount?: boolean
    Customer?: boolean | CustomerDefaultArgs<ExtArgs>
    OrderItem?: boolean | Order$OrderItemArgs<ExtArgs>
    OrderStatusHistory?: boolean | Order$OrderStatusHistoryArgs<ExtArgs>
    tasks?: boolean | Order$tasksArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    totalAmount?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    assignedStaffId?: boolean
    billingAddress?: boolean
    customerNotes?: boolean
    deliveredAt?: boolean
    discountAmount?: boolean
    finalAmount?: boolean
    orderNumber?: boolean
    paymentStatus?: boolean
    reviewedAt?: boolean
    reviewedBy?: boolean
    shippedAt?: boolean
    shippingAddress?: boolean
    shippingAmount?: boolean
    staffNotes?: boolean
    stage?: boolean
    taxAmount?: boolean
    Customer?: boolean | CustomerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    totalAmount?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    assignedStaffId?: boolean
    billingAddress?: boolean
    customerNotes?: boolean
    deliveredAt?: boolean
    discountAmount?: boolean
    finalAmount?: boolean
    orderNumber?: boolean
    paymentStatus?: boolean
    reviewedAt?: boolean
    reviewedBy?: boolean
    shippedAt?: boolean
    shippingAddress?: boolean
    shippingAmount?: boolean
    staffNotes?: boolean
    stage?: boolean
    taxAmount?: boolean
    Customer?: boolean | CustomerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>

  export type OrderSelectScalar = {
    id?: boolean
    customerId?: boolean
    totalAmount?: boolean
    status?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    assignedStaffId?: boolean
    billingAddress?: boolean
    customerNotes?: boolean
    deliveredAt?: boolean
    discountAmount?: boolean
    finalAmount?: boolean
    orderNumber?: boolean
    paymentStatus?: boolean
    reviewedAt?: boolean
    reviewedBy?: boolean
    shippedAt?: boolean
    shippingAddress?: boolean
    shippingAmount?: boolean
    staffNotes?: boolean
    stage?: boolean
    taxAmount?: boolean
  }

  export type OrderOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "customerId" | "totalAmount" | "status" | "createdAt" | "updatedAt" | "assignedStaffId" | "billingAddress" | "customerNotes" | "deliveredAt" | "discountAmount" | "finalAmount" | "orderNumber" | "paymentStatus" | "reviewedAt" | "reviewedBy" | "shippedAt" | "shippingAddress" | "shippingAmount" | "staffNotes" | "stage" | "taxAmount", ExtArgs["result"]["order"]>
  export type OrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Customer?: boolean | CustomerDefaultArgs<ExtArgs>
    OrderItem?: boolean | Order$OrderItemArgs<ExtArgs>
    OrderStatusHistory?: boolean | Order$OrderStatusHistoryArgs<ExtArgs>
    tasks?: boolean | Order$tasksArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OrderIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Customer?: boolean | CustomerDefaultArgs<ExtArgs>
  }
  export type OrderIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Customer?: boolean | CustomerDefaultArgs<ExtArgs>
  }

  export type $OrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Order"
    objects: {
      Customer: Prisma.$CustomerPayload<ExtArgs>
      OrderItem: Prisma.$OrderItemPayload<ExtArgs>[]
      OrderStatusHistory: Prisma.$OrderStatusHistoryPayload<ExtArgs>[]
      tasks: Prisma.$tasksPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      customerId: string
      totalAmount: number
      status: string
      createdAt: Date
      updatedAt: Date
      assignedStaffId: string | null
      billingAddress: Prisma.JsonValue | null
      customerNotes: string | null
      deliveredAt: Date | null
      discountAmount: number | null
      finalAmount: number
      orderNumber: string
      paymentStatus: string
      reviewedAt: Date | null
      reviewedBy: string | null
      shippedAt: Date | null
      shippingAddress: Prisma.JsonValue | null
      shippingAmount: number | null
      staffNotes: string | null
      stage: string
      taxAmount: number | null
    }, ExtArgs["result"]["order"]>
    composites: {}
  }

  type OrderGetPayload<S extends boolean | null | undefined | OrderDefaultArgs> = $Result.GetResult<Prisma.$OrderPayload, S>

  type OrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderCountAggregateInputType | true
    }

  export interface OrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Order'], meta: { name: 'Order' } }
    /**
     * Find zero or one Order that matches the filter.
     * @param {OrderFindUniqueArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderFindUniqueArgs>(args: SelectSubset<T, OrderFindUniqueArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Order that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderFindUniqueOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderFindFirstArgs>(args?: SelectSubset<T, OrderFindFirstArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Order that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Orders
     * const orders = await prisma.order.findMany()
     * 
     * // Get first 10 Orders
     * const orders = await prisma.order.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderWithIdOnly = await prisma.order.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderFindManyArgs>(args?: SelectSubset<T, OrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Order.
     * @param {OrderCreateArgs} args - Arguments to create a Order.
     * @example
     * // Create one Order
     * const Order = await prisma.order.create({
     *   data: {
     *     // ... data to create a Order
     *   }
     * })
     * 
     */
    create<T extends OrderCreateArgs>(args: SelectSubset<T, OrderCreateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Orders.
     * @param {OrderCreateManyArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderCreateManyArgs>(args?: SelectSubset<T, OrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Orders and returns the data saved in the database.
     * @param {OrderCreateManyAndReturnArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Orders and only return the `id`
     * const orderWithIdOnly = await prisma.order.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Order.
     * @param {OrderDeleteArgs} args - Arguments to delete one Order.
     * @example
     * // Delete one Order
     * const Order = await prisma.order.delete({
     *   where: {
     *     // ... filter to delete one Order
     *   }
     * })
     * 
     */
    delete<T extends OrderDeleteArgs>(args: SelectSubset<T, OrderDeleteArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Order.
     * @param {OrderUpdateArgs} args - Arguments to update one Order.
     * @example
     * // Update one Order
     * const order = await prisma.order.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderUpdateArgs>(args: SelectSubset<T, OrderUpdateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Orders.
     * @param {OrderDeleteManyArgs} args - Arguments to filter Orders to delete.
     * @example
     * // Delete a few Orders
     * const { count } = await prisma.order.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderDeleteManyArgs>(args?: SelectSubset<T, OrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Orders
     * const order = await prisma.order.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderUpdateManyArgs>(args: SelectSubset<T, OrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders and returns the data updated in the database.
     * @param {OrderUpdateManyAndReturnArgs} args - Arguments to update many Orders.
     * @example
     * // Update many Orders
     * const order = await prisma.order.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Orders and only return the `id`
     * const orderWithIdOnly = await prisma.order.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Order.
     * @param {OrderUpsertArgs} args - Arguments to update or create a Order.
     * @example
     * // Update or create a Order
     * const order = await prisma.order.upsert({
     *   create: {
     *     // ... data to create a Order
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Order we want to update
     *   }
     * })
     */
    upsert<T extends OrderUpsertArgs>(args: SelectSubset<T, OrderUpsertArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderCountArgs} args - Arguments to filter Orders to count.
     * @example
     * // Count the number of Orders
     * const count = await prisma.order.count({
     *   where: {
     *     // ... the filter for the Orders we want to count
     *   }
     * })
    **/
    count<T extends OrderCountArgs>(
      args?: Subset<T, OrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderAggregateArgs>(args: Subset<T, OrderAggregateArgs>): Prisma.PrismaPromise<GetOrderAggregateType<T>>

    /**
     * Group by Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderGroupByArgs['orderBy'] }
        : { orderBy?: OrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Order model
   */
  readonly fields: OrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Order.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Customer<T extends CustomerDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CustomerDefaultArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    OrderItem<T extends Order$OrderItemArgs<ExtArgs> = {}>(args?: Subset<T, Order$OrderItemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    OrderStatusHistory<T extends Order$OrderStatusHistoryArgs<ExtArgs> = {}>(args?: Subset<T, Order$OrderStatusHistoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tasks<T extends Order$tasksArgs<ExtArgs> = {}>(args?: Subset<T, Order$tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Order model
   */
  interface OrderFieldRefs {
    readonly id: FieldRef<"Order", 'String'>
    readonly customerId: FieldRef<"Order", 'String'>
    readonly totalAmount: FieldRef<"Order", 'Float'>
    readonly status: FieldRef<"Order", 'String'>
    readonly createdAt: FieldRef<"Order", 'DateTime'>
    readonly updatedAt: FieldRef<"Order", 'DateTime'>
    readonly assignedStaffId: FieldRef<"Order", 'String'>
    readonly billingAddress: FieldRef<"Order", 'Json'>
    readonly customerNotes: FieldRef<"Order", 'String'>
    readonly deliveredAt: FieldRef<"Order", 'DateTime'>
    readonly discountAmount: FieldRef<"Order", 'Float'>
    readonly finalAmount: FieldRef<"Order", 'Float'>
    readonly orderNumber: FieldRef<"Order", 'String'>
    readonly paymentStatus: FieldRef<"Order", 'String'>
    readonly reviewedAt: FieldRef<"Order", 'DateTime'>
    readonly reviewedBy: FieldRef<"Order", 'String'>
    readonly shippedAt: FieldRef<"Order", 'DateTime'>
    readonly shippingAddress: FieldRef<"Order", 'Json'>
    readonly shippingAmount: FieldRef<"Order", 'Float'>
    readonly staffNotes: FieldRef<"Order", 'String'>
    readonly stage: FieldRef<"Order", 'String'>
    readonly taxAmount: FieldRef<"Order", 'Float'>
  }
    

  // Custom InputTypes
  /**
   * Order findUnique
   */
  export type OrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findUniqueOrThrow
   */
  export type OrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findFirst
   */
  export type OrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findFirstOrThrow
   */
  export type OrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findMany
   */
  export type OrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Orders to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order create
   */
  export type OrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to create a Order.
     */
    data: XOR<OrderCreateInput, OrderUncheckedCreateInput>
  }

  /**
   * Order createMany
   */
  export type OrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Order createManyAndReturn
   */
  export type OrderCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Order update
   */
  export type OrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to update a Order.
     */
    data: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
    /**
     * Choose, which Order to update.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order updateMany
   */
  export type OrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Orders.
     */
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyInput>
    /**
     * Filter which Orders to update
     */
    where?: OrderWhereInput
    /**
     * Limit how many Orders to update.
     */
    limit?: number
  }

  /**
   * Order updateManyAndReturn
   */
  export type OrderUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * The data used to update Orders.
     */
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyInput>
    /**
     * Filter which Orders to update
     */
    where?: OrderWhereInput
    /**
     * Limit how many Orders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Order upsert
   */
  export type OrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The filter to search for the Order to update in case it exists.
     */
    where: OrderWhereUniqueInput
    /**
     * In case the Order found by the `where` argument doesn't exist, create a new Order with this data.
     */
    create: XOR<OrderCreateInput, OrderUncheckedCreateInput>
    /**
     * In case the Order was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
  }

  /**
   * Order delete
   */
  export type OrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter which Order to delete.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order deleteMany
   */
  export type OrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Orders to delete
     */
    where?: OrderWhereInput
    /**
     * Limit how many Orders to delete.
     */
    limit?: number
  }

  /**
   * Order.OrderItem
   */
  export type Order$OrderItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    cursor?: OrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * Order.OrderStatusHistory
   */
  export type Order$OrderStatusHistoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
    where?: OrderStatusHistoryWhereInput
    orderBy?: OrderStatusHistoryOrderByWithRelationInput | OrderStatusHistoryOrderByWithRelationInput[]
    cursor?: OrderStatusHistoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderStatusHistoryScalarFieldEnum | OrderStatusHistoryScalarFieldEnum[]
  }

  /**
   * Order.tasks
   */
  export type Order$tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    where?: tasksWhereInput
    orderBy?: tasksOrderByWithRelationInput | tasksOrderByWithRelationInput[]
    cursor?: tasksWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TasksScalarFieldEnum | TasksScalarFieldEnum[]
  }

  /**
   * Order without action
   */
  export type OrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
  }


  /**
   * Model Product
   */

  export type AggregateProduct = {
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  export type ProductAvgAggregateOutputType = {
    price: number | null
    maxPrice: number | null
    minPrice: number | null
    minQuantity: number | null
    unitPrice: number | null
  }

  export type ProductSumAggregateOutputType = {
    price: number | null
    maxPrice: number | null
    minPrice: number | null
    minQuantity: number | null
    unitPrice: number | null
  }

  export type ProductMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    price: number | null
    imageUrl: string | null
    active: boolean | null
    categoryId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    canBuy: boolean | null
    canHire: boolean | null
    hasRangePrice: boolean | null
    hasUnitPrice: boolean | null
    maxPrice: number | null
    minPrice: number | null
    minQuantity: number | null
    unitPrice: number | null
    unitType: string | null
  }

  export type ProductMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    price: number | null
    imageUrl: string | null
    active: boolean | null
    categoryId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    canBuy: boolean | null
    canHire: boolean | null
    hasRangePrice: boolean | null
    hasUnitPrice: boolean | null
    maxPrice: number | null
    minPrice: number | null
    minQuantity: number | null
    unitPrice: number | null
    unitType: string | null
  }

  export type ProductCountAggregateOutputType = {
    id: number
    name: number
    description: number
    price: number
    imageUrl: number
    active: number
    categoryId: number
    createdAt: number
    updatedAt: number
    canBuy: number
    canHire: number
    hasRangePrice: number
    hasUnitPrice: number
    maxPrice: number
    minPrice: number
    minQuantity: number
    unitPrice: number
    unitType: number
    _all: number
  }


  export type ProductAvgAggregateInputType = {
    price?: true
    maxPrice?: true
    minPrice?: true
    minQuantity?: true
    unitPrice?: true
  }

  export type ProductSumAggregateInputType = {
    price?: true
    maxPrice?: true
    minPrice?: true
    minQuantity?: true
    unitPrice?: true
  }

  export type ProductMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    price?: true
    imageUrl?: true
    active?: true
    categoryId?: true
    createdAt?: true
    updatedAt?: true
    canBuy?: true
    canHire?: true
    hasRangePrice?: true
    hasUnitPrice?: true
    maxPrice?: true
    minPrice?: true
    minQuantity?: true
    unitPrice?: true
    unitType?: true
  }

  export type ProductMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    price?: true
    imageUrl?: true
    active?: true
    categoryId?: true
    createdAt?: true
    updatedAt?: true
    canBuy?: true
    canHire?: true
    hasRangePrice?: true
    hasUnitPrice?: true
    maxPrice?: true
    minPrice?: true
    minQuantity?: true
    unitPrice?: true
    unitType?: true
  }

  export type ProductCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    price?: true
    imageUrl?: true
    active?: true
    categoryId?: true
    createdAt?: true
    updatedAt?: true
    canBuy?: true
    canHire?: true
    hasRangePrice?: true
    hasUnitPrice?: true
    maxPrice?: true
    minPrice?: true
    minQuantity?: true
    unitPrice?: true
    unitType?: true
    _all?: true
  }

  export type ProductAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Product to aggregate.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Products
    **/
    _count?: true | ProductCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductMaxAggregateInputType
  }

  export type GetProductAggregateType<T extends ProductAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct[P]>
      : GetScalarType<T[P], AggregateProduct[P]>
  }




  export type ProductGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithAggregationInput | ProductOrderByWithAggregationInput[]
    by: ProductScalarFieldEnum[] | ProductScalarFieldEnum
    having?: ProductScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductCountAggregateInputType | true
    _avg?: ProductAvgAggregateInputType
    _sum?: ProductSumAggregateInputType
    _min?: ProductMinAggregateInputType
    _max?: ProductMaxAggregateInputType
  }

  export type ProductGroupByOutputType = {
    id: string
    name: string
    description: string | null
    price: number
    imageUrl: string | null
    active: boolean
    categoryId: string | null
    createdAt: Date
    updatedAt: Date
    canBuy: boolean
    canHire: boolean
    hasRangePrice: boolean
    hasUnitPrice: boolean
    maxPrice: number | null
    minPrice: number | null
    minQuantity: number | null
    unitPrice: number | null
    unitType: string | null
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  type GetProductGroupByPayload<T extends ProductGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductGroupByOutputType[P]>
            : GetScalarType<T[P], ProductGroupByOutputType[P]>
        }
      >
    >


  export type ProductSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    price?: boolean
    imageUrl?: boolean
    active?: boolean
    categoryId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    canBuy?: boolean
    canHire?: boolean
    hasRangePrice?: boolean
    hasUnitPrice?: boolean
    maxPrice?: boolean
    minPrice?: boolean
    minQuantity?: boolean
    unitPrice?: boolean
    unitType?: boolean
    EventItem?: boolean | Product$EventItemArgs<ExtArgs>
    OrderItem?: boolean | Product$OrderItemArgs<ExtArgs>
    ProductCategory?: boolean | Product$ProductCategoryArgs<ExtArgs>
    ProductOption?: boolean | Product$ProductOptionArgs<ExtArgs>
    task_templates?: boolean | Product$task_templatesArgs<ExtArgs>
    tasks?: boolean | Product$tasksArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    price?: boolean
    imageUrl?: boolean
    active?: boolean
    categoryId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    canBuy?: boolean
    canHire?: boolean
    hasRangePrice?: boolean
    hasUnitPrice?: boolean
    maxPrice?: boolean
    minPrice?: boolean
    minQuantity?: boolean
    unitPrice?: boolean
    unitType?: boolean
    ProductCategory?: boolean | Product$ProductCategoryArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    price?: boolean
    imageUrl?: boolean
    active?: boolean
    categoryId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    canBuy?: boolean
    canHire?: boolean
    hasRangePrice?: boolean
    hasUnitPrice?: boolean
    maxPrice?: boolean
    minPrice?: boolean
    minQuantity?: boolean
    unitPrice?: boolean
    unitType?: boolean
    ProductCategory?: boolean | Product$ProductCategoryArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>

  export type ProductSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    price?: boolean
    imageUrl?: boolean
    active?: boolean
    categoryId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    canBuy?: boolean
    canHire?: boolean
    hasRangePrice?: boolean
    hasUnitPrice?: boolean
    maxPrice?: boolean
    minPrice?: boolean
    minQuantity?: boolean
    unitPrice?: boolean
    unitType?: boolean
  }

  export type ProductOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "price" | "imageUrl" | "active" | "categoryId" | "createdAt" | "updatedAt" | "canBuy" | "canHire" | "hasRangePrice" | "hasUnitPrice" | "maxPrice" | "minPrice" | "minQuantity" | "unitPrice" | "unitType", ExtArgs["result"]["product"]>
  export type ProductInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    EventItem?: boolean | Product$EventItemArgs<ExtArgs>
    OrderItem?: boolean | Product$OrderItemArgs<ExtArgs>
    ProductCategory?: boolean | Product$ProductCategoryArgs<ExtArgs>
    ProductOption?: boolean | Product$ProductOptionArgs<ExtArgs>
    task_templates?: boolean | Product$task_templatesArgs<ExtArgs>
    tasks?: boolean | Product$tasksArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProductCategory?: boolean | Product$ProductCategoryArgs<ExtArgs>
  }
  export type ProductIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProductCategory?: boolean | Product$ProductCategoryArgs<ExtArgs>
  }

  export type $ProductPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Product"
    objects: {
      EventItem: Prisma.$EventItemPayload<ExtArgs>[]
      OrderItem: Prisma.$OrderItemPayload<ExtArgs>[]
      ProductCategory: Prisma.$ProductCategoryPayload<ExtArgs> | null
      ProductOption: Prisma.$ProductOptionPayload<ExtArgs>[]
      task_templates: Prisma.$task_templatesPayload<ExtArgs>[]
      tasks: Prisma.$tasksPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      price: number
      imageUrl: string | null
      active: boolean
      categoryId: string | null
      createdAt: Date
      updatedAt: Date
      canBuy: boolean
      canHire: boolean
      hasRangePrice: boolean
      hasUnitPrice: boolean
      maxPrice: number | null
      minPrice: number | null
      minQuantity: number | null
      unitPrice: number | null
      unitType: string | null
    }, ExtArgs["result"]["product"]>
    composites: {}
  }

  type ProductGetPayload<S extends boolean | null | undefined | ProductDefaultArgs> = $Result.GetResult<Prisma.$ProductPayload, S>

  type ProductCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductCountAggregateInputType | true
    }

  export interface ProductDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Product'], meta: { name: 'Product' } }
    /**
     * Find zero or one Product that matches the filter.
     * @param {ProductFindUniqueArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductFindUniqueArgs>(args: SelectSubset<T, ProductFindUniqueArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Product that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductFindUniqueOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductFindFirstArgs>(args?: SelectSubset<T, ProductFindFirstArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Product that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.product.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.product.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productWithIdOnly = await prisma.product.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductFindManyArgs>(args?: SelectSubset<T, ProductFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Product.
     * @param {ProductCreateArgs} args - Arguments to create a Product.
     * @example
     * // Create one Product
     * const Product = await prisma.product.create({
     *   data: {
     *     // ... data to create a Product
     *   }
     * })
     * 
     */
    create<T extends ProductCreateArgs>(args: SelectSubset<T, ProductCreateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Products.
     * @param {ProductCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductCreateManyArgs>(args?: SelectSubset<T, ProductCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Products and returns the data saved in the database.
     * @param {ProductCreateManyAndReturnArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Products and only return the `id`
     * const productWithIdOnly = await prisma.product.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Product.
     * @param {ProductDeleteArgs} args - Arguments to delete one Product.
     * @example
     * // Delete one Product
     * const Product = await prisma.product.delete({
     *   where: {
     *     // ... filter to delete one Product
     *   }
     * })
     * 
     */
    delete<T extends ProductDeleteArgs>(args: SelectSubset<T, ProductDeleteArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Product.
     * @param {ProductUpdateArgs} args - Arguments to update one Product.
     * @example
     * // Update one Product
     * const product = await prisma.product.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductUpdateArgs>(args: SelectSubset<T, ProductUpdateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Products.
     * @param {ProductDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.product.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductDeleteManyArgs>(args?: SelectSubset<T, ProductDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductUpdateManyArgs>(args: SelectSubset<T, ProductUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products and returns the data updated in the database.
     * @param {ProductUpdateManyAndReturnArgs} args - Arguments to update many Products.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Products and only return the `id`
     * const productWithIdOnly = await prisma.product.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Product.
     * @param {ProductUpsertArgs} args - Arguments to update or create a Product.
     * @example
     * // Update or create a Product
     * const product = await prisma.product.upsert({
     *   create: {
     *     // ... data to create a Product
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product we want to update
     *   }
     * })
     */
    upsert<T extends ProductUpsertArgs>(args: SelectSubset<T, ProductUpsertArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.product.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends ProductCountArgs>(
      args?: Subset<T, ProductCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductAggregateArgs>(args: Subset<T, ProductAggregateArgs>): Prisma.PrismaPromise<GetProductAggregateType<T>>

    /**
     * Group by Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductGroupByArgs['orderBy'] }
        : { orderBy?: ProductGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Product model
   */
  readonly fields: ProductFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Product.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    EventItem<T extends Product$EventItemArgs<ExtArgs> = {}>(args?: Subset<T, Product$EventItemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    OrderItem<T extends Product$OrderItemArgs<ExtArgs> = {}>(args?: Subset<T, Product$OrderItemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    ProductCategory<T extends Product$ProductCategoryArgs<ExtArgs> = {}>(args?: Subset<T, Product$ProductCategoryArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    ProductOption<T extends Product$ProductOptionArgs<ExtArgs> = {}>(args?: Subset<T, Product$ProductOptionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    task_templates<T extends Product$task_templatesArgs<ExtArgs> = {}>(args?: Subset<T, Product$task_templatesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    tasks<T extends Product$tasksArgs<ExtArgs> = {}>(args?: Subset<T, Product$tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Product model
   */
  interface ProductFieldRefs {
    readonly id: FieldRef<"Product", 'String'>
    readonly name: FieldRef<"Product", 'String'>
    readonly description: FieldRef<"Product", 'String'>
    readonly price: FieldRef<"Product", 'Float'>
    readonly imageUrl: FieldRef<"Product", 'String'>
    readonly active: FieldRef<"Product", 'Boolean'>
    readonly categoryId: FieldRef<"Product", 'String'>
    readonly createdAt: FieldRef<"Product", 'DateTime'>
    readonly updatedAt: FieldRef<"Product", 'DateTime'>
    readonly canBuy: FieldRef<"Product", 'Boolean'>
    readonly canHire: FieldRef<"Product", 'Boolean'>
    readonly hasRangePrice: FieldRef<"Product", 'Boolean'>
    readonly hasUnitPrice: FieldRef<"Product", 'Boolean'>
    readonly maxPrice: FieldRef<"Product", 'Float'>
    readonly minPrice: FieldRef<"Product", 'Float'>
    readonly minQuantity: FieldRef<"Product", 'Int'>
    readonly unitPrice: FieldRef<"Product", 'Float'>
    readonly unitType: FieldRef<"Product", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Product findUnique
   */
  export type ProductFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findUniqueOrThrow
   */
  export type ProductFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findFirst
   */
  export type ProductFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findFirstOrThrow
   */
  export type ProductFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findMany
   */
  export type ProductFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Products to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product create
   */
  export type ProductCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to create a Product.
     */
    data: XOR<ProductCreateInput, ProductUncheckedCreateInput>
  }

  /**
   * Product createMany
   */
  export type ProductCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Product createManyAndReturn
   */
  export type ProductCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product update
   */
  export type ProductUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to update a Product.
     */
    data: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
    /**
     * Choose, which Product to update.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product updateMany
   */
  export type ProductUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to update.
     */
    limit?: number
  }

  /**
   * Product updateManyAndReturn
   */
  export type ProductUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * Product upsert
   */
  export type ProductUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The filter to search for the Product to update in case it exists.
     */
    where: ProductWhereUniqueInput
    /**
     * In case the Product found by the `where` argument doesn't exist, create a new Product with this data.
     */
    create: XOR<ProductCreateInput, ProductUncheckedCreateInput>
    /**
     * In case the Product was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
  }

  /**
   * Product delete
   */
  export type ProductDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter which Product to delete.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product deleteMany
   */
  export type ProductDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Products to delete
     */
    where?: ProductWhereInput
    /**
     * Limit how many Products to delete.
     */
    limit?: number
  }

  /**
   * Product.EventItem
   */
  export type Product$EventItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItem
     */
    select?: EventItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItem
     */
    omit?: EventItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemInclude<ExtArgs> | null
    where?: EventItemWhereInput
    orderBy?: EventItemOrderByWithRelationInput | EventItemOrderByWithRelationInput[]
    cursor?: EventItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventItemScalarFieldEnum | EventItemScalarFieldEnum[]
  }

  /**
   * Product.OrderItem
   */
  export type Product$OrderItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    cursor?: OrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * Product.ProductCategory
   */
  export type Product$ProductCategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    where?: ProductCategoryWhereInput
  }

  /**
   * Product.ProductOption
   */
  export type Product$ProductOptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOption
     */
    select?: ProductOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOption
     */
    omit?: ProductOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionInclude<ExtArgs> | null
    where?: ProductOptionWhereInput
    orderBy?: ProductOptionOrderByWithRelationInput | ProductOptionOrderByWithRelationInput[]
    cursor?: ProductOptionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductOptionScalarFieldEnum | ProductOptionScalarFieldEnum[]
  }

  /**
   * Product.task_templates
   */
  export type Product$task_templatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_templates
     */
    select?: task_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_templates
     */
    omit?: task_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_templatesInclude<ExtArgs> | null
    where?: task_templatesWhereInput
    orderBy?: task_templatesOrderByWithRelationInput | task_templatesOrderByWithRelationInput[]
    cursor?: task_templatesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Task_templatesScalarFieldEnum | Task_templatesScalarFieldEnum[]
  }

  /**
   * Product.tasks
   */
  export type Product$tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    where?: tasksWhereInput
    orderBy?: tasksOrderByWithRelationInput | tasksOrderByWithRelationInput[]
    cursor?: tasksWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TasksScalarFieldEnum | TasksScalarFieldEnum[]
  }

  /**
   * Product without action
   */
  export type ProductDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
  }


  /**
   * Model StaffInvitation
   */

  export type AggregateStaffInvitation = {
    _count: StaffInvitationCountAggregateOutputType | null
    _min: StaffInvitationMinAggregateOutputType | null
    _max: StaffInvitationMaxAggregateOutputType | null
  }

  export type StaffInvitationMinAggregateOutputType = {
    id: string | null
    email: string | null
    firstName: string | null
    lastName: string | null
    role: string | null
    accessLevel: string | null
    token: string | null
    used: boolean | null
    usedAt: Date | null
    createdAt: Date | null
    expiresAt: Date | null
  }

  export type StaffInvitationMaxAggregateOutputType = {
    id: string | null
    email: string | null
    firstName: string | null
    lastName: string | null
    role: string | null
    accessLevel: string | null
    token: string | null
    used: boolean | null
    usedAt: Date | null
    createdAt: Date | null
    expiresAt: Date | null
  }

  export type StaffInvitationCountAggregateOutputType = {
    id: number
    email: number
    firstName: number
    lastName: number
    role: number
    accessLevel: number
    token: number
    used: number
    usedAt: number
    createdAt: number
    expiresAt: number
    _all: number
  }


  export type StaffInvitationMinAggregateInputType = {
    id?: true
    email?: true
    firstName?: true
    lastName?: true
    role?: true
    accessLevel?: true
    token?: true
    used?: true
    usedAt?: true
    createdAt?: true
    expiresAt?: true
  }

  export type StaffInvitationMaxAggregateInputType = {
    id?: true
    email?: true
    firstName?: true
    lastName?: true
    role?: true
    accessLevel?: true
    token?: true
    used?: true
    usedAt?: true
    createdAt?: true
    expiresAt?: true
  }

  export type StaffInvitationCountAggregateInputType = {
    id?: true
    email?: true
    firstName?: true
    lastName?: true
    role?: true
    accessLevel?: true
    token?: true
    used?: true
    usedAt?: true
    createdAt?: true
    expiresAt?: true
    _all?: true
  }

  export type StaffInvitationAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StaffInvitation to aggregate.
     */
    where?: StaffInvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StaffInvitations to fetch.
     */
    orderBy?: StaffInvitationOrderByWithRelationInput | StaffInvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StaffInvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StaffInvitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StaffInvitations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StaffInvitations
    **/
    _count?: true | StaffInvitationCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StaffInvitationMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StaffInvitationMaxAggregateInputType
  }

  export type GetStaffInvitationAggregateType<T extends StaffInvitationAggregateArgs> = {
        [P in keyof T & keyof AggregateStaffInvitation]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStaffInvitation[P]>
      : GetScalarType<T[P], AggregateStaffInvitation[P]>
  }




  export type StaffInvitationGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StaffInvitationWhereInput
    orderBy?: StaffInvitationOrderByWithAggregationInput | StaffInvitationOrderByWithAggregationInput[]
    by: StaffInvitationScalarFieldEnum[] | StaffInvitationScalarFieldEnum
    having?: StaffInvitationScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StaffInvitationCountAggregateInputType | true
    _min?: StaffInvitationMinAggregateInputType
    _max?: StaffInvitationMaxAggregateInputType
  }

  export type StaffInvitationGroupByOutputType = {
    id: string
    email: string
    firstName: string
    lastName: string
    role: string
    accessLevel: string
    token: string
    used: boolean
    usedAt: Date | null
    createdAt: Date
    expiresAt: Date
    _count: StaffInvitationCountAggregateOutputType | null
    _min: StaffInvitationMinAggregateOutputType | null
    _max: StaffInvitationMaxAggregateOutputType | null
  }

  type GetStaffInvitationGroupByPayload<T extends StaffInvitationGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StaffInvitationGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StaffInvitationGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StaffInvitationGroupByOutputType[P]>
            : GetScalarType<T[P], StaffInvitationGroupByOutputType[P]>
        }
      >
    >


  export type StaffInvitationSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    role?: boolean
    accessLevel?: boolean
    token?: boolean
    used?: boolean
    usedAt?: boolean
    createdAt?: boolean
    expiresAt?: boolean
  }, ExtArgs["result"]["staffInvitation"]>

  export type StaffInvitationSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    role?: boolean
    accessLevel?: boolean
    token?: boolean
    used?: boolean
    usedAt?: boolean
    createdAt?: boolean
    expiresAt?: boolean
  }, ExtArgs["result"]["staffInvitation"]>

  export type StaffInvitationSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    role?: boolean
    accessLevel?: boolean
    token?: boolean
    used?: boolean
    usedAt?: boolean
    createdAt?: boolean
    expiresAt?: boolean
  }, ExtArgs["result"]["staffInvitation"]>

  export type StaffInvitationSelectScalar = {
    id?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    role?: boolean
    accessLevel?: boolean
    token?: boolean
    used?: boolean
    usedAt?: boolean
    createdAt?: boolean
    expiresAt?: boolean
  }

  export type StaffInvitationOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "firstName" | "lastName" | "role" | "accessLevel" | "token" | "used" | "usedAt" | "createdAt" | "expiresAt", ExtArgs["result"]["staffInvitation"]>

  export type $StaffInvitationPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StaffInvitation"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      firstName: string
      lastName: string
      role: string
      accessLevel: string
      token: string
      used: boolean
      usedAt: Date | null
      createdAt: Date
      expiresAt: Date
    }, ExtArgs["result"]["staffInvitation"]>
    composites: {}
  }

  type StaffInvitationGetPayload<S extends boolean | null | undefined | StaffInvitationDefaultArgs> = $Result.GetResult<Prisma.$StaffInvitationPayload, S>

  type StaffInvitationCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<StaffInvitationFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: StaffInvitationCountAggregateInputType | true
    }

  export interface StaffInvitationDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StaffInvitation'], meta: { name: 'StaffInvitation' } }
    /**
     * Find zero or one StaffInvitation that matches the filter.
     * @param {StaffInvitationFindUniqueArgs} args - Arguments to find a StaffInvitation
     * @example
     * // Get one StaffInvitation
     * const staffInvitation = await prisma.staffInvitation.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StaffInvitationFindUniqueArgs>(args: SelectSubset<T, StaffInvitationFindUniqueArgs<ExtArgs>>): Prisma__StaffInvitationClient<$Result.GetResult<Prisma.$StaffInvitationPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one StaffInvitation that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {StaffInvitationFindUniqueOrThrowArgs} args - Arguments to find a StaffInvitation
     * @example
     * // Get one StaffInvitation
     * const staffInvitation = await prisma.staffInvitation.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StaffInvitationFindUniqueOrThrowArgs>(args: SelectSubset<T, StaffInvitationFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StaffInvitationClient<$Result.GetResult<Prisma.$StaffInvitationPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StaffInvitation that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StaffInvitationFindFirstArgs} args - Arguments to find a StaffInvitation
     * @example
     * // Get one StaffInvitation
     * const staffInvitation = await prisma.staffInvitation.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StaffInvitationFindFirstArgs>(args?: SelectSubset<T, StaffInvitationFindFirstArgs<ExtArgs>>): Prisma__StaffInvitationClient<$Result.GetResult<Prisma.$StaffInvitationPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first StaffInvitation that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StaffInvitationFindFirstOrThrowArgs} args - Arguments to find a StaffInvitation
     * @example
     * // Get one StaffInvitation
     * const staffInvitation = await prisma.staffInvitation.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StaffInvitationFindFirstOrThrowArgs>(args?: SelectSubset<T, StaffInvitationFindFirstOrThrowArgs<ExtArgs>>): Prisma__StaffInvitationClient<$Result.GetResult<Prisma.$StaffInvitationPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more StaffInvitations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StaffInvitationFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StaffInvitations
     * const staffInvitations = await prisma.staffInvitation.findMany()
     * 
     * // Get first 10 StaffInvitations
     * const staffInvitations = await prisma.staffInvitation.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const staffInvitationWithIdOnly = await prisma.staffInvitation.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StaffInvitationFindManyArgs>(args?: SelectSubset<T, StaffInvitationFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StaffInvitationPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a StaffInvitation.
     * @param {StaffInvitationCreateArgs} args - Arguments to create a StaffInvitation.
     * @example
     * // Create one StaffInvitation
     * const StaffInvitation = await prisma.staffInvitation.create({
     *   data: {
     *     // ... data to create a StaffInvitation
     *   }
     * })
     * 
     */
    create<T extends StaffInvitationCreateArgs>(args: SelectSubset<T, StaffInvitationCreateArgs<ExtArgs>>): Prisma__StaffInvitationClient<$Result.GetResult<Prisma.$StaffInvitationPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many StaffInvitations.
     * @param {StaffInvitationCreateManyArgs} args - Arguments to create many StaffInvitations.
     * @example
     * // Create many StaffInvitations
     * const staffInvitation = await prisma.staffInvitation.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StaffInvitationCreateManyArgs>(args?: SelectSubset<T, StaffInvitationCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many StaffInvitations and returns the data saved in the database.
     * @param {StaffInvitationCreateManyAndReturnArgs} args - Arguments to create many StaffInvitations.
     * @example
     * // Create many StaffInvitations
     * const staffInvitation = await prisma.staffInvitation.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many StaffInvitations and only return the `id`
     * const staffInvitationWithIdOnly = await prisma.staffInvitation.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends StaffInvitationCreateManyAndReturnArgs>(args?: SelectSubset<T, StaffInvitationCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StaffInvitationPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a StaffInvitation.
     * @param {StaffInvitationDeleteArgs} args - Arguments to delete one StaffInvitation.
     * @example
     * // Delete one StaffInvitation
     * const StaffInvitation = await prisma.staffInvitation.delete({
     *   where: {
     *     // ... filter to delete one StaffInvitation
     *   }
     * })
     * 
     */
    delete<T extends StaffInvitationDeleteArgs>(args: SelectSubset<T, StaffInvitationDeleteArgs<ExtArgs>>): Prisma__StaffInvitationClient<$Result.GetResult<Prisma.$StaffInvitationPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one StaffInvitation.
     * @param {StaffInvitationUpdateArgs} args - Arguments to update one StaffInvitation.
     * @example
     * // Update one StaffInvitation
     * const staffInvitation = await prisma.staffInvitation.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StaffInvitationUpdateArgs>(args: SelectSubset<T, StaffInvitationUpdateArgs<ExtArgs>>): Prisma__StaffInvitationClient<$Result.GetResult<Prisma.$StaffInvitationPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more StaffInvitations.
     * @param {StaffInvitationDeleteManyArgs} args - Arguments to filter StaffInvitations to delete.
     * @example
     * // Delete a few StaffInvitations
     * const { count } = await prisma.staffInvitation.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StaffInvitationDeleteManyArgs>(args?: SelectSubset<T, StaffInvitationDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StaffInvitations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StaffInvitationUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StaffInvitations
     * const staffInvitation = await prisma.staffInvitation.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StaffInvitationUpdateManyArgs>(args: SelectSubset<T, StaffInvitationUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StaffInvitations and returns the data updated in the database.
     * @param {StaffInvitationUpdateManyAndReturnArgs} args - Arguments to update many StaffInvitations.
     * @example
     * // Update many StaffInvitations
     * const staffInvitation = await prisma.staffInvitation.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more StaffInvitations and only return the `id`
     * const staffInvitationWithIdOnly = await prisma.staffInvitation.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends StaffInvitationUpdateManyAndReturnArgs>(args: SelectSubset<T, StaffInvitationUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StaffInvitationPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one StaffInvitation.
     * @param {StaffInvitationUpsertArgs} args - Arguments to update or create a StaffInvitation.
     * @example
     * // Update or create a StaffInvitation
     * const staffInvitation = await prisma.staffInvitation.upsert({
     *   create: {
     *     // ... data to create a StaffInvitation
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StaffInvitation we want to update
     *   }
     * })
     */
    upsert<T extends StaffInvitationUpsertArgs>(args: SelectSubset<T, StaffInvitationUpsertArgs<ExtArgs>>): Prisma__StaffInvitationClient<$Result.GetResult<Prisma.$StaffInvitationPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of StaffInvitations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StaffInvitationCountArgs} args - Arguments to filter StaffInvitations to count.
     * @example
     * // Count the number of StaffInvitations
     * const count = await prisma.staffInvitation.count({
     *   where: {
     *     // ... the filter for the StaffInvitations we want to count
     *   }
     * })
    **/
    count<T extends StaffInvitationCountArgs>(
      args?: Subset<T, StaffInvitationCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StaffInvitationCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StaffInvitation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StaffInvitationAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StaffInvitationAggregateArgs>(args: Subset<T, StaffInvitationAggregateArgs>): Prisma.PrismaPromise<GetStaffInvitationAggregateType<T>>

    /**
     * Group by StaffInvitation.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StaffInvitationGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StaffInvitationGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StaffInvitationGroupByArgs['orderBy'] }
        : { orderBy?: StaffInvitationGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StaffInvitationGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStaffInvitationGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StaffInvitation model
   */
  readonly fields: StaffInvitationFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StaffInvitation.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StaffInvitationClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StaffInvitation model
   */
  interface StaffInvitationFieldRefs {
    readonly id: FieldRef<"StaffInvitation", 'String'>
    readonly email: FieldRef<"StaffInvitation", 'String'>
    readonly firstName: FieldRef<"StaffInvitation", 'String'>
    readonly lastName: FieldRef<"StaffInvitation", 'String'>
    readonly role: FieldRef<"StaffInvitation", 'String'>
    readonly accessLevel: FieldRef<"StaffInvitation", 'String'>
    readonly token: FieldRef<"StaffInvitation", 'String'>
    readonly used: FieldRef<"StaffInvitation", 'Boolean'>
    readonly usedAt: FieldRef<"StaffInvitation", 'DateTime'>
    readonly createdAt: FieldRef<"StaffInvitation", 'DateTime'>
    readonly expiresAt: FieldRef<"StaffInvitation", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * StaffInvitation findUnique
   */
  export type StaffInvitationFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffInvitation
     */
    select?: StaffInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StaffInvitation
     */
    omit?: StaffInvitationOmit<ExtArgs> | null
    /**
     * Filter, which StaffInvitation to fetch.
     */
    where: StaffInvitationWhereUniqueInput
  }

  /**
   * StaffInvitation findUniqueOrThrow
   */
  export type StaffInvitationFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffInvitation
     */
    select?: StaffInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StaffInvitation
     */
    omit?: StaffInvitationOmit<ExtArgs> | null
    /**
     * Filter, which StaffInvitation to fetch.
     */
    where: StaffInvitationWhereUniqueInput
  }

  /**
   * StaffInvitation findFirst
   */
  export type StaffInvitationFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffInvitation
     */
    select?: StaffInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StaffInvitation
     */
    omit?: StaffInvitationOmit<ExtArgs> | null
    /**
     * Filter, which StaffInvitation to fetch.
     */
    where?: StaffInvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StaffInvitations to fetch.
     */
    orderBy?: StaffInvitationOrderByWithRelationInput | StaffInvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StaffInvitations.
     */
    cursor?: StaffInvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StaffInvitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StaffInvitations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StaffInvitations.
     */
    distinct?: StaffInvitationScalarFieldEnum | StaffInvitationScalarFieldEnum[]
  }

  /**
   * StaffInvitation findFirstOrThrow
   */
  export type StaffInvitationFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffInvitation
     */
    select?: StaffInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StaffInvitation
     */
    omit?: StaffInvitationOmit<ExtArgs> | null
    /**
     * Filter, which StaffInvitation to fetch.
     */
    where?: StaffInvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StaffInvitations to fetch.
     */
    orderBy?: StaffInvitationOrderByWithRelationInput | StaffInvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StaffInvitations.
     */
    cursor?: StaffInvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StaffInvitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StaffInvitations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StaffInvitations.
     */
    distinct?: StaffInvitationScalarFieldEnum | StaffInvitationScalarFieldEnum[]
  }

  /**
   * StaffInvitation findMany
   */
  export type StaffInvitationFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffInvitation
     */
    select?: StaffInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StaffInvitation
     */
    omit?: StaffInvitationOmit<ExtArgs> | null
    /**
     * Filter, which StaffInvitations to fetch.
     */
    where?: StaffInvitationWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StaffInvitations to fetch.
     */
    orderBy?: StaffInvitationOrderByWithRelationInput | StaffInvitationOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StaffInvitations.
     */
    cursor?: StaffInvitationWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StaffInvitations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StaffInvitations.
     */
    skip?: number
    distinct?: StaffInvitationScalarFieldEnum | StaffInvitationScalarFieldEnum[]
  }

  /**
   * StaffInvitation create
   */
  export type StaffInvitationCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffInvitation
     */
    select?: StaffInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StaffInvitation
     */
    omit?: StaffInvitationOmit<ExtArgs> | null
    /**
     * The data needed to create a StaffInvitation.
     */
    data: XOR<StaffInvitationCreateInput, StaffInvitationUncheckedCreateInput>
  }

  /**
   * StaffInvitation createMany
   */
  export type StaffInvitationCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StaffInvitations.
     */
    data: StaffInvitationCreateManyInput | StaffInvitationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StaffInvitation createManyAndReturn
   */
  export type StaffInvitationCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffInvitation
     */
    select?: StaffInvitationSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StaffInvitation
     */
    omit?: StaffInvitationOmit<ExtArgs> | null
    /**
     * The data used to create many StaffInvitations.
     */
    data: StaffInvitationCreateManyInput | StaffInvitationCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StaffInvitation update
   */
  export type StaffInvitationUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffInvitation
     */
    select?: StaffInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StaffInvitation
     */
    omit?: StaffInvitationOmit<ExtArgs> | null
    /**
     * The data needed to update a StaffInvitation.
     */
    data: XOR<StaffInvitationUpdateInput, StaffInvitationUncheckedUpdateInput>
    /**
     * Choose, which StaffInvitation to update.
     */
    where: StaffInvitationWhereUniqueInput
  }

  /**
   * StaffInvitation updateMany
   */
  export type StaffInvitationUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StaffInvitations.
     */
    data: XOR<StaffInvitationUpdateManyMutationInput, StaffInvitationUncheckedUpdateManyInput>
    /**
     * Filter which StaffInvitations to update
     */
    where?: StaffInvitationWhereInput
    /**
     * Limit how many StaffInvitations to update.
     */
    limit?: number
  }

  /**
   * StaffInvitation updateManyAndReturn
   */
  export type StaffInvitationUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffInvitation
     */
    select?: StaffInvitationSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the StaffInvitation
     */
    omit?: StaffInvitationOmit<ExtArgs> | null
    /**
     * The data used to update StaffInvitations.
     */
    data: XOR<StaffInvitationUpdateManyMutationInput, StaffInvitationUncheckedUpdateManyInput>
    /**
     * Filter which StaffInvitations to update
     */
    where?: StaffInvitationWhereInput
    /**
     * Limit how many StaffInvitations to update.
     */
    limit?: number
  }

  /**
   * StaffInvitation upsert
   */
  export type StaffInvitationUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffInvitation
     */
    select?: StaffInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StaffInvitation
     */
    omit?: StaffInvitationOmit<ExtArgs> | null
    /**
     * The filter to search for the StaffInvitation to update in case it exists.
     */
    where: StaffInvitationWhereUniqueInput
    /**
     * In case the StaffInvitation found by the `where` argument doesn't exist, create a new StaffInvitation with this data.
     */
    create: XOR<StaffInvitationCreateInput, StaffInvitationUncheckedCreateInput>
    /**
     * In case the StaffInvitation was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StaffInvitationUpdateInput, StaffInvitationUncheckedUpdateInput>
  }

  /**
   * StaffInvitation delete
   */
  export type StaffInvitationDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffInvitation
     */
    select?: StaffInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StaffInvitation
     */
    omit?: StaffInvitationOmit<ExtArgs> | null
    /**
     * Filter which StaffInvitation to delete.
     */
    where: StaffInvitationWhereUniqueInput
  }

  /**
   * StaffInvitation deleteMany
   */
  export type StaffInvitationDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StaffInvitations to delete
     */
    where?: StaffInvitationWhereInput
    /**
     * Limit how many StaffInvitations to delete.
     */
    limit?: number
  }

  /**
   * StaffInvitation without action
   */
  export type StaffInvitationDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StaffInvitation
     */
    select?: StaffInvitationSelect<ExtArgs> | null
    /**
     * Omit specific fields from the StaffInvitation
     */
    omit?: StaffInvitationOmit<ExtArgs> | null
  }


  /**
   * Model ProductCategory
   */

  export type AggregateProductCategory = {
    _count: ProductCategoryCountAggregateOutputType | null
    _min: ProductCategoryMinAggregateOutputType | null
    _max: ProductCategoryMaxAggregateOutputType | null
  }

  export type ProductCategoryMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    active: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductCategoryMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    active: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductCategoryCountAggregateOutputType = {
    id: number
    name: number
    description: number
    active: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProductCategoryMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    active?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductCategoryMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    active?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductCategoryCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    active?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProductCategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductCategory to aggregate.
     */
    where?: ProductCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductCategories to fetch.
     */
    orderBy?: ProductCategoryOrderByWithRelationInput | ProductCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductCategories
    **/
    _count?: true | ProductCategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductCategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductCategoryMaxAggregateInputType
  }

  export type GetProductCategoryAggregateType<T extends ProductCategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateProductCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductCategory[P]>
      : GetScalarType<T[P], AggregateProductCategory[P]>
  }




  export type ProductCategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductCategoryWhereInput
    orderBy?: ProductCategoryOrderByWithAggregationInput | ProductCategoryOrderByWithAggregationInput[]
    by: ProductCategoryScalarFieldEnum[] | ProductCategoryScalarFieldEnum
    having?: ProductCategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductCategoryCountAggregateInputType | true
    _min?: ProductCategoryMinAggregateInputType
    _max?: ProductCategoryMaxAggregateInputType
  }

  export type ProductCategoryGroupByOutputType = {
    id: string
    name: string
    description: string | null
    active: boolean
    createdAt: Date
    updatedAt: Date
    _count: ProductCategoryCountAggregateOutputType | null
    _min: ProductCategoryMinAggregateOutputType | null
    _max: ProductCategoryMaxAggregateOutputType | null
  }

  type GetProductCategoryGroupByPayload<T extends ProductCategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductCategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductCategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductCategoryGroupByOutputType[P]>
            : GetScalarType<T[P], ProductCategoryGroupByOutputType[P]>
        }
      >
    >


  export type ProductCategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Product?: boolean | ProductCategory$ProductArgs<ExtArgs>
    _count?: boolean | ProductCategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productCategory"]>

  export type ProductCategorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["productCategory"]>

  export type ProductCategorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["productCategory"]>

  export type ProductCategorySelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProductCategoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "description" | "active" | "createdAt" | "updatedAt", ExtArgs["result"]["productCategory"]>
  export type ProductCategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Product?: boolean | ProductCategory$ProductArgs<ExtArgs>
    _count?: boolean | ProductCategoryCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductCategoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type ProductCategoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ProductCategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductCategory"
    objects: {
      Product: Prisma.$ProductPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      active: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["productCategory"]>
    composites: {}
  }

  type ProductCategoryGetPayload<S extends boolean | null | undefined | ProductCategoryDefaultArgs> = $Result.GetResult<Prisma.$ProductCategoryPayload, S>

  type ProductCategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductCategoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductCategoryCountAggregateInputType | true
    }

  export interface ProductCategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductCategory'], meta: { name: 'ProductCategory' } }
    /**
     * Find zero or one ProductCategory that matches the filter.
     * @param {ProductCategoryFindUniqueArgs} args - Arguments to find a ProductCategory
     * @example
     * // Get one ProductCategory
     * const productCategory = await prisma.productCategory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductCategoryFindUniqueArgs>(args: SelectSubset<T, ProductCategoryFindUniqueArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductCategory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductCategoryFindUniqueOrThrowArgs} args - Arguments to find a ProductCategory
     * @example
     * // Get one ProductCategory
     * const productCategory = await prisma.productCategory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductCategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductCategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductCategory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryFindFirstArgs} args - Arguments to find a ProductCategory
     * @example
     * // Get one ProductCategory
     * const productCategory = await prisma.productCategory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductCategoryFindFirstArgs>(args?: SelectSubset<T, ProductCategoryFindFirstArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductCategory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryFindFirstOrThrowArgs} args - Arguments to find a ProductCategory
     * @example
     * // Get one ProductCategory
     * const productCategory = await prisma.productCategory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductCategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductCategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductCategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductCategories
     * const productCategories = await prisma.productCategory.findMany()
     * 
     * // Get first 10 ProductCategories
     * const productCategories = await prisma.productCategory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productCategoryWithIdOnly = await prisma.productCategory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductCategoryFindManyArgs>(args?: SelectSubset<T, ProductCategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductCategory.
     * @param {ProductCategoryCreateArgs} args - Arguments to create a ProductCategory.
     * @example
     * // Create one ProductCategory
     * const ProductCategory = await prisma.productCategory.create({
     *   data: {
     *     // ... data to create a ProductCategory
     *   }
     * })
     * 
     */
    create<T extends ProductCategoryCreateArgs>(args: SelectSubset<T, ProductCategoryCreateArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductCategories.
     * @param {ProductCategoryCreateManyArgs} args - Arguments to create many ProductCategories.
     * @example
     * // Create many ProductCategories
     * const productCategory = await prisma.productCategory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductCategoryCreateManyArgs>(args?: SelectSubset<T, ProductCategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductCategories and returns the data saved in the database.
     * @param {ProductCategoryCreateManyAndReturnArgs} args - Arguments to create many ProductCategories.
     * @example
     * // Create many ProductCategories
     * const productCategory = await prisma.productCategory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductCategories and only return the `id`
     * const productCategoryWithIdOnly = await prisma.productCategory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductCategoryCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductCategoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductCategory.
     * @param {ProductCategoryDeleteArgs} args - Arguments to delete one ProductCategory.
     * @example
     * // Delete one ProductCategory
     * const ProductCategory = await prisma.productCategory.delete({
     *   where: {
     *     // ... filter to delete one ProductCategory
     *   }
     * })
     * 
     */
    delete<T extends ProductCategoryDeleteArgs>(args: SelectSubset<T, ProductCategoryDeleteArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductCategory.
     * @param {ProductCategoryUpdateArgs} args - Arguments to update one ProductCategory.
     * @example
     * // Update one ProductCategory
     * const productCategory = await prisma.productCategory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductCategoryUpdateArgs>(args: SelectSubset<T, ProductCategoryUpdateArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductCategories.
     * @param {ProductCategoryDeleteManyArgs} args - Arguments to filter ProductCategories to delete.
     * @example
     * // Delete a few ProductCategories
     * const { count } = await prisma.productCategory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductCategoryDeleteManyArgs>(args?: SelectSubset<T, ProductCategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductCategories
     * const productCategory = await prisma.productCategory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductCategoryUpdateManyArgs>(args: SelectSubset<T, ProductCategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductCategories and returns the data updated in the database.
     * @param {ProductCategoryUpdateManyAndReturnArgs} args - Arguments to update many ProductCategories.
     * @example
     * // Update many ProductCategories
     * const productCategory = await prisma.productCategory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductCategories and only return the `id`
     * const productCategoryWithIdOnly = await prisma.productCategory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductCategoryUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductCategoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductCategory.
     * @param {ProductCategoryUpsertArgs} args - Arguments to update or create a ProductCategory.
     * @example
     * // Update or create a ProductCategory
     * const productCategory = await prisma.productCategory.upsert({
     *   create: {
     *     // ... data to create a ProductCategory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductCategory we want to update
     *   }
     * })
     */
    upsert<T extends ProductCategoryUpsertArgs>(args: SelectSubset<T, ProductCategoryUpsertArgs<ExtArgs>>): Prisma__ProductCategoryClient<$Result.GetResult<Prisma.$ProductCategoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductCategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryCountArgs} args - Arguments to filter ProductCategories to count.
     * @example
     * // Count the number of ProductCategories
     * const count = await prisma.productCategory.count({
     *   where: {
     *     // ... the filter for the ProductCategories we want to count
     *   }
     * })
    **/
    count<T extends ProductCategoryCountArgs>(
      args?: Subset<T, ProductCategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductCategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductCategoryAggregateArgs>(args: Subset<T, ProductCategoryAggregateArgs>): Prisma.PrismaPromise<GetProductCategoryAggregateType<T>>

    /**
     * Group by ProductCategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductCategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductCategoryGroupByArgs['orderBy'] }
        : { orderBy?: ProductCategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductCategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductCategory model
   */
  readonly fields: ProductCategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductCategory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductCategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Product<T extends ProductCategory$ProductArgs<ExtArgs> = {}>(args?: Subset<T, ProductCategory$ProductArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductCategory model
   */
  interface ProductCategoryFieldRefs {
    readonly id: FieldRef<"ProductCategory", 'String'>
    readonly name: FieldRef<"ProductCategory", 'String'>
    readonly description: FieldRef<"ProductCategory", 'String'>
    readonly active: FieldRef<"ProductCategory", 'Boolean'>
    readonly createdAt: FieldRef<"ProductCategory", 'DateTime'>
    readonly updatedAt: FieldRef<"ProductCategory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductCategory findUnique
   */
  export type ProductCategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategory to fetch.
     */
    where: ProductCategoryWhereUniqueInput
  }

  /**
   * ProductCategory findUniqueOrThrow
   */
  export type ProductCategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategory to fetch.
     */
    where: ProductCategoryWhereUniqueInput
  }

  /**
   * ProductCategory findFirst
   */
  export type ProductCategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategory to fetch.
     */
    where?: ProductCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductCategories to fetch.
     */
    orderBy?: ProductCategoryOrderByWithRelationInput | ProductCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductCategories.
     */
    cursor?: ProductCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductCategories.
     */
    distinct?: ProductCategoryScalarFieldEnum | ProductCategoryScalarFieldEnum[]
  }

  /**
   * ProductCategory findFirstOrThrow
   */
  export type ProductCategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategory to fetch.
     */
    where?: ProductCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductCategories to fetch.
     */
    orderBy?: ProductCategoryOrderByWithRelationInput | ProductCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductCategories.
     */
    cursor?: ProductCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductCategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductCategories.
     */
    distinct?: ProductCategoryScalarFieldEnum | ProductCategoryScalarFieldEnum[]
  }

  /**
   * ProductCategory findMany
   */
  export type ProductCategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter, which ProductCategories to fetch.
     */
    where?: ProductCategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductCategories to fetch.
     */
    orderBy?: ProductCategoryOrderByWithRelationInput | ProductCategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductCategories.
     */
    cursor?: ProductCategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductCategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductCategories.
     */
    skip?: number
    distinct?: ProductCategoryScalarFieldEnum | ProductCategoryScalarFieldEnum[]
  }

  /**
   * ProductCategory create
   */
  export type ProductCategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductCategory.
     */
    data: XOR<ProductCategoryCreateInput, ProductCategoryUncheckedCreateInput>
  }

  /**
   * ProductCategory createMany
   */
  export type ProductCategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductCategories.
     */
    data: ProductCategoryCreateManyInput | ProductCategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductCategory createManyAndReturn
   */
  export type ProductCategoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * The data used to create many ProductCategories.
     */
    data: ProductCategoryCreateManyInput | ProductCategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductCategory update
   */
  export type ProductCategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductCategory.
     */
    data: XOR<ProductCategoryUpdateInput, ProductCategoryUncheckedUpdateInput>
    /**
     * Choose, which ProductCategory to update.
     */
    where: ProductCategoryWhereUniqueInput
  }

  /**
   * ProductCategory updateMany
   */
  export type ProductCategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductCategories.
     */
    data: XOR<ProductCategoryUpdateManyMutationInput, ProductCategoryUncheckedUpdateManyInput>
    /**
     * Filter which ProductCategories to update
     */
    where?: ProductCategoryWhereInput
    /**
     * Limit how many ProductCategories to update.
     */
    limit?: number
  }

  /**
   * ProductCategory updateManyAndReturn
   */
  export type ProductCategoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * The data used to update ProductCategories.
     */
    data: XOR<ProductCategoryUpdateManyMutationInput, ProductCategoryUncheckedUpdateManyInput>
    /**
     * Filter which ProductCategories to update
     */
    where?: ProductCategoryWhereInput
    /**
     * Limit how many ProductCategories to update.
     */
    limit?: number
  }

  /**
   * ProductCategory upsert
   */
  export type ProductCategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductCategory to update in case it exists.
     */
    where: ProductCategoryWhereUniqueInput
    /**
     * In case the ProductCategory found by the `where` argument doesn't exist, create a new ProductCategory with this data.
     */
    create: XOR<ProductCategoryCreateInput, ProductCategoryUncheckedCreateInput>
    /**
     * In case the ProductCategory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductCategoryUpdateInput, ProductCategoryUncheckedUpdateInput>
  }

  /**
   * ProductCategory delete
   */
  export type ProductCategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
    /**
     * Filter which ProductCategory to delete.
     */
    where: ProductCategoryWhereUniqueInput
  }

  /**
   * ProductCategory deleteMany
   */
  export type ProductCategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductCategories to delete
     */
    where?: ProductCategoryWhereInput
    /**
     * Limit how many ProductCategories to delete.
     */
    limit?: number
  }

  /**
   * ProductCategory.Product
   */
  export type ProductCategory$ProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * ProductCategory without action
   */
  export type ProductCategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCategory
     */
    select?: ProductCategorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductCategory
     */
    omit?: ProductCategoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductCategoryInclude<ExtArgs> | null
  }


  /**
   * Model EventItem
   */

  export type AggregateEventItem = {
    _count: EventItemCountAggregateOutputType | null
    _avg: EventItemAvgAggregateOutputType | null
    _sum: EventItemSumAggregateOutputType | null
    _min: EventItemMinAggregateOutputType | null
    _max: EventItemMaxAggregateOutputType | null
  }

  export type EventItemAvgAggregateOutputType = {
    quantity: number | null
    unitPrice: number | null
    totalPrice: number | null
  }

  export type EventItemSumAggregateOutputType = {
    quantity: number | null
    unitPrice: number | null
    totalPrice: number | null
  }

  export type EventItemMinAggregateOutputType = {
    id: string | null
    eventId: string | null
    productId: string | null
    quantity: number | null
    unitPrice: number | null
    totalPrice: number | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EventItemMaxAggregateOutputType = {
    id: string | null
    eventId: string | null
    productId: string | null
    quantity: number | null
    unitPrice: number | null
    totalPrice: number | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type EventItemCountAggregateOutputType = {
    id: number
    eventId: number
    productId: number
    quantity: number
    unitPrice: number
    totalPrice: number
    notes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type EventItemAvgAggregateInputType = {
    quantity?: true
    unitPrice?: true
    totalPrice?: true
  }

  export type EventItemSumAggregateInputType = {
    quantity?: true
    unitPrice?: true
    totalPrice?: true
  }

  export type EventItemMinAggregateInputType = {
    id?: true
    eventId?: true
    productId?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EventItemMaxAggregateInputType = {
    id?: true
    eventId?: true
    productId?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type EventItemCountAggregateInputType = {
    id?: true
    eventId?: true
    productId?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type EventItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EventItem to aggregate.
     */
    where?: EventItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventItems to fetch.
     */
    orderBy?: EventItemOrderByWithRelationInput | EventItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EventItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EventItems
    **/
    _count?: true | EventItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EventItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EventItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EventItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EventItemMaxAggregateInputType
  }

  export type GetEventItemAggregateType<T extends EventItemAggregateArgs> = {
        [P in keyof T & keyof AggregateEventItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEventItem[P]>
      : GetScalarType<T[P], AggregateEventItem[P]>
  }




  export type EventItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventItemWhereInput
    orderBy?: EventItemOrderByWithAggregationInput | EventItemOrderByWithAggregationInput[]
    by: EventItemScalarFieldEnum[] | EventItemScalarFieldEnum
    having?: EventItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EventItemCountAggregateInputType | true
    _avg?: EventItemAvgAggregateInputType
    _sum?: EventItemSumAggregateInputType
    _min?: EventItemMinAggregateInputType
    _max?: EventItemMaxAggregateInputType
  }

  export type EventItemGroupByOutputType = {
    id: string
    eventId: string
    productId: string
    quantity: number
    unitPrice: number | null
    totalPrice: number | null
    notes: string | null
    createdAt: Date
    updatedAt: Date
    _count: EventItemCountAggregateOutputType | null
    _avg: EventItemAvgAggregateOutputType | null
    _sum: EventItemSumAggregateOutputType | null
    _min: EventItemMinAggregateOutputType | null
    _max: EventItemMaxAggregateOutputType | null
  }

  type GetEventItemGroupByPayload<T extends EventItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EventItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EventItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EventItemGroupByOutputType[P]>
            : GetScalarType<T[P], EventItemGroupByOutputType[P]>
        }
      >
    >


  export type EventItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    eventId?: boolean
    productId?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Event?: boolean | EventDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
    EventItemOption?: boolean | EventItem$EventItemOptionArgs<ExtArgs>
    _count?: boolean | EventItemCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["eventItem"]>

  export type EventItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    eventId?: boolean
    productId?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Event?: boolean | EventDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["eventItem"]>

  export type EventItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    eventId?: boolean
    productId?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Event?: boolean | EventDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["eventItem"]>

  export type EventItemSelectScalar = {
    id?: boolean
    eventId?: boolean
    productId?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type EventItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "eventId" | "productId" | "quantity" | "unitPrice" | "totalPrice" | "notes" | "createdAt" | "updatedAt", ExtArgs["result"]["eventItem"]>
  export type EventItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Event?: boolean | EventDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
    EventItemOption?: boolean | EventItem$EventItemOptionArgs<ExtArgs>
    _count?: boolean | EventItemCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type EventItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Event?: boolean | EventDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type EventItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Event?: boolean | EventDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $EventItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EventItem"
    objects: {
      Event: Prisma.$EventPayload<ExtArgs>
      Product: Prisma.$ProductPayload<ExtArgs>
      EventItemOption: Prisma.$EventItemOptionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      eventId: string
      productId: string
      quantity: number
      unitPrice: number | null
      totalPrice: number | null
      notes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["eventItem"]>
    composites: {}
  }

  type EventItemGetPayload<S extends boolean | null | undefined | EventItemDefaultArgs> = $Result.GetResult<Prisma.$EventItemPayload, S>

  type EventItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EventItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EventItemCountAggregateInputType | true
    }

  export interface EventItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EventItem'], meta: { name: 'EventItem' } }
    /**
     * Find zero or one EventItem that matches the filter.
     * @param {EventItemFindUniqueArgs} args - Arguments to find a EventItem
     * @example
     * // Get one EventItem
     * const eventItem = await prisma.eventItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EventItemFindUniqueArgs>(args: SelectSubset<T, EventItemFindUniqueArgs<ExtArgs>>): Prisma__EventItemClient<$Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EventItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EventItemFindUniqueOrThrowArgs} args - Arguments to find a EventItem
     * @example
     * // Get one EventItem
     * const eventItem = await prisma.eventItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EventItemFindUniqueOrThrowArgs>(args: SelectSubset<T, EventItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EventItemClient<$Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EventItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventItemFindFirstArgs} args - Arguments to find a EventItem
     * @example
     * // Get one EventItem
     * const eventItem = await prisma.eventItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EventItemFindFirstArgs>(args?: SelectSubset<T, EventItemFindFirstArgs<ExtArgs>>): Prisma__EventItemClient<$Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EventItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventItemFindFirstOrThrowArgs} args - Arguments to find a EventItem
     * @example
     * // Get one EventItem
     * const eventItem = await prisma.eventItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EventItemFindFirstOrThrowArgs>(args?: SelectSubset<T, EventItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__EventItemClient<$Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EventItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EventItems
     * const eventItems = await prisma.eventItem.findMany()
     * 
     * // Get first 10 EventItems
     * const eventItems = await prisma.eventItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eventItemWithIdOnly = await prisma.eventItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EventItemFindManyArgs>(args?: SelectSubset<T, EventItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EventItem.
     * @param {EventItemCreateArgs} args - Arguments to create a EventItem.
     * @example
     * // Create one EventItem
     * const EventItem = await prisma.eventItem.create({
     *   data: {
     *     // ... data to create a EventItem
     *   }
     * })
     * 
     */
    create<T extends EventItemCreateArgs>(args: SelectSubset<T, EventItemCreateArgs<ExtArgs>>): Prisma__EventItemClient<$Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EventItems.
     * @param {EventItemCreateManyArgs} args - Arguments to create many EventItems.
     * @example
     * // Create many EventItems
     * const eventItem = await prisma.eventItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EventItemCreateManyArgs>(args?: SelectSubset<T, EventItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EventItems and returns the data saved in the database.
     * @param {EventItemCreateManyAndReturnArgs} args - Arguments to create many EventItems.
     * @example
     * // Create many EventItems
     * const eventItem = await prisma.eventItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EventItems and only return the `id`
     * const eventItemWithIdOnly = await prisma.eventItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EventItemCreateManyAndReturnArgs>(args?: SelectSubset<T, EventItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EventItem.
     * @param {EventItemDeleteArgs} args - Arguments to delete one EventItem.
     * @example
     * // Delete one EventItem
     * const EventItem = await prisma.eventItem.delete({
     *   where: {
     *     // ... filter to delete one EventItem
     *   }
     * })
     * 
     */
    delete<T extends EventItemDeleteArgs>(args: SelectSubset<T, EventItemDeleteArgs<ExtArgs>>): Prisma__EventItemClient<$Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EventItem.
     * @param {EventItemUpdateArgs} args - Arguments to update one EventItem.
     * @example
     * // Update one EventItem
     * const eventItem = await prisma.eventItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EventItemUpdateArgs>(args: SelectSubset<T, EventItemUpdateArgs<ExtArgs>>): Prisma__EventItemClient<$Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EventItems.
     * @param {EventItemDeleteManyArgs} args - Arguments to filter EventItems to delete.
     * @example
     * // Delete a few EventItems
     * const { count } = await prisma.eventItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EventItemDeleteManyArgs>(args?: SelectSubset<T, EventItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EventItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EventItems
     * const eventItem = await prisma.eventItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EventItemUpdateManyArgs>(args: SelectSubset<T, EventItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EventItems and returns the data updated in the database.
     * @param {EventItemUpdateManyAndReturnArgs} args - Arguments to update many EventItems.
     * @example
     * // Update many EventItems
     * const eventItem = await prisma.eventItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EventItems and only return the `id`
     * const eventItemWithIdOnly = await prisma.eventItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EventItemUpdateManyAndReturnArgs>(args: SelectSubset<T, EventItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EventItem.
     * @param {EventItemUpsertArgs} args - Arguments to update or create a EventItem.
     * @example
     * // Update or create a EventItem
     * const eventItem = await prisma.eventItem.upsert({
     *   create: {
     *     // ... data to create a EventItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EventItem we want to update
     *   }
     * })
     */
    upsert<T extends EventItemUpsertArgs>(args: SelectSubset<T, EventItemUpsertArgs<ExtArgs>>): Prisma__EventItemClient<$Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EventItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventItemCountArgs} args - Arguments to filter EventItems to count.
     * @example
     * // Count the number of EventItems
     * const count = await prisma.eventItem.count({
     *   where: {
     *     // ... the filter for the EventItems we want to count
     *   }
     * })
    **/
    count<T extends EventItemCountArgs>(
      args?: Subset<T, EventItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EventItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EventItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EventItemAggregateArgs>(args: Subset<T, EventItemAggregateArgs>): Prisma.PrismaPromise<GetEventItemAggregateType<T>>

    /**
     * Group by EventItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EventItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EventItemGroupByArgs['orderBy'] }
        : { orderBy?: EventItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EventItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEventItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EventItem model
   */
  readonly fields: EventItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EventItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EventItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Event<T extends EventDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EventDefaultArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    EventItemOption<T extends EventItem$EventItemOptionArgs<ExtArgs> = {}>(args?: Subset<T, EventItem$EventItemOptionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EventItem model
   */
  interface EventItemFieldRefs {
    readonly id: FieldRef<"EventItem", 'String'>
    readonly eventId: FieldRef<"EventItem", 'String'>
    readonly productId: FieldRef<"EventItem", 'String'>
    readonly quantity: FieldRef<"EventItem", 'Int'>
    readonly unitPrice: FieldRef<"EventItem", 'Float'>
    readonly totalPrice: FieldRef<"EventItem", 'Float'>
    readonly notes: FieldRef<"EventItem", 'String'>
    readonly createdAt: FieldRef<"EventItem", 'DateTime'>
    readonly updatedAt: FieldRef<"EventItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * EventItem findUnique
   */
  export type EventItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItem
     */
    select?: EventItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItem
     */
    omit?: EventItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemInclude<ExtArgs> | null
    /**
     * Filter, which EventItem to fetch.
     */
    where: EventItemWhereUniqueInput
  }

  /**
   * EventItem findUniqueOrThrow
   */
  export type EventItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItem
     */
    select?: EventItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItem
     */
    omit?: EventItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemInclude<ExtArgs> | null
    /**
     * Filter, which EventItem to fetch.
     */
    where: EventItemWhereUniqueInput
  }

  /**
   * EventItem findFirst
   */
  export type EventItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItem
     */
    select?: EventItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItem
     */
    omit?: EventItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemInclude<ExtArgs> | null
    /**
     * Filter, which EventItem to fetch.
     */
    where?: EventItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventItems to fetch.
     */
    orderBy?: EventItemOrderByWithRelationInput | EventItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EventItems.
     */
    cursor?: EventItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EventItems.
     */
    distinct?: EventItemScalarFieldEnum | EventItemScalarFieldEnum[]
  }

  /**
   * EventItem findFirstOrThrow
   */
  export type EventItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItem
     */
    select?: EventItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItem
     */
    omit?: EventItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemInclude<ExtArgs> | null
    /**
     * Filter, which EventItem to fetch.
     */
    where?: EventItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventItems to fetch.
     */
    orderBy?: EventItemOrderByWithRelationInput | EventItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EventItems.
     */
    cursor?: EventItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EventItems.
     */
    distinct?: EventItemScalarFieldEnum | EventItemScalarFieldEnum[]
  }

  /**
   * EventItem findMany
   */
  export type EventItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItem
     */
    select?: EventItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItem
     */
    omit?: EventItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemInclude<ExtArgs> | null
    /**
     * Filter, which EventItems to fetch.
     */
    where?: EventItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventItems to fetch.
     */
    orderBy?: EventItemOrderByWithRelationInput | EventItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EventItems.
     */
    cursor?: EventItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventItems.
     */
    skip?: number
    distinct?: EventItemScalarFieldEnum | EventItemScalarFieldEnum[]
  }

  /**
   * EventItem create
   */
  export type EventItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItem
     */
    select?: EventItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItem
     */
    omit?: EventItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemInclude<ExtArgs> | null
    /**
     * The data needed to create a EventItem.
     */
    data: XOR<EventItemCreateInput, EventItemUncheckedCreateInput>
  }

  /**
   * EventItem createMany
   */
  export type EventItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EventItems.
     */
    data: EventItemCreateManyInput | EventItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EventItem createManyAndReturn
   */
  export type EventItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItem
     */
    select?: EventItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EventItem
     */
    omit?: EventItemOmit<ExtArgs> | null
    /**
     * The data used to create many EventItems.
     */
    data: EventItemCreateManyInput | EventItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EventItem update
   */
  export type EventItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItem
     */
    select?: EventItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItem
     */
    omit?: EventItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemInclude<ExtArgs> | null
    /**
     * The data needed to update a EventItem.
     */
    data: XOR<EventItemUpdateInput, EventItemUncheckedUpdateInput>
    /**
     * Choose, which EventItem to update.
     */
    where: EventItemWhereUniqueInput
  }

  /**
   * EventItem updateMany
   */
  export type EventItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EventItems.
     */
    data: XOR<EventItemUpdateManyMutationInput, EventItemUncheckedUpdateManyInput>
    /**
     * Filter which EventItems to update
     */
    where?: EventItemWhereInput
    /**
     * Limit how many EventItems to update.
     */
    limit?: number
  }

  /**
   * EventItem updateManyAndReturn
   */
  export type EventItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItem
     */
    select?: EventItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EventItem
     */
    omit?: EventItemOmit<ExtArgs> | null
    /**
     * The data used to update EventItems.
     */
    data: XOR<EventItemUpdateManyMutationInput, EventItemUncheckedUpdateManyInput>
    /**
     * Filter which EventItems to update
     */
    where?: EventItemWhereInput
    /**
     * Limit how many EventItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * EventItem upsert
   */
  export type EventItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItem
     */
    select?: EventItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItem
     */
    omit?: EventItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemInclude<ExtArgs> | null
    /**
     * The filter to search for the EventItem to update in case it exists.
     */
    where: EventItemWhereUniqueInput
    /**
     * In case the EventItem found by the `where` argument doesn't exist, create a new EventItem with this data.
     */
    create: XOR<EventItemCreateInput, EventItemUncheckedCreateInput>
    /**
     * In case the EventItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EventItemUpdateInput, EventItemUncheckedUpdateInput>
  }

  /**
   * EventItem delete
   */
  export type EventItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItem
     */
    select?: EventItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItem
     */
    omit?: EventItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemInclude<ExtArgs> | null
    /**
     * Filter which EventItem to delete.
     */
    where: EventItemWhereUniqueInput
  }

  /**
   * EventItem deleteMany
   */
  export type EventItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EventItems to delete
     */
    where?: EventItemWhereInput
    /**
     * Limit how many EventItems to delete.
     */
    limit?: number
  }

  /**
   * EventItem.EventItemOption
   */
  export type EventItem$EventItemOptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItemOption
     */
    select?: EventItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItemOption
     */
    omit?: EventItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemOptionInclude<ExtArgs> | null
    where?: EventItemOptionWhereInput
    orderBy?: EventItemOptionOrderByWithRelationInput | EventItemOptionOrderByWithRelationInput[]
    cursor?: EventItemOptionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventItemOptionScalarFieldEnum | EventItemOptionScalarFieldEnum[]
  }

  /**
   * EventItem without action
   */
  export type EventItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItem
     */
    select?: EventItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItem
     */
    omit?: EventItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemInclude<ExtArgs> | null
  }


  /**
   * Model EventItemOption
   */

  export type AggregateEventItemOption = {
    _count: EventItemOptionCountAggregateOutputType | null
    _avg: EventItemOptionAvgAggregateOutputType | null
    _sum: EventItemOptionSumAggregateOutputType | null
    _min: EventItemOptionMinAggregateOutputType | null
    _max: EventItemOptionMaxAggregateOutputType | null
  }

  export type EventItemOptionAvgAggregateOutputType = {
    priceAdjustment: number | null
  }

  export type EventItemOptionSumAggregateOutputType = {
    priceAdjustment: number | null
  }

  export type EventItemOptionMinAggregateOutputType = {
    id: string | null
    eventItemId: string | null
    optionId: string | null
    optionName: string | null
    value: string | null
    label: string | null
    priceAdjustment: number | null
    createdAt: Date | null
  }

  export type EventItemOptionMaxAggregateOutputType = {
    id: string | null
    eventItemId: string | null
    optionId: string | null
    optionName: string | null
    value: string | null
    label: string | null
    priceAdjustment: number | null
    createdAt: Date | null
  }

  export type EventItemOptionCountAggregateOutputType = {
    id: number
    eventItemId: number
    optionId: number
    optionName: number
    value: number
    label: number
    priceAdjustment: number
    createdAt: number
    _all: number
  }


  export type EventItemOptionAvgAggregateInputType = {
    priceAdjustment?: true
  }

  export type EventItemOptionSumAggregateInputType = {
    priceAdjustment?: true
  }

  export type EventItemOptionMinAggregateInputType = {
    id?: true
    eventItemId?: true
    optionId?: true
    optionName?: true
    value?: true
    label?: true
    priceAdjustment?: true
    createdAt?: true
  }

  export type EventItemOptionMaxAggregateInputType = {
    id?: true
    eventItemId?: true
    optionId?: true
    optionName?: true
    value?: true
    label?: true
    priceAdjustment?: true
    createdAt?: true
  }

  export type EventItemOptionCountAggregateInputType = {
    id?: true
    eventItemId?: true
    optionId?: true
    optionName?: true
    value?: true
    label?: true
    priceAdjustment?: true
    createdAt?: true
    _all?: true
  }

  export type EventItemOptionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EventItemOption to aggregate.
     */
    where?: EventItemOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventItemOptions to fetch.
     */
    orderBy?: EventItemOptionOrderByWithRelationInput | EventItemOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EventItemOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventItemOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventItemOptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EventItemOptions
    **/
    _count?: true | EventItemOptionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EventItemOptionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EventItemOptionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EventItemOptionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EventItemOptionMaxAggregateInputType
  }

  export type GetEventItemOptionAggregateType<T extends EventItemOptionAggregateArgs> = {
        [P in keyof T & keyof AggregateEventItemOption]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEventItemOption[P]>
      : GetScalarType<T[P], AggregateEventItemOption[P]>
  }




  export type EventItemOptionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventItemOptionWhereInput
    orderBy?: EventItemOptionOrderByWithAggregationInput | EventItemOptionOrderByWithAggregationInput[]
    by: EventItemOptionScalarFieldEnum[] | EventItemOptionScalarFieldEnum
    having?: EventItemOptionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EventItemOptionCountAggregateInputType | true
    _avg?: EventItemOptionAvgAggregateInputType
    _sum?: EventItemOptionSumAggregateInputType
    _min?: EventItemOptionMinAggregateInputType
    _max?: EventItemOptionMaxAggregateInputType
  }

  export type EventItemOptionGroupByOutputType = {
    id: string
    eventItemId: string
    optionId: string
    optionName: string
    value: string
    label: string | null
    priceAdjustment: number
    createdAt: Date
    _count: EventItemOptionCountAggregateOutputType | null
    _avg: EventItemOptionAvgAggregateOutputType | null
    _sum: EventItemOptionSumAggregateOutputType | null
    _min: EventItemOptionMinAggregateOutputType | null
    _max: EventItemOptionMaxAggregateOutputType | null
  }

  type GetEventItemOptionGroupByPayload<T extends EventItemOptionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EventItemOptionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EventItemOptionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EventItemOptionGroupByOutputType[P]>
            : GetScalarType<T[P], EventItemOptionGroupByOutputType[P]>
        }
      >
    >


  export type EventItemOptionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    eventItemId?: boolean
    optionId?: boolean
    optionName?: boolean
    value?: boolean
    label?: boolean
    priceAdjustment?: boolean
    createdAt?: boolean
    EventItem?: boolean | EventItemDefaultArgs<ExtArgs>
    ProductOption?: boolean | ProductOptionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["eventItemOption"]>

  export type EventItemOptionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    eventItemId?: boolean
    optionId?: boolean
    optionName?: boolean
    value?: boolean
    label?: boolean
    priceAdjustment?: boolean
    createdAt?: boolean
    EventItem?: boolean | EventItemDefaultArgs<ExtArgs>
    ProductOption?: boolean | ProductOptionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["eventItemOption"]>

  export type EventItemOptionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    eventItemId?: boolean
    optionId?: boolean
    optionName?: boolean
    value?: boolean
    label?: boolean
    priceAdjustment?: boolean
    createdAt?: boolean
    EventItem?: boolean | EventItemDefaultArgs<ExtArgs>
    ProductOption?: boolean | ProductOptionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["eventItemOption"]>

  export type EventItemOptionSelectScalar = {
    id?: boolean
    eventItemId?: boolean
    optionId?: boolean
    optionName?: boolean
    value?: boolean
    label?: boolean
    priceAdjustment?: boolean
    createdAt?: boolean
  }

  export type EventItemOptionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "eventItemId" | "optionId" | "optionName" | "value" | "label" | "priceAdjustment" | "createdAt", ExtArgs["result"]["eventItemOption"]>
  export type EventItemOptionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    EventItem?: boolean | EventItemDefaultArgs<ExtArgs>
    ProductOption?: boolean | ProductOptionDefaultArgs<ExtArgs>
  }
  export type EventItemOptionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    EventItem?: boolean | EventItemDefaultArgs<ExtArgs>
    ProductOption?: boolean | ProductOptionDefaultArgs<ExtArgs>
  }
  export type EventItemOptionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    EventItem?: boolean | EventItemDefaultArgs<ExtArgs>
    ProductOption?: boolean | ProductOptionDefaultArgs<ExtArgs>
  }

  export type $EventItemOptionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EventItemOption"
    objects: {
      EventItem: Prisma.$EventItemPayload<ExtArgs>
      ProductOption: Prisma.$ProductOptionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      eventItemId: string
      optionId: string
      optionName: string
      value: string
      label: string | null
      priceAdjustment: number
      createdAt: Date
    }, ExtArgs["result"]["eventItemOption"]>
    composites: {}
  }

  type EventItemOptionGetPayload<S extends boolean | null | undefined | EventItemOptionDefaultArgs> = $Result.GetResult<Prisma.$EventItemOptionPayload, S>

  type EventItemOptionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EventItemOptionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EventItemOptionCountAggregateInputType | true
    }

  export interface EventItemOptionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EventItemOption'], meta: { name: 'EventItemOption' } }
    /**
     * Find zero or one EventItemOption that matches the filter.
     * @param {EventItemOptionFindUniqueArgs} args - Arguments to find a EventItemOption
     * @example
     * // Get one EventItemOption
     * const eventItemOption = await prisma.eventItemOption.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EventItemOptionFindUniqueArgs>(args: SelectSubset<T, EventItemOptionFindUniqueArgs<ExtArgs>>): Prisma__EventItemOptionClient<$Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EventItemOption that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EventItemOptionFindUniqueOrThrowArgs} args - Arguments to find a EventItemOption
     * @example
     * // Get one EventItemOption
     * const eventItemOption = await prisma.eventItemOption.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EventItemOptionFindUniqueOrThrowArgs>(args: SelectSubset<T, EventItemOptionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EventItemOptionClient<$Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EventItemOption that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventItemOptionFindFirstArgs} args - Arguments to find a EventItemOption
     * @example
     * // Get one EventItemOption
     * const eventItemOption = await prisma.eventItemOption.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EventItemOptionFindFirstArgs>(args?: SelectSubset<T, EventItemOptionFindFirstArgs<ExtArgs>>): Prisma__EventItemOptionClient<$Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EventItemOption that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventItemOptionFindFirstOrThrowArgs} args - Arguments to find a EventItemOption
     * @example
     * // Get one EventItemOption
     * const eventItemOption = await prisma.eventItemOption.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EventItemOptionFindFirstOrThrowArgs>(args?: SelectSubset<T, EventItemOptionFindFirstOrThrowArgs<ExtArgs>>): Prisma__EventItemOptionClient<$Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EventItemOptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventItemOptionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EventItemOptions
     * const eventItemOptions = await prisma.eventItemOption.findMany()
     * 
     * // Get first 10 EventItemOptions
     * const eventItemOptions = await prisma.eventItemOption.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eventItemOptionWithIdOnly = await prisma.eventItemOption.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EventItemOptionFindManyArgs>(args?: SelectSubset<T, EventItemOptionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EventItemOption.
     * @param {EventItemOptionCreateArgs} args - Arguments to create a EventItemOption.
     * @example
     * // Create one EventItemOption
     * const EventItemOption = await prisma.eventItemOption.create({
     *   data: {
     *     // ... data to create a EventItemOption
     *   }
     * })
     * 
     */
    create<T extends EventItemOptionCreateArgs>(args: SelectSubset<T, EventItemOptionCreateArgs<ExtArgs>>): Prisma__EventItemOptionClient<$Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EventItemOptions.
     * @param {EventItemOptionCreateManyArgs} args - Arguments to create many EventItemOptions.
     * @example
     * // Create many EventItemOptions
     * const eventItemOption = await prisma.eventItemOption.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EventItemOptionCreateManyArgs>(args?: SelectSubset<T, EventItemOptionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EventItemOptions and returns the data saved in the database.
     * @param {EventItemOptionCreateManyAndReturnArgs} args - Arguments to create many EventItemOptions.
     * @example
     * // Create many EventItemOptions
     * const eventItemOption = await prisma.eventItemOption.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EventItemOptions and only return the `id`
     * const eventItemOptionWithIdOnly = await prisma.eventItemOption.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EventItemOptionCreateManyAndReturnArgs>(args?: SelectSubset<T, EventItemOptionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EventItemOption.
     * @param {EventItemOptionDeleteArgs} args - Arguments to delete one EventItemOption.
     * @example
     * // Delete one EventItemOption
     * const EventItemOption = await prisma.eventItemOption.delete({
     *   where: {
     *     // ... filter to delete one EventItemOption
     *   }
     * })
     * 
     */
    delete<T extends EventItemOptionDeleteArgs>(args: SelectSubset<T, EventItemOptionDeleteArgs<ExtArgs>>): Prisma__EventItemOptionClient<$Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EventItemOption.
     * @param {EventItemOptionUpdateArgs} args - Arguments to update one EventItemOption.
     * @example
     * // Update one EventItemOption
     * const eventItemOption = await prisma.eventItemOption.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EventItemOptionUpdateArgs>(args: SelectSubset<T, EventItemOptionUpdateArgs<ExtArgs>>): Prisma__EventItemOptionClient<$Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EventItemOptions.
     * @param {EventItemOptionDeleteManyArgs} args - Arguments to filter EventItemOptions to delete.
     * @example
     * // Delete a few EventItemOptions
     * const { count } = await prisma.eventItemOption.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EventItemOptionDeleteManyArgs>(args?: SelectSubset<T, EventItemOptionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EventItemOptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventItemOptionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EventItemOptions
     * const eventItemOption = await prisma.eventItemOption.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EventItemOptionUpdateManyArgs>(args: SelectSubset<T, EventItemOptionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EventItemOptions and returns the data updated in the database.
     * @param {EventItemOptionUpdateManyAndReturnArgs} args - Arguments to update many EventItemOptions.
     * @example
     * // Update many EventItemOptions
     * const eventItemOption = await prisma.eventItemOption.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EventItemOptions and only return the `id`
     * const eventItemOptionWithIdOnly = await prisma.eventItemOption.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EventItemOptionUpdateManyAndReturnArgs>(args: SelectSubset<T, EventItemOptionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EventItemOption.
     * @param {EventItemOptionUpsertArgs} args - Arguments to update or create a EventItemOption.
     * @example
     * // Update or create a EventItemOption
     * const eventItemOption = await prisma.eventItemOption.upsert({
     *   create: {
     *     // ... data to create a EventItemOption
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EventItemOption we want to update
     *   }
     * })
     */
    upsert<T extends EventItemOptionUpsertArgs>(args: SelectSubset<T, EventItemOptionUpsertArgs<ExtArgs>>): Prisma__EventItemOptionClient<$Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EventItemOptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventItemOptionCountArgs} args - Arguments to filter EventItemOptions to count.
     * @example
     * // Count the number of EventItemOptions
     * const count = await prisma.eventItemOption.count({
     *   where: {
     *     // ... the filter for the EventItemOptions we want to count
     *   }
     * })
    **/
    count<T extends EventItemOptionCountArgs>(
      args?: Subset<T, EventItemOptionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EventItemOptionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EventItemOption.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventItemOptionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EventItemOptionAggregateArgs>(args: Subset<T, EventItemOptionAggregateArgs>): Prisma.PrismaPromise<GetEventItemOptionAggregateType<T>>

    /**
     * Group by EventItemOption.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventItemOptionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EventItemOptionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EventItemOptionGroupByArgs['orderBy'] }
        : { orderBy?: EventItemOptionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EventItemOptionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEventItemOptionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EventItemOption model
   */
  readonly fields: EventItemOptionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EventItemOption.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EventItemOptionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    EventItem<T extends EventItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EventItemDefaultArgs<ExtArgs>>): Prisma__EventItemClient<$Result.GetResult<Prisma.$EventItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ProductOption<T extends ProductOptionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductOptionDefaultArgs<ExtArgs>>): Prisma__ProductOptionClient<$Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EventItemOption model
   */
  interface EventItemOptionFieldRefs {
    readonly id: FieldRef<"EventItemOption", 'String'>
    readonly eventItemId: FieldRef<"EventItemOption", 'String'>
    readonly optionId: FieldRef<"EventItemOption", 'String'>
    readonly optionName: FieldRef<"EventItemOption", 'String'>
    readonly value: FieldRef<"EventItemOption", 'String'>
    readonly label: FieldRef<"EventItemOption", 'String'>
    readonly priceAdjustment: FieldRef<"EventItemOption", 'Float'>
    readonly createdAt: FieldRef<"EventItemOption", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * EventItemOption findUnique
   */
  export type EventItemOptionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItemOption
     */
    select?: EventItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItemOption
     */
    omit?: EventItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemOptionInclude<ExtArgs> | null
    /**
     * Filter, which EventItemOption to fetch.
     */
    where: EventItemOptionWhereUniqueInput
  }

  /**
   * EventItemOption findUniqueOrThrow
   */
  export type EventItemOptionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItemOption
     */
    select?: EventItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItemOption
     */
    omit?: EventItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemOptionInclude<ExtArgs> | null
    /**
     * Filter, which EventItemOption to fetch.
     */
    where: EventItemOptionWhereUniqueInput
  }

  /**
   * EventItemOption findFirst
   */
  export type EventItemOptionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItemOption
     */
    select?: EventItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItemOption
     */
    omit?: EventItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemOptionInclude<ExtArgs> | null
    /**
     * Filter, which EventItemOption to fetch.
     */
    where?: EventItemOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventItemOptions to fetch.
     */
    orderBy?: EventItemOptionOrderByWithRelationInput | EventItemOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EventItemOptions.
     */
    cursor?: EventItemOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventItemOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventItemOptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EventItemOptions.
     */
    distinct?: EventItemOptionScalarFieldEnum | EventItemOptionScalarFieldEnum[]
  }

  /**
   * EventItemOption findFirstOrThrow
   */
  export type EventItemOptionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItemOption
     */
    select?: EventItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItemOption
     */
    omit?: EventItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemOptionInclude<ExtArgs> | null
    /**
     * Filter, which EventItemOption to fetch.
     */
    where?: EventItemOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventItemOptions to fetch.
     */
    orderBy?: EventItemOptionOrderByWithRelationInput | EventItemOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EventItemOptions.
     */
    cursor?: EventItemOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventItemOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventItemOptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EventItemOptions.
     */
    distinct?: EventItemOptionScalarFieldEnum | EventItemOptionScalarFieldEnum[]
  }

  /**
   * EventItemOption findMany
   */
  export type EventItemOptionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItemOption
     */
    select?: EventItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItemOption
     */
    omit?: EventItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemOptionInclude<ExtArgs> | null
    /**
     * Filter, which EventItemOptions to fetch.
     */
    where?: EventItemOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventItemOptions to fetch.
     */
    orderBy?: EventItemOptionOrderByWithRelationInput | EventItemOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EventItemOptions.
     */
    cursor?: EventItemOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventItemOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventItemOptions.
     */
    skip?: number
    distinct?: EventItemOptionScalarFieldEnum | EventItemOptionScalarFieldEnum[]
  }

  /**
   * EventItemOption create
   */
  export type EventItemOptionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItemOption
     */
    select?: EventItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItemOption
     */
    omit?: EventItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemOptionInclude<ExtArgs> | null
    /**
     * The data needed to create a EventItemOption.
     */
    data: XOR<EventItemOptionCreateInput, EventItemOptionUncheckedCreateInput>
  }

  /**
   * EventItemOption createMany
   */
  export type EventItemOptionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EventItemOptions.
     */
    data: EventItemOptionCreateManyInput | EventItemOptionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EventItemOption createManyAndReturn
   */
  export type EventItemOptionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItemOption
     */
    select?: EventItemOptionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EventItemOption
     */
    omit?: EventItemOptionOmit<ExtArgs> | null
    /**
     * The data used to create many EventItemOptions.
     */
    data: EventItemOptionCreateManyInput | EventItemOptionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemOptionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EventItemOption update
   */
  export type EventItemOptionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItemOption
     */
    select?: EventItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItemOption
     */
    omit?: EventItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemOptionInclude<ExtArgs> | null
    /**
     * The data needed to update a EventItemOption.
     */
    data: XOR<EventItemOptionUpdateInput, EventItemOptionUncheckedUpdateInput>
    /**
     * Choose, which EventItemOption to update.
     */
    where: EventItemOptionWhereUniqueInput
  }

  /**
   * EventItemOption updateMany
   */
  export type EventItemOptionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EventItemOptions.
     */
    data: XOR<EventItemOptionUpdateManyMutationInput, EventItemOptionUncheckedUpdateManyInput>
    /**
     * Filter which EventItemOptions to update
     */
    where?: EventItemOptionWhereInput
    /**
     * Limit how many EventItemOptions to update.
     */
    limit?: number
  }

  /**
   * EventItemOption updateManyAndReturn
   */
  export type EventItemOptionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItemOption
     */
    select?: EventItemOptionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EventItemOption
     */
    omit?: EventItemOptionOmit<ExtArgs> | null
    /**
     * The data used to update EventItemOptions.
     */
    data: XOR<EventItemOptionUpdateManyMutationInput, EventItemOptionUncheckedUpdateManyInput>
    /**
     * Filter which EventItemOptions to update
     */
    where?: EventItemOptionWhereInput
    /**
     * Limit how many EventItemOptions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemOptionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * EventItemOption upsert
   */
  export type EventItemOptionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItemOption
     */
    select?: EventItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItemOption
     */
    omit?: EventItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemOptionInclude<ExtArgs> | null
    /**
     * The filter to search for the EventItemOption to update in case it exists.
     */
    where: EventItemOptionWhereUniqueInput
    /**
     * In case the EventItemOption found by the `where` argument doesn't exist, create a new EventItemOption with this data.
     */
    create: XOR<EventItemOptionCreateInput, EventItemOptionUncheckedCreateInput>
    /**
     * In case the EventItemOption was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EventItemOptionUpdateInput, EventItemOptionUncheckedUpdateInput>
  }

  /**
   * EventItemOption delete
   */
  export type EventItemOptionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItemOption
     */
    select?: EventItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItemOption
     */
    omit?: EventItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemOptionInclude<ExtArgs> | null
    /**
     * Filter which EventItemOption to delete.
     */
    where: EventItemOptionWhereUniqueInput
  }

  /**
   * EventItemOption deleteMany
   */
  export type EventItemOptionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EventItemOptions to delete
     */
    where?: EventItemOptionWhereInput
    /**
     * Limit how many EventItemOptions to delete.
     */
    limit?: number
  }

  /**
   * EventItemOption without action
   */
  export type EventItemOptionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItemOption
     */
    select?: EventItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItemOption
     */
    omit?: EventItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemOptionInclude<ExtArgs> | null
  }


  /**
   * Model EventStatusHistory
   */

  export type AggregateEventStatusHistory = {
    _count: EventStatusHistoryCountAggregateOutputType | null
    _min: EventStatusHistoryMinAggregateOutputType | null
    _max: EventStatusHistoryMaxAggregateOutputType | null
  }

  export type EventStatusHistoryMinAggregateOutputType = {
    id: string | null
    eventId: string | null
    fromStatus: string | null
    toStatus: string | null
    fromStage: string | null
    toStage: string | null
    notes: string | null
    changedBy: string | null
    changedAt: Date | null
  }

  export type EventStatusHistoryMaxAggregateOutputType = {
    id: string | null
    eventId: string | null
    fromStatus: string | null
    toStatus: string | null
    fromStage: string | null
    toStage: string | null
    notes: string | null
    changedBy: string | null
    changedAt: Date | null
  }

  export type EventStatusHistoryCountAggregateOutputType = {
    id: number
    eventId: number
    fromStatus: number
    toStatus: number
    fromStage: number
    toStage: number
    notes: number
    changedBy: number
    changedAt: number
    _all: number
  }


  export type EventStatusHistoryMinAggregateInputType = {
    id?: true
    eventId?: true
    fromStatus?: true
    toStatus?: true
    fromStage?: true
    toStage?: true
    notes?: true
    changedBy?: true
    changedAt?: true
  }

  export type EventStatusHistoryMaxAggregateInputType = {
    id?: true
    eventId?: true
    fromStatus?: true
    toStatus?: true
    fromStage?: true
    toStage?: true
    notes?: true
    changedBy?: true
    changedAt?: true
  }

  export type EventStatusHistoryCountAggregateInputType = {
    id?: true
    eventId?: true
    fromStatus?: true
    toStatus?: true
    fromStage?: true
    toStage?: true
    notes?: true
    changedBy?: true
    changedAt?: true
    _all?: true
  }

  export type EventStatusHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EventStatusHistory to aggregate.
     */
    where?: EventStatusHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventStatusHistories to fetch.
     */
    orderBy?: EventStatusHistoryOrderByWithRelationInput | EventStatusHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: EventStatusHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventStatusHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventStatusHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned EventStatusHistories
    **/
    _count?: true | EventStatusHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EventStatusHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EventStatusHistoryMaxAggregateInputType
  }

  export type GetEventStatusHistoryAggregateType<T extends EventStatusHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateEventStatusHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEventStatusHistory[P]>
      : GetScalarType<T[P], AggregateEventStatusHistory[P]>
  }




  export type EventStatusHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: EventStatusHistoryWhereInput
    orderBy?: EventStatusHistoryOrderByWithAggregationInput | EventStatusHistoryOrderByWithAggregationInput[]
    by: EventStatusHistoryScalarFieldEnum[] | EventStatusHistoryScalarFieldEnum
    having?: EventStatusHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EventStatusHistoryCountAggregateInputType | true
    _min?: EventStatusHistoryMinAggregateInputType
    _max?: EventStatusHistoryMaxAggregateInputType
  }

  export type EventStatusHistoryGroupByOutputType = {
    id: string
    eventId: string
    fromStatus: string | null
    toStatus: string
    fromStage: string | null
    toStage: string
    notes: string | null
    changedBy: string | null
    changedAt: Date
    _count: EventStatusHistoryCountAggregateOutputType | null
    _min: EventStatusHistoryMinAggregateOutputType | null
    _max: EventStatusHistoryMaxAggregateOutputType | null
  }

  type GetEventStatusHistoryGroupByPayload<T extends EventStatusHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EventStatusHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EventStatusHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EventStatusHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], EventStatusHistoryGroupByOutputType[P]>
        }
      >
    >


  export type EventStatusHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    eventId?: boolean
    fromStatus?: boolean
    toStatus?: boolean
    fromStage?: boolean
    toStage?: boolean
    notes?: boolean
    changedBy?: boolean
    changedAt?: boolean
    Event?: boolean | EventDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["eventStatusHistory"]>

  export type EventStatusHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    eventId?: boolean
    fromStatus?: boolean
    toStatus?: boolean
    fromStage?: boolean
    toStage?: boolean
    notes?: boolean
    changedBy?: boolean
    changedAt?: boolean
    Event?: boolean | EventDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["eventStatusHistory"]>

  export type EventStatusHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    eventId?: boolean
    fromStatus?: boolean
    toStatus?: boolean
    fromStage?: boolean
    toStage?: boolean
    notes?: boolean
    changedBy?: boolean
    changedAt?: boolean
    Event?: boolean | EventDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["eventStatusHistory"]>

  export type EventStatusHistorySelectScalar = {
    id?: boolean
    eventId?: boolean
    fromStatus?: boolean
    toStatus?: boolean
    fromStage?: boolean
    toStage?: boolean
    notes?: boolean
    changedBy?: boolean
    changedAt?: boolean
  }

  export type EventStatusHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "eventId" | "fromStatus" | "toStatus" | "fromStage" | "toStage" | "notes" | "changedBy" | "changedAt", ExtArgs["result"]["eventStatusHistory"]>
  export type EventStatusHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Event?: boolean | EventDefaultArgs<ExtArgs>
  }
  export type EventStatusHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Event?: boolean | EventDefaultArgs<ExtArgs>
  }
  export type EventStatusHistoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Event?: boolean | EventDefaultArgs<ExtArgs>
  }

  export type $EventStatusHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "EventStatusHistory"
    objects: {
      Event: Prisma.$EventPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      eventId: string
      fromStatus: string | null
      toStatus: string
      fromStage: string | null
      toStage: string
      notes: string | null
      changedBy: string | null
      changedAt: Date
    }, ExtArgs["result"]["eventStatusHistory"]>
    composites: {}
  }

  type EventStatusHistoryGetPayload<S extends boolean | null | undefined | EventStatusHistoryDefaultArgs> = $Result.GetResult<Prisma.$EventStatusHistoryPayload, S>

  type EventStatusHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<EventStatusHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EventStatusHistoryCountAggregateInputType | true
    }

  export interface EventStatusHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['EventStatusHistory'], meta: { name: 'EventStatusHistory' } }
    /**
     * Find zero or one EventStatusHistory that matches the filter.
     * @param {EventStatusHistoryFindUniqueArgs} args - Arguments to find a EventStatusHistory
     * @example
     * // Get one EventStatusHistory
     * const eventStatusHistory = await prisma.eventStatusHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends EventStatusHistoryFindUniqueArgs>(args: SelectSubset<T, EventStatusHistoryFindUniqueArgs<ExtArgs>>): Prisma__EventStatusHistoryClient<$Result.GetResult<Prisma.$EventStatusHistoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one EventStatusHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {EventStatusHistoryFindUniqueOrThrowArgs} args - Arguments to find a EventStatusHistory
     * @example
     * // Get one EventStatusHistory
     * const eventStatusHistory = await prisma.eventStatusHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends EventStatusHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, EventStatusHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__EventStatusHistoryClient<$Result.GetResult<Prisma.$EventStatusHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EventStatusHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventStatusHistoryFindFirstArgs} args - Arguments to find a EventStatusHistory
     * @example
     * // Get one EventStatusHistory
     * const eventStatusHistory = await prisma.eventStatusHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends EventStatusHistoryFindFirstArgs>(args?: SelectSubset<T, EventStatusHistoryFindFirstArgs<ExtArgs>>): Prisma__EventStatusHistoryClient<$Result.GetResult<Prisma.$EventStatusHistoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first EventStatusHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventStatusHistoryFindFirstOrThrowArgs} args - Arguments to find a EventStatusHistory
     * @example
     * // Get one EventStatusHistory
     * const eventStatusHistory = await prisma.eventStatusHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends EventStatusHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, EventStatusHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__EventStatusHistoryClient<$Result.GetResult<Prisma.$EventStatusHistoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more EventStatusHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventStatusHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all EventStatusHistories
     * const eventStatusHistories = await prisma.eventStatusHistory.findMany()
     * 
     * // Get first 10 EventStatusHistories
     * const eventStatusHistories = await prisma.eventStatusHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const eventStatusHistoryWithIdOnly = await prisma.eventStatusHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends EventStatusHistoryFindManyArgs>(args?: SelectSubset<T, EventStatusHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventStatusHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a EventStatusHistory.
     * @param {EventStatusHistoryCreateArgs} args - Arguments to create a EventStatusHistory.
     * @example
     * // Create one EventStatusHistory
     * const EventStatusHistory = await prisma.eventStatusHistory.create({
     *   data: {
     *     // ... data to create a EventStatusHistory
     *   }
     * })
     * 
     */
    create<T extends EventStatusHistoryCreateArgs>(args: SelectSubset<T, EventStatusHistoryCreateArgs<ExtArgs>>): Prisma__EventStatusHistoryClient<$Result.GetResult<Prisma.$EventStatusHistoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many EventStatusHistories.
     * @param {EventStatusHistoryCreateManyArgs} args - Arguments to create many EventStatusHistories.
     * @example
     * // Create many EventStatusHistories
     * const eventStatusHistory = await prisma.eventStatusHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends EventStatusHistoryCreateManyArgs>(args?: SelectSubset<T, EventStatusHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many EventStatusHistories and returns the data saved in the database.
     * @param {EventStatusHistoryCreateManyAndReturnArgs} args - Arguments to create many EventStatusHistories.
     * @example
     * // Create many EventStatusHistories
     * const eventStatusHistory = await prisma.eventStatusHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many EventStatusHistories and only return the `id`
     * const eventStatusHistoryWithIdOnly = await prisma.eventStatusHistory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends EventStatusHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, EventStatusHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventStatusHistoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a EventStatusHistory.
     * @param {EventStatusHistoryDeleteArgs} args - Arguments to delete one EventStatusHistory.
     * @example
     * // Delete one EventStatusHistory
     * const EventStatusHistory = await prisma.eventStatusHistory.delete({
     *   where: {
     *     // ... filter to delete one EventStatusHistory
     *   }
     * })
     * 
     */
    delete<T extends EventStatusHistoryDeleteArgs>(args: SelectSubset<T, EventStatusHistoryDeleteArgs<ExtArgs>>): Prisma__EventStatusHistoryClient<$Result.GetResult<Prisma.$EventStatusHistoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one EventStatusHistory.
     * @param {EventStatusHistoryUpdateArgs} args - Arguments to update one EventStatusHistory.
     * @example
     * // Update one EventStatusHistory
     * const eventStatusHistory = await prisma.eventStatusHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends EventStatusHistoryUpdateArgs>(args: SelectSubset<T, EventStatusHistoryUpdateArgs<ExtArgs>>): Prisma__EventStatusHistoryClient<$Result.GetResult<Prisma.$EventStatusHistoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more EventStatusHistories.
     * @param {EventStatusHistoryDeleteManyArgs} args - Arguments to filter EventStatusHistories to delete.
     * @example
     * // Delete a few EventStatusHistories
     * const { count } = await prisma.eventStatusHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends EventStatusHistoryDeleteManyArgs>(args?: SelectSubset<T, EventStatusHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EventStatusHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventStatusHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many EventStatusHistories
     * const eventStatusHistory = await prisma.eventStatusHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends EventStatusHistoryUpdateManyArgs>(args: SelectSubset<T, EventStatusHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more EventStatusHistories and returns the data updated in the database.
     * @param {EventStatusHistoryUpdateManyAndReturnArgs} args - Arguments to update many EventStatusHistories.
     * @example
     * // Update many EventStatusHistories
     * const eventStatusHistory = await prisma.eventStatusHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more EventStatusHistories and only return the `id`
     * const eventStatusHistoryWithIdOnly = await prisma.eventStatusHistory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends EventStatusHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, EventStatusHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventStatusHistoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one EventStatusHistory.
     * @param {EventStatusHistoryUpsertArgs} args - Arguments to update or create a EventStatusHistory.
     * @example
     * // Update or create a EventStatusHistory
     * const eventStatusHistory = await prisma.eventStatusHistory.upsert({
     *   create: {
     *     // ... data to create a EventStatusHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the EventStatusHistory we want to update
     *   }
     * })
     */
    upsert<T extends EventStatusHistoryUpsertArgs>(args: SelectSubset<T, EventStatusHistoryUpsertArgs<ExtArgs>>): Prisma__EventStatusHistoryClient<$Result.GetResult<Prisma.$EventStatusHistoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of EventStatusHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventStatusHistoryCountArgs} args - Arguments to filter EventStatusHistories to count.
     * @example
     * // Count the number of EventStatusHistories
     * const count = await prisma.eventStatusHistory.count({
     *   where: {
     *     // ... the filter for the EventStatusHistories we want to count
     *   }
     * })
    **/
    count<T extends EventStatusHistoryCountArgs>(
      args?: Subset<T, EventStatusHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EventStatusHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a EventStatusHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventStatusHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EventStatusHistoryAggregateArgs>(args: Subset<T, EventStatusHistoryAggregateArgs>): Prisma.PrismaPromise<GetEventStatusHistoryAggregateType<T>>

    /**
     * Group by EventStatusHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EventStatusHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends EventStatusHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: EventStatusHistoryGroupByArgs['orderBy'] }
        : { orderBy?: EventStatusHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, EventStatusHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEventStatusHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the EventStatusHistory model
   */
  readonly fields: EventStatusHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for EventStatusHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__EventStatusHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Event<T extends EventDefaultArgs<ExtArgs> = {}>(args?: Subset<T, EventDefaultArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the EventStatusHistory model
   */
  interface EventStatusHistoryFieldRefs {
    readonly id: FieldRef<"EventStatusHistory", 'String'>
    readonly eventId: FieldRef<"EventStatusHistory", 'String'>
    readonly fromStatus: FieldRef<"EventStatusHistory", 'String'>
    readonly toStatus: FieldRef<"EventStatusHistory", 'String'>
    readonly fromStage: FieldRef<"EventStatusHistory", 'String'>
    readonly toStage: FieldRef<"EventStatusHistory", 'String'>
    readonly notes: FieldRef<"EventStatusHistory", 'String'>
    readonly changedBy: FieldRef<"EventStatusHistory", 'String'>
    readonly changedAt: FieldRef<"EventStatusHistory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * EventStatusHistory findUnique
   */
  export type EventStatusHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventStatusHistory
     */
    select?: EventStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventStatusHistory
     */
    omit?: EventStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventStatusHistoryInclude<ExtArgs> | null
    /**
     * Filter, which EventStatusHistory to fetch.
     */
    where: EventStatusHistoryWhereUniqueInput
  }

  /**
   * EventStatusHistory findUniqueOrThrow
   */
  export type EventStatusHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventStatusHistory
     */
    select?: EventStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventStatusHistory
     */
    omit?: EventStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventStatusHistoryInclude<ExtArgs> | null
    /**
     * Filter, which EventStatusHistory to fetch.
     */
    where: EventStatusHistoryWhereUniqueInput
  }

  /**
   * EventStatusHistory findFirst
   */
  export type EventStatusHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventStatusHistory
     */
    select?: EventStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventStatusHistory
     */
    omit?: EventStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventStatusHistoryInclude<ExtArgs> | null
    /**
     * Filter, which EventStatusHistory to fetch.
     */
    where?: EventStatusHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventStatusHistories to fetch.
     */
    orderBy?: EventStatusHistoryOrderByWithRelationInput | EventStatusHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EventStatusHistories.
     */
    cursor?: EventStatusHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventStatusHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventStatusHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EventStatusHistories.
     */
    distinct?: EventStatusHistoryScalarFieldEnum | EventStatusHistoryScalarFieldEnum[]
  }

  /**
   * EventStatusHistory findFirstOrThrow
   */
  export type EventStatusHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventStatusHistory
     */
    select?: EventStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventStatusHistory
     */
    omit?: EventStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventStatusHistoryInclude<ExtArgs> | null
    /**
     * Filter, which EventStatusHistory to fetch.
     */
    where?: EventStatusHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventStatusHistories to fetch.
     */
    orderBy?: EventStatusHistoryOrderByWithRelationInput | EventStatusHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for EventStatusHistories.
     */
    cursor?: EventStatusHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventStatusHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventStatusHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of EventStatusHistories.
     */
    distinct?: EventStatusHistoryScalarFieldEnum | EventStatusHistoryScalarFieldEnum[]
  }

  /**
   * EventStatusHistory findMany
   */
  export type EventStatusHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventStatusHistory
     */
    select?: EventStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventStatusHistory
     */
    omit?: EventStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventStatusHistoryInclude<ExtArgs> | null
    /**
     * Filter, which EventStatusHistories to fetch.
     */
    where?: EventStatusHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of EventStatusHistories to fetch.
     */
    orderBy?: EventStatusHistoryOrderByWithRelationInput | EventStatusHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing EventStatusHistories.
     */
    cursor?: EventStatusHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` EventStatusHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` EventStatusHistories.
     */
    skip?: number
    distinct?: EventStatusHistoryScalarFieldEnum | EventStatusHistoryScalarFieldEnum[]
  }

  /**
   * EventStatusHistory create
   */
  export type EventStatusHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventStatusHistory
     */
    select?: EventStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventStatusHistory
     */
    omit?: EventStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventStatusHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a EventStatusHistory.
     */
    data: XOR<EventStatusHistoryCreateInput, EventStatusHistoryUncheckedCreateInput>
  }

  /**
   * EventStatusHistory createMany
   */
  export type EventStatusHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many EventStatusHistories.
     */
    data: EventStatusHistoryCreateManyInput | EventStatusHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * EventStatusHistory createManyAndReturn
   */
  export type EventStatusHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventStatusHistory
     */
    select?: EventStatusHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EventStatusHistory
     */
    omit?: EventStatusHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many EventStatusHistories.
     */
    data: EventStatusHistoryCreateManyInput | EventStatusHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventStatusHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * EventStatusHistory update
   */
  export type EventStatusHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventStatusHistory
     */
    select?: EventStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventStatusHistory
     */
    omit?: EventStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventStatusHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a EventStatusHistory.
     */
    data: XOR<EventStatusHistoryUpdateInput, EventStatusHistoryUncheckedUpdateInput>
    /**
     * Choose, which EventStatusHistory to update.
     */
    where: EventStatusHistoryWhereUniqueInput
  }

  /**
   * EventStatusHistory updateMany
   */
  export type EventStatusHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update EventStatusHistories.
     */
    data: XOR<EventStatusHistoryUpdateManyMutationInput, EventStatusHistoryUncheckedUpdateManyInput>
    /**
     * Filter which EventStatusHistories to update
     */
    where?: EventStatusHistoryWhereInput
    /**
     * Limit how many EventStatusHistories to update.
     */
    limit?: number
  }

  /**
   * EventStatusHistory updateManyAndReturn
   */
  export type EventStatusHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventStatusHistory
     */
    select?: EventStatusHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the EventStatusHistory
     */
    omit?: EventStatusHistoryOmit<ExtArgs> | null
    /**
     * The data used to update EventStatusHistories.
     */
    data: XOR<EventStatusHistoryUpdateManyMutationInput, EventStatusHistoryUncheckedUpdateManyInput>
    /**
     * Filter which EventStatusHistories to update
     */
    where?: EventStatusHistoryWhereInput
    /**
     * Limit how many EventStatusHistories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventStatusHistoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * EventStatusHistory upsert
   */
  export type EventStatusHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventStatusHistory
     */
    select?: EventStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventStatusHistory
     */
    omit?: EventStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventStatusHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the EventStatusHistory to update in case it exists.
     */
    where: EventStatusHistoryWhereUniqueInput
    /**
     * In case the EventStatusHistory found by the `where` argument doesn't exist, create a new EventStatusHistory with this data.
     */
    create: XOR<EventStatusHistoryCreateInput, EventStatusHistoryUncheckedCreateInput>
    /**
     * In case the EventStatusHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<EventStatusHistoryUpdateInput, EventStatusHistoryUncheckedUpdateInput>
  }

  /**
   * EventStatusHistory delete
   */
  export type EventStatusHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventStatusHistory
     */
    select?: EventStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventStatusHistory
     */
    omit?: EventStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventStatusHistoryInclude<ExtArgs> | null
    /**
     * Filter which EventStatusHistory to delete.
     */
    where: EventStatusHistoryWhereUniqueInput
  }

  /**
   * EventStatusHistory deleteMany
   */
  export type EventStatusHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which EventStatusHistories to delete
     */
    where?: EventStatusHistoryWhereInput
    /**
     * Limit how many EventStatusHistories to delete.
     */
    limit?: number
  }

  /**
   * EventStatusHistory without action
   */
  export type EventStatusHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventStatusHistory
     */
    select?: EventStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventStatusHistory
     */
    omit?: EventStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventStatusHistoryInclude<ExtArgs> | null
  }


  /**
   * Model OrderItem
   */

  export type AggregateOrderItem = {
    _count: OrderItemCountAggregateOutputType | null
    _avg: OrderItemAvgAggregateOutputType | null
    _sum: OrderItemSumAggregateOutputType | null
    _min: OrderItemMinAggregateOutputType | null
    _max: OrderItemMaxAggregateOutputType | null
  }

  export type OrderItemAvgAggregateOutputType = {
    quantity: number | null
    unitPrice: number | null
    totalPrice: number | null
  }

  export type OrderItemSumAggregateOutputType = {
    quantity: number | null
    unitPrice: number | null
    totalPrice: number | null
  }

  export type OrderItemMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    productId: string | null
    quantity: number | null
    unitPrice: number | null
    totalPrice: number | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderItemMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    productId: string | null
    quantity: number | null
    unitPrice: number | null
    totalPrice: number | null
    notes: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type OrderItemCountAggregateOutputType = {
    id: number
    orderId: number
    productId: number
    quantity: number
    unitPrice: number
    totalPrice: number
    notes: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type OrderItemAvgAggregateInputType = {
    quantity?: true
    unitPrice?: true
    totalPrice?: true
  }

  export type OrderItemSumAggregateInputType = {
    quantity?: true
    unitPrice?: true
    totalPrice?: true
  }

  export type OrderItemMinAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderItemMaxAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
  }

  export type OrderItemCountAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    notes?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type OrderItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderItem to aggregate.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderItems
    **/
    _count?: true | OrderItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderItemMaxAggregateInputType
  }

  export type GetOrderItemAggregateType<T extends OrderItemAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderItem[P]>
      : GetScalarType<T[P], AggregateOrderItem[P]>
  }




  export type OrderItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithAggregationInput | OrderItemOrderByWithAggregationInput[]
    by: OrderItemScalarFieldEnum[] | OrderItemScalarFieldEnum
    having?: OrderItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderItemCountAggregateInputType | true
    _avg?: OrderItemAvgAggregateInputType
    _sum?: OrderItemSumAggregateInputType
    _min?: OrderItemMinAggregateInputType
    _max?: OrderItemMaxAggregateInputType
  }

  export type OrderItemGroupByOutputType = {
    id: string
    orderId: string
    productId: string
    quantity: number
    unitPrice: number
    totalPrice: number
    notes: string | null
    createdAt: Date
    updatedAt: Date
    _count: OrderItemCountAggregateOutputType | null
    _avg: OrderItemAvgAggregateOutputType | null
    _sum: OrderItemSumAggregateOutputType | null
    _min: OrderItemMinAggregateOutputType | null
    _max: OrderItemMaxAggregateOutputType | null
  }

  type GetOrderItemGroupByPayload<T extends OrderItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderItemGroupByOutputType[P]>
            : GetScalarType<T[P], OrderItemGroupByOutputType[P]>
        }
      >
    >


  export type OrderItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    productId?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Order?: boolean | OrderDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
    OrderItemOption?: boolean | OrderItem$OrderItemOptionArgs<ExtArgs>
    _count?: boolean | OrderItemCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderItem"]>

  export type OrderItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    productId?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Order?: boolean | OrderDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderItem"]>

  export type OrderItemSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    productId?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Order?: boolean | OrderDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderItem"]>

  export type OrderItemSelectScalar = {
    id?: boolean
    orderId?: boolean
    productId?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    notes?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type OrderItemOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderId" | "productId" | "quantity" | "unitPrice" | "totalPrice" | "notes" | "createdAt" | "updatedAt", ExtArgs["result"]["orderItem"]>
  export type OrderItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Order?: boolean | OrderDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
    OrderItemOption?: boolean | OrderItem$OrderItemOptionArgs<ExtArgs>
    _count?: boolean | OrderItemCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OrderItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Order?: boolean | OrderDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type OrderItemIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Order?: boolean | OrderDefaultArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $OrderItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderItem"
    objects: {
      Order: Prisma.$OrderPayload<ExtArgs>
      Product: Prisma.$ProductPayload<ExtArgs>
      OrderItemOption: Prisma.$OrderItemOptionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string
      productId: string
      quantity: number
      unitPrice: number
      totalPrice: number
      notes: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["orderItem"]>
    composites: {}
  }

  type OrderItemGetPayload<S extends boolean | null | undefined | OrderItemDefaultArgs> = $Result.GetResult<Prisma.$OrderItemPayload, S>

  type OrderItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderItemFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderItemCountAggregateInputType | true
    }

  export interface OrderItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderItem'], meta: { name: 'OrderItem' } }
    /**
     * Find zero or one OrderItem that matches the filter.
     * @param {OrderItemFindUniqueArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderItemFindUniqueArgs>(args: SelectSubset<T, OrderItemFindUniqueArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrderItem that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderItemFindUniqueOrThrowArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderItemFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindFirstArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderItemFindFirstArgs>(args?: SelectSubset<T, OrderItemFindFirstArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindFirstOrThrowArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderItemFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrderItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderItems
     * const orderItems = await prisma.orderItem.findMany()
     * 
     * // Get first 10 OrderItems
     * const orderItems = await prisma.orderItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderItemWithIdOnly = await prisma.orderItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderItemFindManyArgs>(args?: SelectSubset<T, OrderItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrderItem.
     * @param {OrderItemCreateArgs} args - Arguments to create a OrderItem.
     * @example
     * // Create one OrderItem
     * const OrderItem = await prisma.orderItem.create({
     *   data: {
     *     // ... data to create a OrderItem
     *   }
     * })
     * 
     */
    create<T extends OrderItemCreateArgs>(args: SelectSubset<T, OrderItemCreateArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrderItems.
     * @param {OrderItemCreateManyArgs} args - Arguments to create many OrderItems.
     * @example
     * // Create many OrderItems
     * const orderItem = await prisma.orderItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderItemCreateManyArgs>(args?: SelectSubset<T, OrderItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrderItems and returns the data saved in the database.
     * @param {OrderItemCreateManyAndReturnArgs} args - Arguments to create many OrderItems.
     * @example
     * // Create many OrderItems
     * const orderItem = await prisma.orderItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrderItems and only return the `id`
     * const orderItemWithIdOnly = await prisma.orderItem.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderItemCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderItemCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OrderItem.
     * @param {OrderItemDeleteArgs} args - Arguments to delete one OrderItem.
     * @example
     * // Delete one OrderItem
     * const OrderItem = await prisma.orderItem.delete({
     *   where: {
     *     // ... filter to delete one OrderItem
     *   }
     * })
     * 
     */
    delete<T extends OrderItemDeleteArgs>(args: SelectSubset<T, OrderItemDeleteArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrderItem.
     * @param {OrderItemUpdateArgs} args - Arguments to update one OrderItem.
     * @example
     * // Update one OrderItem
     * const orderItem = await prisma.orderItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderItemUpdateArgs>(args: SelectSubset<T, OrderItemUpdateArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrderItems.
     * @param {OrderItemDeleteManyArgs} args - Arguments to filter OrderItems to delete.
     * @example
     * // Delete a few OrderItems
     * const { count } = await prisma.orderItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderItemDeleteManyArgs>(args?: SelectSubset<T, OrderItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderItems
     * const orderItem = await prisma.orderItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderItemUpdateManyArgs>(args: SelectSubset<T, OrderItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderItems and returns the data updated in the database.
     * @param {OrderItemUpdateManyAndReturnArgs} args - Arguments to update many OrderItems.
     * @example
     * // Update many OrderItems
     * const orderItem = await prisma.orderItem.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OrderItems and only return the `id`
     * const orderItemWithIdOnly = await prisma.orderItem.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderItemUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderItemUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OrderItem.
     * @param {OrderItemUpsertArgs} args - Arguments to update or create a OrderItem.
     * @example
     * // Update or create a OrderItem
     * const orderItem = await prisma.orderItem.upsert({
     *   create: {
     *     // ... data to create a OrderItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderItem we want to update
     *   }
     * })
     */
    upsert<T extends OrderItemUpsertArgs>(args: SelectSubset<T, OrderItemUpsertArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrderItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemCountArgs} args - Arguments to filter OrderItems to count.
     * @example
     * // Count the number of OrderItems
     * const count = await prisma.orderItem.count({
     *   where: {
     *     // ... the filter for the OrderItems we want to count
     *   }
     * })
    **/
    count<T extends OrderItemCountArgs>(
      args?: Subset<T, OrderItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderItemAggregateArgs>(args: Subset<T, OrderItemAggregateArgs>): Prisma.PrismaPromise<GetOrderItemAggregateType<T>>

    /**
     * Group by OrderItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderItemGroupByArgs['orderBy'] }
        : { orderBy?: OrderItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderItem model
   */
  readonly fields: OrderItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    Product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    OrderItemOption<T extends OrderItem$OrderItemOptionArgs<ExtArgs> = {}>(args?: Subset<T, OrderItem$OrderItemOptionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemOptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderItem model
   */
  interface OrderItemFieldRefs {
    readonly id: FieldRef<"OrderItem", 'String'>
    readonly orderId: FieldRef<"OrderItem", 'String'>
    readonly productId: FieldRef<"OrderItem", 'String'>
    readonly quantity: FieldRef<"OrderItem", 'Int'>
    readonly unitPrice: FieldRef<"OrderItem", 'Float'>
    readonly totalPrice: FieldRef<"OrderItem", 'Float'>
    readonly notes: FieldRef<"OrderItem", 'String'>
    readonly createdAt: FieldRef<"OrderItem", 'DateTime'>
    readonly updatedAt: FieldRef<"OrderItem", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * OrderItem findUnique
   */
  export type OrderItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem findUniqueOrThrow
   */
  export type OrderItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem findFirst
   */
  export type OrderItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderItems.
     */
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem findFirstOrThrow
   */
  export type OrderItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderItems.
     */
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem findMany
   */
  export type OrderItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItems to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem create
   */
  export type OrderItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderItem.
     */
    data: XOR<OrderItemCreateInput, OrderItemUncheckedCreateInput>
  }

  /**
   * OrderItem createMany
   */
  export type OrderItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderItems.
     */
    data: OrderItemCreateManyInput | OrderItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderItem createManyAndReturn
   */
  export type OrderItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * The data used to create many OrderItems.
     */
    data: OrderItemCreateManyInput | OrderItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderItem update
   */
  export type OrderItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderItem.
     */
    data: XOR<OrderItemUpdateInput, OrderItemUncheckedUpdateInput>
    /**
     * Choose, which OrderItem to update.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem updateMany
   */
  export type OrderItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderItems.
     */
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyInput>
    /**
     * Filter which OrderItems to update
     */
    where?: OrderItemWhereInput
    /**
     * Limit how many OrderItems to update.
     */
    limit?: number
  }

  /**
   * OrderItem updateManyAndReturn
   */
  export type OrderItemUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * The data used to update OrderItems.
     */
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyInput>
    /**
     * Filter which OrderItems to update
     */
    where?: OrderItemWhereInput
    /**
     * Limit how many OrderItems to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderItem upsert
   */
  export type OrderItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderItem to update in case it exists.
     */
    where: OrderItemWhereUniqueInput
    /**
     * In case the OrderItem found by the `where` argument doesn't exist, create a new OrderItem with this data.
     */
    create: XOR<OrderItemCreateInput, OrderItemUncheckedCreateInput>
    /**
     * In case the OrderItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderItemUpdateInput, OrderItemUncheckedUpdateInput>
  }

  /**
   * OrderItem delete
   */
  export type OrderItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter which OrderItem to delete.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem deleteMany
   */
  export type OrderItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderItems to delete
     */
    where?: OrderItemWhereInput
    /**
     * Limit how many OrderItems to delete.
     */
    limit?: number
  }

  /**
   * OrderItem.OrderItemOption
   */
  export type OrderItem$OrderItemOptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemOption
     */
    select?: OrderItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemOption
     */
    omit?: OrderItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemOptionInclude<ExtArgs> | null
    where?: OrderItemOptionWhereInput
    orderBy?: OrderItemOptionOrderByWithRelationInput | OrderItemOptionOrderByWithRelationInput[]
    cursor?: OrderItemOptionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderItemOptionScalarFieldEnum | OrderItemOptionScalarFieldEnum[]
  }

  /**
   * OrderItem without action
   */
  export type OrderItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItem
     */
    omit?: OrderItemOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
  }


  /**
   * Model OrderItemOption
   */

  export type AggregateOrderItemOption = {
    _count: OrderItemOptionCountAggregateOutputType | null
    _avg: OrderItemOptionAvgAggregateOutputType | null
    _sum: OrderItemOptionSumAggregateOutputType | null
    _min: OrderItemOptionMinAggregateOutputType | null
    _max: OrderItemOptionMaxAggregateOutputType | null
  }

  export type OrderItemOptionAvgAggregateOutputType = {
    priceAdjustment: number | null
  }

  export type OrderItemOptionSumAggregateOutputType = {
    priceAdjustment: number | null
  }

  export type OrderItemOptionMinAggregateOutputType = {
    id: string | null
    orderItemId: string | null
    optionId: string | null
    optionName: string | null
    value: string | null
    label: string | null
    priceAdjustment: number | null
    createdAt: Date | null
  }

  export type OrderItemOptionMaxAggregateOutputType = {
    id: string | null
    orderItemId: string | null
    optionId: string | null
    optionName: string | null
    value: string | null
    label: string | null
    priceAdjustment: number | null
    createdAt: Date | null
  }

  export type OrderItemOptionCountAggregateOutputType = {
    id: number
    orderItemId: number
    optionId: number
    optionName: number
    value: number
    label: number
    priceAdjustment: number
    createdAt: number
    _all: number
  }


  export type OrderItemOptionAvgAggregateInputType = {
    priceAdjustment?: true
  }

  export type OrderItemOptionSumAggregateInputType = {
    priceAdjustment?: true
  }

  export type OrderItemOptionMinAggregateInputType = {
    id?: true
    orderItemId?: true
    optionId?: true
    optionName?: true
    value?: true
    label?: true
    priceAdjustment?: true
    createdAt?: true
  }

  export type OrderItemOptionMaxAggregateInputType = {
    id?: true
    orderItemId?: true
    optionId?: true
    optionName?: true
    value?: true
    label?: true
    priceAdjustment?: true
    createdAt?: true
  }

  export type OrderItemOptionCountAggregateInputType = {
    id?: true
    orderItemId?: true
    optionId?: true
    optionName?: true
    value?: true
    label?: true
    priceAdjustment?: true
    createdAt?: true
    _all?: true
  }

  export type OrderItemOptionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderItemOption to aggregate.
     */
    where?: OrderItemOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItemOptions to fetch.
     */
    orderBy?: OrderItemOptionOrderByWithRelationInput | OrderItemOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderItemOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItemOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItemOptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderItemOptions
    **/
    _count?: true | OrderItemOptionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderItemOptionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderItemOptionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderItemOptionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderItemOptionMaxAggregateInputType
  }

  export type GetOrderItemOptionAggregateType<T extends OrderItemOptionAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderItemOption]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderItemOption[P]>
      : GetScalarType<T[P], AggregateOrderItemOption[P]>
  }




  export type OrderItemOptionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemOptionWhereInput
    orderBy?: OrderItemOptionOrderByWithAggregationInput | OrderItemOptionOrderByWithAggregationInput[]
    by: OrderItemOptionScalarFieldEnum[] | OrderItemOptionScalarFieldEnum
    having?: OrderItemOptionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderItemOptionCountAggregateInputType | true
    _avg?: OrderItemOptionAvgAggregateInputType
    _sum?: OrderItemOptionSumAggregateInputType
    _min?: OrderItemOptionMinAggregateInputType
    _max?: OrderItemOptionMaxAggregateInputType
  }

  export type OrderItemOptionGroupByOutputType = {
    id: string
    orderItemId: string
    optionId: string
    optionName: string
    value: string
    label: string | null
    priceAdjustment: number
    createdAt: Date
    _count: OrderItemOptionCountAggregateOutputType | null
    _avg: OrderItemOptionAvgAggregateOutputType | null
    _sum: OrderItemOptionSumAggregateOutputType | null
    _min: OrderItemOptionMinAggregateOutputType | null
    _max: OrderItemOptionMaxAggregateOutputType | null
  }

  type GetOrderItemOptionGroupByPayload<T extends OrderItemOptionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderItemOptionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderItemOptionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderItemOptionGroupByOutputType[P]>
            : GetScalarType<T[P], OrderItemOptionGroupByOutputType[P]>
        }
      >
    >


  export type OrderItemOptionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderItemId?: boolean
    optionId?: boolean
    optionName?: boolean
    value?: boolean
    label?: boolean
    priceAdjustment?: boolean
    createdAt?: boolean
    ProductOption?: boolean | ProductOptionDefaultArgs<ExtArgs>
    OrderItem?: boolean | OrderItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderItemOption"]>

  export type OrderItemOptionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderItemId?: boolean
    optionId?: boolean
    optionName?: boolean
    value?: boolean
    label?: boolean
    priceAdjustment?: boolean
    createdAt?: boolean
    ProductOption?: boolean | ProductOptionDefaultArgs<ExtArgs>
    OrderItem?: boolean | OrderItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderItemOption"]>

  export type OrderItemOptionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderItemId?: boolean
    optionId?: boolean
    optionName?: boolean
    value?: boolean
    label?: boolean
    priceAdjustment?: boolean
    createdAt?: boolean
    ProductOption?: boolean | ProductOptionDefaultArgs<ExtArgs>
    OrderItem?: boolean | OrderItemDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderItemOption"]>

  export type OrderItemOptionSelectScalar = {
    id?: boolean
    orderItemId?: boolean
    optionId?: boolean
    optionName?: boolean
    value?: boolean
    label?: boolean
    priceAdjustment?: boolean
    createdAt?: boolean
  }

  export type OrderItemOptionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderItemId" | "optionId" | "optionName" | "value" | "label" | "priceAdjustment" | "createdAt", ExtArgs["result"]["orderItemOption"]>
  export type OrderItemOptionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProductOption?: boolean | ProductOptionDefaultArgs<ExtArgs>
    OrderItem?: boolean | OrderItemDefaultArgs<ExtArgs>
  }
  export type OrderItemOptionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProductOption?: boolean | ProductOptionDefaultArgs<ExtArgs>
    OrderItem?: boolean | OrderItemDefaultArgs<ExtArgs>
  }
  export type OrderItemOptionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProductOption?: boolean | ProductOptionDefaultArgs<ExtArgs>
    OrderItem?: boolean | OrderItemDefaultArgs<ExtArgs>
  }

  export type $OrderItemOptionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderItemOption"
    objects: {
      ProductOption: Prisma.$ProductOptionPayload<ExtArgs>
      OrderItem: Prisma.$OrderItemPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderItemId: string
      optionId: string
      optionName: string
      value: string
      label: string | null
      priceAdjustment: number
      createdAt: Date
    }, ExtArgs["result"]["orderItemOption"]>
    composites: {}
  }

  type OrderItemOptionGetPayload<S extends boolean | null | undefined | OrderItemOptionDefaultArgs> = $Result.GetResult<Prisma.$OrderItemOptionPayload, S>

  type OrderItemOptionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderItemOptionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderItemOptionCountAggregateInputType | true
    }

  export interface OrderItemOptionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderItemOption'], meta: { name: 'OrderItemOption' } }
    /**
     * Find zero or one OrderItemOption that matches the filter.
     * @param {OrderItemOptionFindUniqueArgs} args - Arguments to find a OrderItemOption
     * @example
     * // Get one OrderItemOption
     * const orderItemOption = await prisma.orderItemOption.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderItemOptionFindUniqueArgs>(args: SelectSubset<T, OrderItemOptionFindUniqueArgs<ExtArgs>>): Prisma__OrderItemOptionClient<$Result.GetResult<Prisma.$OrderItemOptionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrderItemOption that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderItemOptionFindUniqueOrThrowArgs} args - Arguments to find a OrderItemOption
     * @example
     * // Get one OrderItemOption
     * const orderItemOption = await prisma.orderItemOption.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderItemOptionFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderItemOptionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderItemOptionClient<$Result.GetResult<Prisma.$OrderItemOptionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderItemOption that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemOptionFindFirstArgs} args - Arguments to find a OrderItemOption
     * @example
     * // Get one OrderItemOption
     * const orderItemOption = await prisma.orderItemOption.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderItemOptionFindFirstArgs>(args?: SelectSubset<T, OrderItemOptionFindFirstArgs<ExtArgs>>): Prisma__OrderItemOptionClient<$Result.GetResult<Prisma.$OrderItemOptionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderItemOption that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemOptionFindFirstOrThrowArgs} args - Arguments to find a OrderItemOption
     * @example
     * // Get one OrderItemOption
     * const orderItemOption = await prisma.orderItemOption.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderItemOptionFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderItemOptionFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderItemOptionClient<$Result.GetResult<Prisma.$OrderItemOptionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrderItemOptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemOptionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderItemOptions
     * const orderItemOptions = await prisma.orderItemOption.findMany()
     * 
     * // Get first 10 OrderItemOptions
     * const orderItemOptions = await prisma.orderItemOption.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderItemOptionWithIdOnly = await prisma.orderItemOption.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderItemOptionFindManyArgs>(args?: SelectSubset<T, OrderItemOptionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemOptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrderItemOption.
     * @param {OrderItemOptionCreateArgs} args - Arguments to create a OrderItemOption.
     * @example
     * // Create one OrderItemOption
     * const OrderItemOption = await prisma.orderItemOption.create({
     *   data: {
     *     // ... data to create a OrderItemOption
     *   }
     * })
     * 
     */
    create<T extends OrderItemOptionCreateArgs>(args: SelectSubset<T, OrderItemOptionCreateArgs<ExtArgs>>): Prisma__OrderItemOptionClient<$Result.GetResult<Prisma.$OrderItemOptionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrderItemOptions.
     * @param {OrderItemOptionCreateManyArgs} args - Arguments to create many OrderItemOptions.
     * @example
     * // Create many OrderItemOptions
     * const orderItemOption = await prisma.orderItemOption.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderItemOptionCreateManyArgs>(args?: SelectSubset<T, OrderItemOptionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrderItemOptions and returns the data saved in the database.
     * @param {OrderItemOptionCreateManyAndReturnArgs} args - Arguments to create many OrderItemOptions.
     * @example
     * // Create many OrderItemOptions
     * const orderItemOption = await prisma.orderItemOption.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrderItemOptions and only return the `id`
     * const orderItemOptionWithIdOnly = await prisma.orderItemOption.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderItemOptionCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderItemOptionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemOptionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OrderItemOption.
     * @param {OrderItemOptionDeleteArgs} args - Arguments to delete one OrderItemOption.
     * @example
     * // Delete one OrderItemOption
     * const OrderItemOption = await prisma.orderItemOption.delete({
     *   where: {
     *     // ... filter to delete one OrderItemOption
     *   }
     * })
     * 
     */
    delete<T extends OrderItemOptionDeleteArgs>(args: SelectSubset<T, OrderItemOptionDeleteArgs<ExtArgs>>): Prisma__OrderItemOptionClient<$Result.GetResult<Prisma.$OrderItemOptionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrderItemOption.
     * @param {OrderItemOptionUpdateArgs} args - Arguments to update one OrderItemOption.
     * @example
     * // Update one OrderItemOption
     * const orderItemOption = await prisma.orderItemOption.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderItemOptionUpdateArgs>(args: SelectSubset<T, OrderItemOptionUpdateArgs<ExtArgs>>): Prisma__OrderItemOptionClient<$Result.GetResult<Prisma.$OrderItemOptionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrderItemOptions.
     * @param {OrderItemOptionDeleteManyArgs} args - Arguments to filter OrderItemOptions to delete.
     * @example
     * // Delete a few OrderItemOptions
     * const { count } = await prisma.orderItemOption.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderItemOptionDeleteManyArgs>(args?: SelectSubset<T, OrderItemOptionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderItemOptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemOptionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderItemOptions
     * const orderItemOption = await prisma.orderItemOption.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderItemOptionUpdateManyArgs>(args: SelectSubset<T, OrderItemOptionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderItemOptions and returns the data updated in the database.
     * @param {OrderItemOptionUpdateManyAndReturnArgs} args - Arguments to update many OrderItemOptions.
     * @example
     * // Update many OrderItemOptions
     * const orderItemOption = await prisma.orderItemOption.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OrderItemOptions and only return the `id`
     * const orderItemOptionWithIdOnly = await prisma.orderItemOption.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderItemOptionUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderItemOptionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemOptionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OrderItemOption.
     * @param {OrderItemOptionUpsertArgs} args - Arguments to update or create a OrderItemOption.
     * @example
     * // Update or create a OrderItemOption
     * const orderItemOption = await prisma.orderItemOption.upsert({
     *   create: {
     *     // ... data to create a OrderItemOption
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderItemOption we want to update
     *   }
     * })
     */
    upsert<T extends OrderItemOptionUpsertArgs>(args: SelectSubset<T, OrderItemOptionUpsertArgs<ExtArgs>>): Prisma__OrderItemOptionClient<$Result.GetResult<Prisma.$OrderItemOptionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrderItemOptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemOptionCountArgs} args - Arguments to filter OrderItemOptions to count.
     * @example
     * // Count the number of OrderItemOptions
     * const count = await prisma.orderItemOption.count({
     *   where: {
     *     // ... the filter for the OrderItemOptions we want to count
     *   }
     * })
    **/
    count<T extends OrderItemOptionCountArgs>(
      args?: Subset<T, OrderItemOptionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderItemOptionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderItemOption.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemOptionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderItemOptionAggregateArgs>(args: Subset<T, OrderItemOptionAggregateArgs>): Prisma.PrismaPromise<GetOrderItemOptionAggregateType<T>>

    /**
     * Group by OrderItemOption.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemOptionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderItemOptionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderItemOptionGroupByArgs['orderBy'] }
        : { orderBy?: OrderItemOptionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderItemOptionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderItemOptionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderItemOption model
   */
  readonly fields: OrderItemOptionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderItemOption.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderItemOptionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ProductOption<T extends ProductOptionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductOptionDefaultArgs<ExtArgs>>): Prisma__ProductOptionClient<$Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    OrderItem<T extends OrderItemDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderItemDefaultArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderItemOption model
   */
  interface OrderItemOptionFieldRefs {
    readonly id: FieldRef<"OrderItemOption", 'String'>
    readonly orderItemId: FieldRef<"OrderItemOption", 'String'>
    readonly optionId: FieldRef<"OrderItemOption", 'String'>
    readonly optionName: FieldRef<"OrderItemOption", 'String'>
    readonly value: FieldRef<"OrderItemOption", 'String'>
    readonly label: FieldRef<"OrderItemOption", 'String'>
    readonly priceAdjustment: FieldRef<"OrderItemOption", 'Float'>
    readonly createdAt: FieldRef<"OrderItemOption", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * OrderItemOption findUnique
   */
  export type OrderItemOptionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemOption
     */
    select?: OrderItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemOption
     */
    omit?: OrderItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemOptionInclude<ExtArgs> | null
    /**
     * Filter, which OrderItemOption to fetch.
     */
    where: OrderItemOptionWhereUniqueInput
  }

  /**
   * OrderItemOption findUniqueOrThrow
   */
  export type OrderItemOptionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemOption
     */
    select?: OrderItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemOption
     */
    omit?: OrderItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemOptionInclude<ExtArgs> | null
    /**
     * Filter, which OrderItemOption to fetch.
     */
    where: OrderItemOptionWhereUniqueInput
  }

  /**
   * OrderItemOption findFirst
   */
  export type OrderItemOptionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemOption
     */
    select?: OrderItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemOption
     */
    omit?: OrderItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemOptionInclude<ExtArgs> | null
    /**
     * Filter, which OrderItemOption to fetch.
     */
    where?: OrderItemOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItemOptions to fetch.
     */
    orderBy?: OrderItemOptionOrderByWithRelationInput | OrderItemOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderItemOptions.
     */
    cursor?: OrderItemOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItemOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItemOptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderItemOptions.
     */
    distinct?: OrderItemOptionScalarFieldEnum | OrderItemOptionScalarFieldEnum[]
  }

  /**
   * OrderItemOption findFirstOrThrow
   */
  export type OrderItemOptionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemOption
     */
    select?: OrderItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemOption
     */
    omit?: OrderItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemOptionInclude<ExtArgs> | null
    /**
     * Filter, which OrderItemOption to fetch.
     */
    where?: OrderItemOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItemOptions to fetch.
     */
    orderBy?: OrderItemOptionOrderByWithRelationInput | OrderItemOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderItemOptions.
     */
    cursor?: OrderItemOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItemOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItemOptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderItemOptions.
     */
    distinct?: OrderItemOptionScalarFieldEnum | OrderItemOptionScalarFieldEnum[]
  }

  /**
   * OrderItemOption findMany
   */
  export type OrderItemOptionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemOption
     */
    select?: OrderItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemOption
     */
    omit?: OrderItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemOptionInclude<ExtArgs> | null
    /**
     * Filter, which OrderItemOptions to fetch.
     */
    where?: OrderItemOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItemOptions to fetch.
     */
    orderBy?: OrderItemOptionOrderByWithRelationInput | OrderItemOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderItemOptions.
     */
    cursor?: OrderItemOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItemOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItemOptions.
     */
    skip?: number
    distinct?: OrderItemOptionScalarFieldEnum | OrderItemOptionScalarFieldEnum[]
  }

  /**
   * OrderItemOption create
   */
  export type OrderItemOptionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemOption
     */
    select?: OrderItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemOption
     */
    omit?: OrderItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemOptionInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderItemOption.
     */
    data: XOR<OrderItemOptionCreateInput, OrderItemOptionUncheckedCreateInput>
  }

  /**
   * OrderItemOption createMany
   */
  export type OrderItemOptionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderItemOptions.
     */
    data: OrderItemOptionCreateManyInput | OrderItemOptionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderItemOption createManyAndReturn
   */
  export type OrderItemOptionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemOption
     */
    select?: OrderItemOptionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemOption
     */
    omit?: OrderItemOptionOmit<ExtArgs> | null
    /**
     * The data used to create many OrderItemOptions.
     */
    data: OrderItemOptionCreateManyInput | OrderItemOptionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemOptionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderItemOption update
   */
  export type OrderItemOptionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemOption
     */
    select?: OrderItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemOption
     */
    omit?: OrderItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemOptionInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderItemOption.
     */
    data: XOR<OrderItemOptionUpdateInput, OrderItemOptionUncheckedUpdateInput>
    /**
     * Choose, which OrderItemOption to update.
     */
    where: OrderItemOptionWhereUniqueInput
  }

  /**
   * OrderItemOption updateMany
   */
  export type OrderItemOptionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderItemOptions.
     */
    data: XOR<OrderItemOptionUpdateManyMutationInput, OrderItemOptionUncheckedUpdateManyInput>
    /**
     * Filter which OrderItemOptions to update
     */
    where?: OrderItemOptionWhereInput
    /**
     * Limit how many OrderItemOptions to update.
     */
    limit?: number
  }

  /**
   * OrderItemOption updateManyAndReturn
   */
  export type OrderItemOptionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemOption
     */
    select?: OrderItemOptionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemOption
     */
    omit?: OrderItemOptionOmit<ExtArgs> | null
    /**
     * The data used to update OrderItemOptions.
     */
    data: XOR<OrderItemOptionUpdateManyMutationInput, OrderItemOptionUncheckedUpdateManyInput>
    /**
     * Filter which OrderItemOptions to update
     */
    where?: OrderItemOptionWhereInput
    /**
     * Limit how many OrderItemOptions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemOptionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderItemOption upsert
   */
  export type OrderItemOptionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemOption
     */
    select?: OrderItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemOption
     */
    omit?: OrderItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemOptionInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderItemOption to update in case it exists.
     */
    where: OrderItemOptionWhereUniqueInput
    /**
     * In case the OrderItemOption found by the `where` argument doesn't exist, create a new OrderItemOption with this data.
     */
    create: XOR<OrderItemOptionCreateInput, OrderItemOptionUncheckedCreateInput>
    /**
     * In case the OrderItemOption was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderItemOptionUpdateInput, OrderItemOptionUncheckedUpdateInput>
  }

  /**
   * OrderItemOption delete
   */
  export type OrderItemOptionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemOption
     */
    select?: OrderItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemOption
     */
    omit?: OrderItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemOptionInclude<ExtArgs> | null
    /**
     * Filter which OrderItemOption to delete.
     */
    where: OrderItemOptionWhereUniqueInput
  }

  /**
   * OrderItemOption deleteMany
   */
  export type OrderItemOptionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderItemOptions to delete
     */
    where?: OrderItemOptionWhereInput
    /**
     * Limit how many OrderItemOptions to delete.
     */
    limit?: number
  }

  /**
   * OrderItemOption without action
   */
  export type OrderItemOptionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemOption
     */
    select?: OrderItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemOption
     */
    omit?: OrderItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemOptionInclude<ExtArgs> | null
  }


  /**
   * Model OrderStatusHistory
   */

  export type AggregateOrderStatusHistory = {
    _count: OrderStatusHistoryCountAggregateOutputType | null
    _min: OrderStatusHistoryMinAggregateOutputType | null
    _max: OrderStatusHistoryMaxAggregateOutputType | null
  }

  export type OrderStatusHistoryMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    fromStatus: string | null
    toStatus: string | null
    fromStage: string | null
    toStage: string | null
    notes: string | null
    changedBy: string | null
    changedAt: Date | null
  }

  export type OrderStatusHistoryMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    fromStatus: string | null
    toStatus: string | null
    fromStage: string | null
    toStage: string | null
    notes: string | null
    changedBy: string | null
    changedAt: Date | null
  }

  export type OrderStatusHistoryCountAggregateOutputType = {
    id: number
    orderId: number
    fromStatus: number
    toStatus: number
    fromStage: number
    toStage: number
    notes: number
    changedBy: number
    changedAt: number
    _all: number
  }


  export type OrderStatusHistoryMinAggregateInputType = {
    id?: true
    orderId?: true
    fromStatus?: true
    toStatus?: true
    fromStage?: true
    toStage?: true
    notes?: true
    changedBy?: true
    changedAt?: true
  }

  export type OrderStatusHistoryMaxAggregateInputType = {
    id?: true
    orderId?: true
    fromStatus?: true
    toStatus?: true
    fromStage?: true
    toStage?: true
    notes?: true
    changedBy?: true
    changedAt?: true
  }

  export type OrderStatusHistoryCountAggregateInputType = {
    id?: true
    orderId?: true
    fromStatus?: true
    toStatus?: true
    fromStage?: true
    toStage?: true
    notes?: true
    changedBy?: true
    changedAt?: true
    _all?: true
  }

  export type OrderStatusHistoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderStatusHistory to aggregate.
     */
    where?: OrderStatusHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderStatusHistories to fetch.
     */
    orderBy?: OrderStatusHistoryOrderByWithRelationInput | OrderStatusHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderStatusHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderStatusHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderStatusHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderStatusHistories
    **/
    _count?: true | OrderStatusHistoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderStatusHistoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderStatusHistoryMaxAggregateInputType
  }

  export type GetOrderStatusHistoryAggregateType<T extends OrderStatusHistoryAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderStatusHistory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderStatusHistory[P]>
      : GetScalarType<T[P], AggregateOrderStatusHistory[P]>
  }




  export type OrderStatusHistoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderStatusHistoryWhereInput
    orderBy?: OrderStatusHistoryOrderByWithAggregationInput | OrderStatusHistoryOrderByWithAggregationInput[]
    by: OrderStatusHistoryScalarFieldEnum[] | OrderStatusHistoryScalarFieldEnum
    having?: OrderStatusHistoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderStatusHistoryCountAggregateInputType | true
    _min?: OrderStatusHistoryMinAggregateInputType
    _max?: OrderStatusHistoryMaxAggregateInputType
  }

  export type OrderStatusHistoryGroupByOutputType = {
    id: string
    orderId: string
    fromStatus: string | null
    toStatus: string
    fromStage: string | null
    toStage: string
    notes: string | null
    changedBy: string | null
    changedAt: Date
    _count: OrderStatusHistoryCountAggregateOutputType | null
    _min: OrderStatusHistoryMinAggregateOutputType | null
    _max: OrderStatusHistoryMaxAggregateOutputType | null
  }

  type GetOrderStatusHistoryGroupByPayload<T extends OrderStatusHistoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderStatusHistoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderStatusHistoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderStatusHistoryGroupByOutputType[P]>
            : GetScalarType<T[P], OrderStatusHistoryGroupByOutputType[P]>
        }
      >
    >


  export type OrderStatusHistorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    fromStatus?: boolean
    toStatus?: boolean
    fromStage?: boolean
    toStage?: boolean
    notes?: boolean
    changedBy?: boolean
    changedAt?: boolean
    Order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderStatusHistory"]>

  export type OrderStatusHistorySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    fromStatus?: boolean
    toStatus?: boolean
    fromStage?: boolean
    toStage?: boolean
    notes?: boolean
    changedBy?: boolean
    changedAt?: boolean
    Order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderStatusHistory"]>

  export type OrderStatusHistorySelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    fromStatus?: boolean
    toStatus?: boolean
    fromStage?: boolean
    toStage?: boolean
    notes?: boolean
    changedBy?: boolean
    changedAt?: boolean
    Order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderStatusHistory"]>

  export type OrderStatusHistorySelectScalar = {
    id?: boolean
    orderId?: boolean
    fromStatus?: boolean
    toStatus?: boolean
    fromStage?: boolean
    toStage?: boolean
    notes?: boolean
    changedBy?: boolean
    changedAt?: boolean
  }

  export type OrderStatusHistoryOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "orderId" | "fromStatus" | "toStatus" | "fromStage" | "toStage" | "notes" | "changedBy" | "changedAt", ExtArgs["result"]["orderStatusHistory"]>
  export type OrderStatusHistoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Order?: boolean | OrderDefaultArgs<ExtArgs>
  }
  export type OrderStatusHistoryIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Order?: boolean | OrderDefaultArgs<ExtArgs>
  }
  export type OrderStatusHistoryIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Order?: boolean | OrderDefaultArgs<ExtArgs>
  }

  export type $OrderStatusHistoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderStatusHistory"
    objects: {
      Order: Prisma.$OrderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string
      fromStatus: string | null
      toStatus: string
      fromStage: string | null
      toStage: string
      notes: string | null
      changedBy: string | null
      changedAt: Date
    }, ExtArgs["result"]["orderStatusHistory"]>
    composites: {}
  }

  type OrderStatusHistoryGetPayload<S extends boolean | null | undefined | OrderStatusHistoryDefaultArgs> = $Result.GetResult<Prisma.$OrderStatusHistoryPayload, S>

  type OrderStatusHistoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<OrderStatusHistoryFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: OrderStatusHistoryCountAggregateInputType | true
    }

  export interface OrderStatusHistoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderStatusHistory'], meta: { name: 'OrderStatusHistory' } }
    /**
     * Find zero or one OrderStatusHistory that matches the filter.
     * @param {OrderStatusHistoryFindUniqueArgs} args - Arguments to find a OrderStatusHistory
     * @example
     * // Get one OrderStatusHistory
     * const orderStatusHistory = await prisma.orderStatusHistory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderStatusHistoryFindUniqueArgs>(args: SelectSubset<T, OrderStatusHistoryFindUniqueArgs<ExtArgs>>): Prisma__OrderStatusHistoryClient<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one OrderStatusHistory that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {OrderStatusHistoryFindUniqueOrThrowArgs} args - Arguments to find a OrderStatusHistory
     * @example
     * // Get one OrderStatusHistory
     * const orderStatusHistory = await prisma.orderStatusHistory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderStatusHistoryFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderStatusHistoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderStatusHistoryClient<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderStatusHistory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderStatusHistoryFindFirstArgs} args - Arguments to find a OrderStatusHistory
     * @example
     * // Get one OrderStatusHistory
     * const orderStatusHistory = await prisma.orderStatusHistory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderStatusHistoryFindFirstArgs>(args?: SelectSubset<T, OrderStatusHistoryFindFirstArgs<ExtArgs>>): Prisma__OrderStatusHistoryClient<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first OrderStatusHistory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderStatusHistoryFindFirstOrThrowArgs} args - Arguments to find a OrderStatusHistory
     * @example
     * // Get one OrderStatusHistory
     * const orderStatusHistory = await prisma.orderStatusHistory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderStatusHistoryFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderStatusHistoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderStatusHistoryClient<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more OrderStatusHistories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderStatusHistoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderStatusHistories
     * const orderStatusHistories = await prisma.orderStatusHistory.findMany()
     * 
     * // Get first 10 OrderStatusHistories
     * const orderStatusHistories = await prisma.orderStatusHistory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderStatusHistoryWithIdOnly = await prisma.orderStatusHistory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderStatusHistoryFindManyArgs>(args?: SelectSubset<T, OrderStatusHistoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a OrderStatusHistory.
     * @param {OrderStatusHistoryCreateArgs} args - Arguments to create a OrderStatusHistory.
     * @example
     * // Create one OrderStatusHistory
     * const OrderStatusHistory = await prisma.orderStatusHistory.create({
     *   data: {
     *     // ... data to create a OrderStatusHistory
     *   }
     * })
     * 
     */
    create<T extends OrderStatusHistoryCreateArgs>(args: SelectSubset<T, OrderStatusHistoryCreateArgs<ExtArgs>>): Prisma__OrderStatusHistoryClient<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many OrderStatusHistories.
     * @param {OrderStatusHistoryCreateManyArgs} args - Arguments to create many OrderStatusHistories.
     * @example
     * // Create many OrderStatusHistories
     * const orderStatusHistory = await prisma.orderStatusHistory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderStatusHistoryCreateManyArgs>(args?: SelectSubset<T, OrderStatusHistoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OrderStatusHistories and returns the data saved in the database.
     * @param {OrderStatusHistoryCreateManyAndReturnArgs} args - Arguments to create many OrderStatusHistories.
     * @example
     * // Create many OrderStatusHistories
     * const orderStatusHistory = await prisma.orderStatusHistory.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OrderStatusHistories and only return the `id`
     * const orderStatusHistoryWithIdOnly = await prisma.orderStatusHistory.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends OrderStatusHistoryCreateManyAndReturnArgs>(args?: SelectSubset<T, OrderStatusHistoryCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a OrderStatusHistory.
     * @param {OrderStatusHistoryDeleteArgs} args - Arguments to delete one OrderStatusHistory.
     * @example
     * // Delete one OrderStatusHistory
     * const OrderStatusHistory = await prisma.orderStatusHistory.delete({
     *   where: {
     *     // ... filter to delete one OrderStatusHistory
     *   }
     * })
     * 
     */
    delete<T extends OrderStatusHistoryDeleteArgs>(args: SelectSubset<T, OrderStatusHistoryDeleteArgs<ExtArgs>>): Prisma__OrderStatusHistoryClient<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one OrderStatusHistory.
     * @param {OrderStatusHistoryUpdateArgs} args - Arguments to update one OrderStatusHistory.
     * @example
     * // Update one OrderStatusHistory
     * const orderStatusHistory = await prisma.orderStatusHistory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderStatusHistoryUpdateArgs>(args: SelectSubset<T, OrderStatusHistoryUpdateArgs<ExtArgs>>): Prisma__OrderStatusHistoryClient<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more OrderStatusHistories.
     * @param {OrderStatusHistoryDeleteManyArgs} args - Arguments to filter OrderStatusHistories to delete.
     * @example
     * // Delete a few OrderStatusHistories
     * const { count } = await prisma.orderStatusHistory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderStatusHistoryDeleteManyArgs>(args?: SelectSubset<T, OrderStatusHistoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderStatusHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderStatusHistoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderStatusHistories
     * const orderStatusHistory = await prisma.orderStatusHistory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderStatusHistoryUpdateManyArgs>(args: SelectSubset<T, OrderStatusHistoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderStatusHistories and returns the data updated in the database.
     * @param {OrderStatusHistoryUpdateManyAndReturnArgs} args - Arguments to update many OrderStatusHistories.
     * @example
     * // Update many OrderStatusHistories
     * const orderStatusHistory = await prisma.orderStatusHistory.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more OrderStatusHistories and only return the `id`
     * const orderStatusHistoryWithIdOnly = await prisma.orderStatusHistory.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends OrderStatusHistoryUpdateManyAndReturnArgs>(args: SelectSubset<T, OrderStatusHistoryUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one OrderStatusHistory.
     * @param {OrderStatusHistoryUpsertArgs} args - Arguments to update or create a OrderStatusHistory.
     * @example
     * // Update or create a OrderStatusHistory
     * const orderStatusHistory = await prisma.orderStatusHistory.upsert({
     *   create: {
     *     // ... data to create a OrderStatusHistory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderStatusHistory we want to update
     *   }
     * })
     */
    upsert<T extends OrderStatusHistoryUpsertArgs>(args: SelectSubset<T, OrderStatusHistoryUpsertArgs<ExtArgs>>): Prisma__OrderStatusHistoryClient<$Result.GetResult<Prisma.$OrderStatusHistoryPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of OrderStatusHistories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderStatusHistoryCountArgs} args - Arguments to filter OrderStatusHistories to count.
     * @example
     * // Count the number of OrderStatusHistories
     * const count = await prisma.orderStatusHistory.count({
     *   where: {
     *     // ... the filter for the OrderStatusHistories we want to count
     *   }
     * })
    **/
    count<T extends OrderStatusHistoryCountArgs>(
      args?: Subset<T, OrderStatusHistoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderStatusHistoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderStatusHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderStatusHistoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderStatusHistoryAggregateArgs>(args: Subset<T, OrderStatusHistoryAggregateArgs>): Prisma.PrismaPromise<GetOrderStatusHistoryAggregateType<T>>

    /**
     * Group by OrderStatusHistory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderStatusHistoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderStatusHistoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderStatusHistoryGroupByArgs['orderBy'] }
        : { orderBy?: OrderStatusHistoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderStatusHistoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderStatusHistoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderStatusHistory model
   */
  readonly fields: OrderStatusHistoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderStatusHistory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderStatusHistoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderStatusHistory model
   */
  interface OrderStatusHistoryFieldRefs {
    readonly id: FieldRef<"OrderStatusHistory", 'String'>
    readonly orderId: FieldRef<"OrderStatusHistory", 'String'>
    readonly fromStatus: FieldRef<"OrderStatusHistory", 'String'>
    readonly toStatus: FieldRef<"OrderStatusHistory", 'String'>
    readonly fromStage: FieldRef<"OrderStatusHistory", 'String'>
    readonly toStage: FieldRef<"OrderStatusHistory", 'String'>
    readonly notes: FieldRef<"OrderStatusHistory", 'String'>
    readonly changedBy: FieldRef<"OrderStatusHistory", 'String'>
    readonly changedAt: FieldRef<"OrderStatusHistory", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * OrderStatusHistory findUnique
   */
  export type OrderStatusHistoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
    /**
     * Filter, which OrderStatusHistory to fetch.
     */
    where: OrderStatusHistoryWhereUniqueInput
  }

  /**
   * OrderStatusHistory findUniqueOrThrow
   */
  export type OrderStatusHistoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
    /**
     * Filter, which OrderStatusHistory to fetch.
     */
    where: OrderStatusHistoryWhereUniqueInput
  }

  /**
   * OrderStatusHistory findFirst
   */
  export type OrderStatusHistoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
    /**
     * Filter, which OrderStatusHistory to fetch.
     */
    where?: OrderStatusHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderStatusHistories to fetch.
     */
    orderBy?: OrderStatusHistoryOrderByWithRelationInput | OrderStatusHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderStatusHistories.
     */
    cursor?: OrderStatusHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderStatusHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderStatusHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderStatusHistories.
     */
    distinct?: OrderStatusHistoryScalarFieldEnum | OrderStatusHistoryScalarFieldEnum[]
  }

  /**
   * OrderStatusHistory findFirstOrThrow
   */
  export type OrderStatusHistoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
    /**
     * Filter, which OrderStatusHistory to fetch.
     */
    where?: OrderStatusHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderStatusHistories to fetch.
     */
    orderBy?: OrderStatusHistoryOrderByWithRelationInput | OrderStatusHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderStatusHistories.
     */
    cursor?: OrderStatusHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderStatusHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderStatusHistories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderStatusHistories.
     */
    distinct?: OrderStatusHistoryScalarFieldEnum | OrderStatusHistoryScalarFieldEnum[]
  }

  /**
   * OrderStatusHistory findMany
   */
  export type OrderStatusHistoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
    /**
     * Filter, which OrderStatusHistories to fetch.
     */
    where?: OrderStatusHistoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderStatusHistories to fetch.
     */
    orderBy?: OrderStatusHistoryOrderByWithRelationInput | OrderStatusHistoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderStatusHistories.
     */
    cursor?: OrderStatusHistoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderStatusHistories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderStatusHistories.
     */
    skip?: number
    distinct?: OrderStatusHistoryScalarFieldEnum | OrderStatusHistoryScalarFieldEnum[]
  }

  /**
   * OrderStatusHistory create
   */
  export type OrderStatusHistoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderStatusHistory.
     */
    data: XOR<OrderStatusHistoryCreateInput, OrderStatusHistoryUncheckedCreateInput>
  }

  /**
   * OrderStatusHistory createMany
   */
  export type OrderStatusHistoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderStatusHistories.
     */
    data: OrderStatusHistoryCreateManyInput | OrderStatusHistoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderStatusHistory createManyAndReturn
   */
  export type OrderStatusHistoryCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * The data used to create many OrderStatusHistories.
     */
    data: OrderStatusHistoryCreateManyInput | OrderStatusHistoryCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderStatusHistory update
   */
  export type OrderStatusHistoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderStatusHistory.
     */
    data: XOR<OrderStatusHistoryUpdateInput, OrderStatusHistoryUncheckedUpdateInput>
    /**
     * Choose, which OrderStatusHistory to update.
     */
    where: OrderStatusHistoryWhereUniqueInput
  }

  /**
   * OrderStatusHistory updateMany
   */
  export type OrderStatusHistoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderStatusHistories.
     */
    data: XOR<OrderStatusHistoryUpdateManyMutationInput, OrderStatusHistoryUncheckedUpdateManyInput>
    /**
     * Filter which OrderStatusHistories to update
     */
    where?: OrderStatusHistoryWhereInput
    /**
     * Limit how many OrderStatusHistories to update.
     */
    limit?: number
  }

  /**
   * OrderStatusHistory updateManyAndReturn
   */
  export type OrderStatusHistoryUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * The data used to update OrderStatusHistories.
     */
    data: XOR<OrderStatusHistoryUpdateManyMutationInput, OrderStatusHistoryUncheckedUpdateManyInput>
    /**
     * Filter which OrderStatusHistories to update
     */
    where?: OrderStatusHistoryWhereInput
    /**
     * Limit how many OrderStatusHistories to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * OrderStatusHistory upsert
   */
  export type OrderStatusHistoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderStatusHistory to update in case it exists.
     */
    where: OrderStatusHistoryWhereUniqueInput
    /**
     * In case the OrderStatusHistory found by the `where` argument doesn't exist, create a new OrderStatusHistory with this data.
     */
    create: XOR<OrderStatusHistoryCreateInput, OrderStatusHistoryUncheckedCreateInput>
    /**
     * In case the OrderStatusHistory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderStatusHistoryUpdateInput, OrderStatusHistoryUncheckedUpdateInput>
  }

  /**
   * OrderStatusHistory delete
   */
  export type OrderStatusHistoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
    /**
     * Filter which OrderStatusHistory to delete.
     */
    where: OrderStatusHistoryWhereUniqueInput
  }

  /**
   * OrderStatusHistory deleteMany
   */
  export type OrderStatusHistoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderStatusHistories to delete
     */
    where?: OrderStatusHistoryWhereInput
    /**
     * Limit how many OrderStatusHistories to delete.
     */
    limit?: number
  }

  /**
   * OrderStatusHistory without action
   */
  export type OrderStatusHistoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderStatusHistory
     */
    select?: OrderStatusHistorySelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderStatusHistory
     */
    omit?: OrderStatusHistoryOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderStatusHistoryInclude<ExtArgs> | null
  }


  /**
   * Model ProductOption
   */

  export type AggregateProductOption = {
    _count: ProductOptionCountAggregateOutputType | null
    _avg: ProductOptionAvgAggregateOutputType | null
    _sum: ProductOptionSumAggregateOutputType | null
    _min: ProductOptionMinAggregateOutputType | null
    _max: ProductOptionMaxAggregateOutputType | null
  }

  export type ProductOptionAvgAggregateOutputType = {
    sortOrder: number | null
  }

  export type ProductOptionSumAggregateOutputType = {
    sortOrder: number | null
  }

  export type ProductOptionMinAggregateOutputType = {
    id: string | null
    productId: string | null
    name: string | null
    type: string | null
    required: boolean | null
    sortOrder: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductOptionMaxAggregateOutputType = {
    id: string | null
    productId: string | null
    name: string | null
    type: string | null
    required: boolean | null
    sortOrder: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductOptionCountAggregateOutputType = {
    id: number
    productId: number
    name: number
    type: number
    required: number
    sortOrder: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProductOptionAvgAggregateInputType = {
    sortOrder?: true
  }

  export type ProductOptionSumAggregateInputType = {
    sortOrder?: true
  }

  export type ProductOptionMinAggregateInputType = {
    id?: true
    productId?: true
    name?: true
    type?: true
    required?: true
    sortOrder?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductOptionMaxAggregateInputType = {
    id?: true
    productId?: true
    name?: true
    type?: true
    required?: true
    sortOrder?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductOptionCountAggregateInputType = {
    id?: true
    productId?: true
    name?: true
    type?: true
    required?: true
    sortOrder?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProductOptionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductOption to aggregate.
     */
    where?: ProductOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductOptions to fetch.
     */
    orderBy?: ProductOptionOrderByWithRelationInput | ProductOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductOptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductOptions
    **/
    _count?: true | ProductOptionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductOptionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductOptionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductOptionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductOptionMaxAggregateInputType
  }

  export type GetProductOptionAggregateType<T extends ProductOptionAggregateArgs> = {
        [P in keyof T & keyof AggregateProductOption]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductOption[P]>
      : GetScalarType<T[P], AggregateProductOption[P]>
  }




  export type ProductOptionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductOptionWhereInput
    orderBy?: ProductOptionOrderByWithAggregationInput | ProductOptionOrderByWithAggregationInput[]
    by: ProductOptionScalarFieldEnum[] | ProductOptionScalarFieldEnum
    having?: ProductOptionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductOptionCountAggregateInputType | true
    _avg?: ProductOptionAvgAggregateInputType
    _sum?: ProductOptionSumAggregateInputType
    _min?: ProductOptionMinAggregateInputType
    _max?: ProductOptionMaxAggregateInputType
  }

  export type ProductOptionGroupByOutputType = {
    id: string
    productId: string
    name: string
    type: string
    required: boolean
    sortOrder: number
    createdAt: Date
    updatedAt: Date
    _count: ProductOptionCountAggregateOutputType | null
    _avg: ProductOptionAvgAggregateOutputType | null
    _sum: ProductOptionSumAggregateOutputType | null
    _min: ProductOptionMinAggregateOutputType | null
    _max: ProductOptionMaxAggregateOutputType | null
  }

  type GetProductOptionGroupByPayload<T extends ProductOptionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductOptionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductOptionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductOptionGroupByOutputType[P]>
            : GetScalarType<T[P], ProductOptionGroupByOutputType[P]>
        }
      >
    >


  export type ProductOptionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    name?: boolean
    type?: boolean
    required?: boolean
    sortOrder?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    EventItemOption?: boolean | ProductOption$EventItemOptionArgs<ExtArgs>
    OrderItemOption?: boolean | ProductOption$OrderItemOptionArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
    ProductOptionValue?: boolean | ProductOption$ProductOptionValueArgs<ExtArgs>
    _count?: boolean | ProductOptionCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productOption"]>

  export type ProductOptionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    name?: boolean
    type?: boolean
    required?: boolean
    sortOrder?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productOption"]>

  export type ProductOptionSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    name?: boolean
    type?: boolean
    required?: boolean
    sortOrder?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productOption"]>

  export type ProductOptionSelectScalar = {
    id?: boolean
    productId?: boolean
    name?: boolean
    type?: boolean
    required?: boolean
    sortOrder?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProductOptionOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productId" | "name" | "type" | "required" | "sortOrder" | "createdAt" | "updatedAt", ExtArgs["result"]["productOption"]>
  export type ProductOptionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    EventItemOption?: boolean | ProductOption$EventItemOptionArgs<ExtArgs>
    OrderItemOption?: boolean | ProductOption$OrderItemOptionArgs<ExtArgs>
    Product?: boolean | ProductDefaultArgs<ExtArgs>
    ProductOptionValue?: boolean | ProductOption$ProductOptionValueArgs<ExtArgs>
    _count?: boolean | ProductOptionCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductOptionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type ProductOptionIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $ProductOptionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductOption"
    objects: {
      EventItemOption: Prisma.$EventItemOptionPayload<ExtArgs>[]
      OrderItemOption: Prisma.$OrderItemOptionPayload<ExtArgs>[]
      Product: Prisma.$ProductPayload<ExtArgs>
      ProductOptionValue: Prisma.$ProductOptionValuePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      productId: string
      name: string
      type: string
      required: boolean
      sortOrder: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["productOption"]>
    composites: {}
  }

  type ProductOptionGetPayload<S extends boolean | null | undefined | ProductOptionDefaultArgs> = $Result.GetResult<Prisma.$ProductOptionPayload, S>

  type ProductOptionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductOptionFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductOptionCountAggregateInputType | true
    }

  export interface ProductOptionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductOption'], meta: { name: 'ProductOption' } }
    /**
     * Find zero or one ProductOption that matches the filter.
     * @param {ProductOptionFindUniqueArgs} args - Arguments to find a ProductOption
     * @example
     * // Get one ProductOption
     * const productOption = await prisma.productOption.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductOptionFindUniqueArgs>(args: SelectSubset<T, ProductOptionFindUniqueArgs<ExtArgs>>): Prisma__ProductOptionClient<$Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductOption that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductOptionFindUniqueOrThrowArgs} args - Arguments to find a ProductOption
     * @example
     * // Get one ProductOption
     * const productOption = await prisma.productOption.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductOptionFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductOptionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductOptionClient<$Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductOption that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductOptionFindFirstArgs} args - Arguments to find a ProductOption
     * @example
     * // Get one ProductOption
     * const productOption = await prisma.productOption.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductOptionFindFirstArgs>(args?: SelectSubset<T, ProductOptionFindFirstArgs<ExtArgs>>): Prisma__ProductOptionClient<$Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductOption that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductOptionFindFirstOrThrowArgs} args - Arguments to find a ProductOption
     * @example
     * // Get one ProductOption
     * const productOption = await prisma.productOption.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductOptionFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductOptionFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductOptionClient<$Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductOptions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductOptionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductOptions
     * const productOptions = await prisma.productOption.findMany()
     * 
     * // Get first 10 ProductOptions
     * const productOptions = await prisma.productOption.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productOptionWithIdOnly = await prisma.productOption.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductOptionFindManyArgs>(args?: SelectSubset<T, ProductOptionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductOption.
     * @param {ProductOptionCreateArgs} args - Arguments to create a ProductOption.
     * @example
     * // Create one ProductOption
     * const ProductOption = await prisma.productOption.create({
     *   data: {
     *     // ... data to create a ProductOption
     *   }
     * })
     * 
     */
    create<T extends ProductOptionCreateArgs>(args: SelectSubset<T, ProductOptionCreateArgs<ExtArgs>>): Prisma__ProductOptionClient<$Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductOptions.
     * @param {ProductOptionCreateManyArgs} args - Arguments to create many ProductOptions.
     * @example
     * // Create many ProductOptions
     * const productOption = await prisma.productOption.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductOptionCreateManyArgs>(args?: SelectSubset<T, ProductOptionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductOptions and returns the data saved in the database.
     * @param {ProductOptionCreateManyAndReturnArgs} args - Arguments to create many ProductOptions.
     * @example
     * // Create many ProductOptions
     * const productOption = await prisma.productOption.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductOptions and only return the `id`
     * const productOptionWithIdOnly = await prisma.productOption.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductOptionCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductOptionCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductOption.
     * @param {ProductOptionDeleteArgs} args - Arguments to delete one ProductOption.
     * @example
     * // Delete one ProductOption
     * const ProductOption = await prisma.productOption.delete({
     *   where: {
     *     // ... filter to delete one ProductOption
     *   }
     * })
     * 
     */
    delete<T extends ProductOptionDeleteArgs>(args: SelectSubset<T, ProductOptionDeleteArgs<ExtArgs>>): Prisma__ProductOptionClient<$Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductOption.
     * @param {ProductOptionUpdateArgs} args - Arguments to update one ProductOption.
     * @example
     * // Update one ProductOption
     * const productOption = await prisma.productOption.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductOptionUpdateArgs>(args: SelectSubset<T, ProductOptionUpdateArgs<ExtArgs>>): Prisma__ProductOptionClient<$Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductOptions.
     * @param {ProductOptionDeleteManyArgs} args - Arguments to filter ProductOptions to delete.
     * @example
     * // Delete a few ProductOptions
     * const { count } = await prisma.productOption.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductOptionDeleteManyArgs>(args?: SelectSubset<T, ProductOptionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductOptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductOptionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductOptions
     * const productOption = await prisma.productOption.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductOptionUpdateManyArgs>(args: SelectSubset<T, ProductOptionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductOptions and returns the data updated in the database.
     * @param {ProductOptionUpdateManyAndReturnArgs} args - Arguments to update many ProductOptions.
     * @example
     * // Update many ProductOptions
     * const productOption = await prisma.productOption.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductOptions and only return the `id`
     * const productOptionWithIdOnly = await prisma.productOption.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductOptionUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductOptionUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductOption.
     * @param {ProductOptionUpsertArgs} args - Arguments to update or create a ProductOption.
     * @example
     * // Update or create a ProductOption
     * const productOption = await prisma.productOption.upsert({
     *   create: {
     *     // ... data to create a ProductOption
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductOption we want to update
     *   }
     * })
     */
    upsert<T extends ProductOptionUpsertArgs>(args: SelectSubset<T, ProductOptionUpsertArgs<ExtArgs>>): Prisma__ProductOptionClient<$Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductOptions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductOptionCountArgs} args - Arguments to filter ProductOptions to count.
     * @example
     * // Count the number of ProductOptions
     * const count = await prisma.productOption.count({
     *   where: {
     *     // ... the filter for the ProductOptions we want to count
     *   }
     * })
    **/
    count<T extends ProductOptionCountArgs>(
      args?: Subset<T, ProductOptionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductOptionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductOption.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductOptionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductOptionAggregateArgs>(args: Subset<T, ProductOptionAggregateArgs>): Prisma.PrismaPromise<GetProductOptionAggregateType<T>>

    /**
     * Group by ProductOption.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductOptionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductOptionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductOptionGroupByArgs['orderBy'] }
        : { orderBy?: ProductOptionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductOptionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductOptionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductOption model
   */
  readonly fields: ProductOptionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductOption.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductOptionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    EventItemOption<T extends ProductOption$EventItemOptionArgs<ExtArgs> = {}>(args?: Subset<T, ProductOption$EventItemOptionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$EventItemOptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    OrderItemOption<T extends ProductOption$OrderItemOptionArgs<ExtArgs> = {}>(args?: Subset<T, ProductOption$OrderItemOptionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemOptionPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    Product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    ProductOptionValue<T extends ProductOption$ProductOptionValueArgs<ExtArgs> = {}>(args?: Subset<T, ProductOption$ProductOptionValueArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductOption model
   */
  interface ProductOptionFieldRefs {
    readonly id: FieldRef<"ProductOption", 'String'>
    readonly productId: FieldRef<"ProductOption", 'String'>
    readonly name: FieldRef<"ProductOption", 'String'>
    readonly type: FieldRef<"ProductOption", 'String'>
    readonly required: FieldRef<"ProductOption", 'Boolean'>
    readonly sortOrder: FieldRef<"ProductOption", 'Int'>
    readonly createdAt: FieldRef<"ProductOption", 'DateTime'>
    readonly updatedAt: FieldRef<"ProductOption", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductOption findUnique
   */
  export type ProductOptionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOption
     */
    select?: ProductOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOption
     */
    omit?: ProductOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionInclude<ExtArgs> | null
    /**
     * Filter, which ProductOption to fetch.
     */
    where: ProductOptionWhereUniqueInput
  }

  /**
   * ProductOption findUniqueOrThrow
   */
  export type ProductOptionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOption
     */
    select?: ProductOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOption
     */
    omit?: ProductOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionInclude<ExtArgs> | null
    /**
     * Filter, which ProductOption to fetch.
     */
    where: ProductOptionWhereUniqueInput
  }

  /**
   * ProductOption findFirst
   */
  export type ProductOptionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOption
     */
    select?: ProductOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOption
     */
    omit?: ProductOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionInclude<ExtArgs> | null
    /**
     * Filter, which ProductOption to fetch.
     */
    where?: ProductOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductOptions to fetch.
     */
    orderBy?: ProductOptionOrderByWithRelationInput | ProductOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductOptions.
     */
    cursor?: ProductOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductOptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductOptions.
     */
    distinct?: ProductOptionScalarFieldEnum | ProductOptionScalarFieldEnum[]
  }

  /**
   * ProductOption findFirstOrThrow
   */
  export type ProductOptionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOption
     */
    select?: ProductOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOption
     */
    omit?: ProductOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionInclude<ExtArgs> | null
    /**
     * Filter, which ProductOption to fetch.
     */
    where?: ProductOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductOptions to fetch.
     */
    orderBy?: ProductOptionOrderByWithRelationInput | ProductOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductOptions.
     */
    cursor?: ProductOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductOptions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductOptions.
     */
    distinct?: ProductOptionScalarFieldEnum | ProductOptionScalarFieldEnum[]
  }

  /**
   * ProductOption findMany
   */
  export type ProductOptionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOption
     */
    select?: ProductOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOption
     */
    omit?: ProductOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionInclude<ExtArgs> | null
    /**
     * Filter, which ProductOptions to fetch.
     */
    where?: ProductOptionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductOptions to fetch.
     */
    orderBy?: ProductOptionOrderByWithRelationInput | ProductOptionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductOptions.
     */
    cursor?: ProductOptionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductOptions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductOptions.
     */
    skip?: number
    distinct?: ProductOptionScalarFieldEnum | ProductOptionScalarFieldEnum[]
  }

  /**
   * ProductOption create
   */
  export type ProductOptionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOption
     */
    select?: ProductOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOption
     */
    omit?: ProductOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductOption.
     */
    data: XOR<ProductOptionCreateInput, ProductOptionUncheckedCreateInput>
  }

  /**
   * ProductOption createMany
   */
  export type ProductOptionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductOptions.
     */
    data: ProductOptionCreateManyInput | ProductOptionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductOption createManyAndReturn
   */
  export type ProductOptionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOption
     */
    select?: ProductOptionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOption
     */
    omit?: ProductOptionOmit<ExtArgs> | null
    /**
     * The data used to create many ProductOptions.
     */
    data: ProductOptionCreateManyInput | ProductOptionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductOption update
   */
  export type ProductOptionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOption
     */
    select?: ProductOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOption
     */
    omit?: ProductOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductOption.
     */
    data: XOR<ProductOptionUpdateInput, ProductOptionUncheckedUpdateInput>
    /**
     * Choose, which ProductOption to update.
     */
    where: ProductOptionWhereUniqueInput
  }

  /**
   * ProductOption updateMany
   */
  export type ProductOptionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductOptions.
     */
    data: XOR<ProductOptionUpdateManyMutationInput, ProductOptionUncheckedUpdateManyInput>
    /**
     * Filter which ProductOptions to update
     */
    where?: ProductOptionWhereInput
    /**
     * Limit how many ProductOptions to update.
     */
    limit?: number
  }

  /**
   * ProductOption updateManyAndReturn
   */
  export type ProductOptionUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOption
     */
    select?: ProductOptionSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOption
     */
    omit?: ProductOptionOmit<ExtArgs> | null
    /**
     * The data used to update ProductOptions.
     */
    data: XOR<ProductOptionUpdateManyMutationInput, ProductOptionUncheckedUpdateManyInput>
    /**
     * Filter which ProductOptions to update
     */
    where?: ProductOptionWhereInput
    /**
     * Limit how many ProductOptions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductOption upsert
   */
  export type ProductOptionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOption
     */
    select?: ProductOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOption
     */
    omit?: ProductOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductOption to update in case it exists.
     */
    where: ProductOptionWhereUniqueInput
    /**
     * In case the ProductOption found by the `where` argument doesn't exist, create a new ProductOption with this data.
     */
    create: XOR<ProductOptionCreateInput, ProductOptionUncheckedCreateInput>
    /**
     * In case the ProductOption was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductOptionUpdateInput, ProductOptionUncheckedUpdateInput>
  }

  /**
   * ProductOption delete
   */
  export type ProductOptionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOption
     */
    select?: ProductOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOption
     */
    omit?: ProductOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionInclude<ExtArgs> | null
    /**
     * Filter which ProductOption to delete.
     */
    where: ProductOptionWhereUniqueInput
  }

  /**
   * ProductOption deleteMany
   */
  export type ProductOptionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductOptions to delete
     */
    where?: ProductOptionWhereInput
    /**
     * Limit how many ProductOptions to delete.
     */
    limit?: number
  }

  /**
   * ProductOption.EventItemOption
   */
  export type ProductOption$EventItemOptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EventItemOption
     */
    select?: EventItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the EventItemOption
     */
    omit?: EventItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventItemOptionInclude<ExtArgs> | null
    where?: EventItemOptionWhereInput
    orderBy?: EventItemOptionOrderByWithRelationInput | EventItemOptionOrderByWithRelationInput[]
    cursor?: EventItemOptionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: EventItemOptionScalarFieldEnum | EventItemOptionScalarFieldEnum[]
  }

  /**
   * ProductOption.OrderItemOption
   */
  export type ProductOption$OrderItemOptionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItemOption
     */
    select?: OrderItemOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the OrderItemOption
     */
    omit?: OrderItemOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemOptionInclude<ExtArgs> | null
    where?: OrderItemOptionWhereInput
    orderBy?: OrderItemOptionOrderByWithRelationInput | OrderItemOptionOrderByWithRelationInput[]
    cursor?: OrderItemOptionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderItemOptionScalarFieldEnum | OrderItemOptionScalarFieldEnum[]
  }

  /**
   * ProductOption.ProductOptionValue
   */
  export type ProductOption$ProductOptionValueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOptionValue
     */
    select?: ProductOptionValueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOptionValue
     */
    omit?: ProductOptionValueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionValueInclude<ExtArgs> | null
    where?: ProductOptionValueWhereInput
    orderBy?: ProductOptionValueOrderByWithRelationInput | ProductOptionValueOrderByWithRelationInput[]
    cursor?: ProductOptionValueWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductOptionValueScalarFieldEnum | ProductOptionValueScalarFieldEnum[]
  }

  /**
   * ProductOption without action
   */
  export type ProductOptionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOption
     */
    select?: ProductOptionSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOption
     */
    omit?: ProductOptionOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionInclude<ExtArgs> | null
  }


  /**
   * Model ProductOptionValue
   */

  export type AggregateProductOptionValue = {
    _count: ProductOptionValueCountAggregateOutputType | null
    _avg: ProductOptionValueAvgAggregateOutputType | null
    _sum: ProductOptionValueSumAggregateOutputType | null
    _min: ProductOptionValueMinAggregateOutputType | null
    _max: ProductOptionValueMaxAggregateOutputType | null
  }

  export type ProductOptionValueAvgAggregateOutputType = {
    priceAdjustment: number | null
    sortOrder: number | null
  }

  export type ProductOptionValueSumAggregateOutputType = {
    priceAdjustment: number | null
    sortOrder: number | null
  }

  export type ProductOptionValueMinAggregateOutputType = {
    id: string | null
    optionId: string | null
    value: string | null
    label: string | null
    priceAdjustment: number | null
    sortOrder: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductOptionValueMaxAggregateOutputType = {
    id: string | null
    optionId: string | null
    value: string | null
    label: string | null
    priceAdjustment: number | null
    sortOrder: number | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductOptionValueCountAggregateOutputType = {
    id: number
    optionId: number
    value: number
    label: number
    priceAdjustment: number
    sortOrder: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProductOptionValueAvgAggregateInputType = {
    priceAdjustment?: true
    sortOrder?: true
  }

  export type ProductOptionValueSumAggregateInputType = {
    priceAdjustment?: true
    sortOrder?: true
  }

  export type ProductOptionValueMinAggregateInputType = {
    id?: true
    optionId?: true
    value?: true
    label?: true
    priceAdjustment?: true
    sortOrder?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductOptionValueMaxAggregateInputType = {
    id?: true
    optionId?: true
    value?: true
    label?: true
    priceAdjustment?: true
    sortOrder?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductOptionValueCountAggregateInputType = {
    id?: true
    optionId?: true
    value?: true
    label?: true
    priceAdjustment?: true
    sortOrder?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProductOptionValueAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductOptionValue to aggregate.
     */
    where?: ProductOptionValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductOptionValues to fetch.
     */
    orderBy?: ProductOptionValueOrderByWithRelationInput | ProductOptionValueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductOptionValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductOptionValues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductOptionValues.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductOptionValues
    **/
    _count?: true | ProductOptionValueCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductOptionValueAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductOptionValueSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductOptionValueMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductOptionValueMaxAggregateInputType
  }

  export type GetProductOptionValueAggregateType<T extends ProductOptionValueAggregateArgs> = {
        [P in keyof T & keyof AggregateProductOptionValue]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductOptionValue[P]>
      : GetScalarType<T[P], AggregateProductOptionValue[P]>
  }




  export type ProductOptionValueGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductOptionValueWhereInput
    orderBy?: ProductOptionValueOrderByWithAggregationInput | ProductOptionValueOrderByWithAggregationInput[]
    by: ProductOptionValueScalarFieldEnum[] | ProductOptionValueScalarFieldEnum
    having?: ProductOptionValueScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductOptionValueCountAggregateInputType | true
    _avg?: ProductOptionValueAvgAggregateInputType
    _sum?: ProductOptionValueSumAggregateInputType
    _min?: ProductOptionValueMinAggregateInputType
    _max?: ProductOptionValueMaxAggregateInputType
  }

  export type ProductOptionValueGroupByOutputType = {
    id: string
    optionId: string
    value: string
    label: string | null
    priceAdjustment: number | null
    sortOrder: number
    createdAt: Date
    updatedAt: Date
    _count: ProductOptionValueCountAggregateOutputType | null
    _avg: ProductOptionValueAvgAggregateOutputType | null
    _sum: ProductOptionValueSumAggregateOutputType | null
    _min: ProductOptionValueMinAggregateOutputType | null
    _max: ProductOptionValueMaxAggregateOutputType | null
  }

  type GetProductOptionValueGroupByPayload<T extends ProductOptionValueGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductOptionValueGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductOptionValueGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductOptionValueGroupByOutputType[P]>
            : GetScalarType<T[P], ProductOptionValueGroupByOutputType[P]>
        }
      >
    >


  export type ProductOptionValueSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    optionId?: boolean
    value?: boolean
    label?: boolean
    priceAdjustment?: boolean
    sortOrder?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    ProductOption?: boolean | ProductOptionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productOptionValue"]>

  export type ProductOptionValueSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    optionId?: boolean
    value?: boolean
    label?: boolean
    priceAdjustment?: boolean
    sortOrder?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    ProductOption?: boolean | ProductOptionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productOptionValue"]>

  export type ProductOptionValueSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    optionId?: boolean
    value?: boolean
    label?: boolean
    priceAdjustment?: boolean
    sortOrder?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    ProductOption?: boolean | ProductOptionDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productOptionValue"]>

  export type ProductOptionValueSelectScalar = {
    id?: boolean
    optionId?: boolean
    value?: boolean
    label?: boolean
    priceAdjustment?: boolean
    sortOrder?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProductOptionValueOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "optionId" | "value" | "label" | "priceAdjustment" | "sortOrder" | "createdAt" | "updatedAt", ExtArgs["result"]["productOptionValue"]>
  export type ProductOptionValueInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProductOption?: boolean | ProductOptionDefaultArgs<ExtArgs>
  }
  export type ProductOptionValueIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProductOption?: boolean | ProductOptionDefaultArgs<ExtArgs>
  }
  export type ProductOptionValueIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProductOption?: boolean | ProductOptionDefaultArgs<ExtArgs>
  }

  export type $ProductOptionValuePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductOptionValue"
    objects: {
      ProductOption: Prisma.$ProductOptionPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      optionId: string
      value: string
      label: string | null
      priceAdjustment: number | null
      sortOrder: number
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["productOptionValue"]>
    composites: {}
  }

  type ProductOptionValueGetPayload<S extends boolean | null | undefined | ProductOptionValueDefaultArgs> = $Result.GetResult<Prisma.$ProductOptionValuePayload, S>

  type ProductOptionValueCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<ProductOptionValueFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ProductOptionValueCountAggregateInputType | true
    }

  export interface ProductOptionValueDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductOptionValue'], meta: { name: 'ProductOptionValue' } }
    /**
     * Find zero or one ProductOptionValue that matches the filter.
     * @param {ProductOptionValueFindUniqueArgs} args - Arguments to find a ProductOptionValue
     * @example
     * // Get one ProductOptionValue
     * const productOptionValue = await prisma.productOptionValue.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductOptionValueFindUniqueArgs>(args: SelectSubset<T, ProductOptionValueFindUniqueArgs<ExtArgs>>): Prisma__ProductOptionValueClient<$Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one ProductOptionValue that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {ProductOptionValueFindUniqueOrThrowArgs} args - Arguments to find a ProductOptionValue
     * @example
     * // Get one ProductOptionValue
     * const productOptionValue = await prisma.productOptionValue.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductOptionValueFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductOptionValueFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductOptionValueClient<$Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductOptionValue that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductOptionValueFindFirstArgs} args - Arguments to find a ProductOptionValue
     * @example
     * // Get one ProductOptionValue
     * const productOptionValue = await prisma.productOptionValue.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductOptionValueFindFirstArgs>(args?: SelectSubset<T, ProductOptionValueFindFirstArgs<ExtArgs>>): Prisma__ProductOptionValueClient<$Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first ProductOptionValue that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductOptionValueFindFirstOrThrowArgs} args - Arguments to find a ProductOptionValue
     * @example
     * // Get one ProductOptionValue
     * const productOptionValue = await prisma.productOptionValue.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductOptionValueFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductOptionValueFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductOptionValueClient<$Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more ProductOptionValues that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductOptionValueFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductOptionValues
     * const productOptionValues = await prisma.productOptionValue.findMany()
     * 
     * // Get first 10 ProductOptionValues
     * const productOptionValues = await prisma.productOptionValue.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productOptionValueWithIdOnly = await prisma.productOptionValue.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductOptionValueFindManyArgs>(args?: SelectSubset<T, ProductOptionValueFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a ProductOptionValue.
     * @param {ProductOptionValueCreateArgs} args - Arguments to create a ProductOptionValue.
     * @example
     * // Create one ProductOptionValue
     * const ProductOptionValue = await prisma.productOptionValue.create({
     *   data: {
     *     // ... data to create a ProductOptionValue
     *   }
     * })
     * 
     */
    create<T extends ProductOptionValueCreateArgs>(args: SelectSubset<T, ProductOptionValueCreateArgs<ExtArgs>>): Prisma__ProductOptionValueClient<$Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many ProductOptionValues.
     * @param {ProductOptionValueCreateManyArgs} args - Arguments to create many ProductOptionValues.
     * @example
     * // Create many ProductOptionValues
     * const productOptionValue = await prisma.productOptionValue.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductOptionValueCreateManyArgs>(args?: SelectSubset<T, ProductOptionValueCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductOptionValues and returns the data saved in the database.
     * @param {ProductOptionValueCreateManyAndReturnArgs} args - Arguments to create many ProductOptionValues.
     * @example
     * // Create many ProductOptionValues
     * const productOptionValue = await prisma.productOptionValue.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductOptionValues and only return the `id`
     * const productOptionValueWithIdOnly = await prisma.productOptionValue.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends ProductOptionValueCreateManyAndReturnArgs>(args?: SelectSubset<T, ProductOptionValueCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a ProductOptionValue.
     * @param {ProductOptionValueDeleteArgs} args - Arguments to delete one ProductOptionValue.
     * @example
     * // Delete one ProductOptionValue
     * const ProductOptionValue = await prisma.productOptionValue.delete({
     *   where: {
     *     // ... filter to delete one ProductOptionValue
     *   }
     * })
     * 
     */
    delete<T extends ProductOptionValueDeleteArgs>(args: SelectSubset<T, ProductOptionValueDeleteArgs<ExtArgs>>): Prisma__ProductOptionValueClient<$Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one ProductOptionValue.
     * @param {ProductOptionValueUpdateArgs} args - Arguments to update one ProductOptionValue.
     * @example
     * // Update one ProductOptionValue
     * const productOptionValue = await prisma.productOptionValue.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductOptionValueUpdateArgs>(args: SelectSubset<T, ProductOptionValueUpdateArgs<ExtArgs>>): Prisma__ProductOptionValueClient<$Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more ProductOptionValues.
     * @param {ProductOptionValueDeleteManyArgs} args - Arguments to filter ProductOptionValues to delete.
     * @example
     * // Delete a few ProductOptionValues
     * const { count } = await prisma.productOptionValue.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductOptionValueDeleteManyArgs>(args?: SelectSubset<T, ProductOptionValueDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductOptionValues.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductOptionValueUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductOptionValues
     * const productOptionValue = await prisma.productOptionValue.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductOptionValueUpdateManyArgs>(args: SelectSubset<T, ProductOptionValueUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductOptionValues and returns the data updated in the database.
     * @param {ProductOptionValueUpdateManyAndReturnArgs} args - Arguments to update many ProductOptionValues.
     * @example
     * // Update many ProductOptionValues
     * const productOptionValue = await prisma.productOptionValue.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more ProductOptionValues and only return the `id`
     * const productOptionValueWithIdOnly = await prisma.productOptionValue.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends ProductOptionValueUpdateManyAndReturnArgs>(args: SelectSubset<T, ProductOptionValueUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one ProductOptionValue.
     * @param {ProductOptionValueUpsertArgs} args - Arguments to update or create a ProductOptionValue.
     * @example
     * // Update or create a ProductOptionValue
     * const productOptionValue = await prisma.productOptionValue.upsert({
     *   create: {
     *     // ... data to create a ProductOptionValue
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductOptionValue we want to update
     *   }
     * })
     */
    upsert<T extends ProductOptionValueUpsertArgs>(args: SelectSubset<T, ProductOptionValueUpsertArgs<ExtArgs>>): Prisma__ProductOptionValueClient<$Result.GetResult<Prisma.$ProductOptionValuePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of ProductOptionValues.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductOptionValueCountArgs} args - Arguments to filter ProductOptionValues to count.
     * @example
     * // Count the number of ProductOptionValues
     * const count = await prisma.productOptionValue.count({
     *   where: {
     *     // ... the filter for the ProductOptionValues we want to count
     *   }
     * })
    **/
    count<T extends ProductOptionValueCountArgs>(
      args?: Subset<T, ProductOptionValueCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductOptionValueCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductOptionValue.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductOptionValueAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductOptionValueAggregateArgs>(args: Subset<T, ProductOptionValueAggregateArgs>): Prisma.PrismaPromise<GetProductOptionValueAggregateType<T>>

    /**
     * Group by ProductOptionValue.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductOptionValueGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductOptionValueGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductOptionValueGroupByArgs['orderBy'] }
        : { orderBy?: ProductOptionValueGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductOptionValueGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductOptionValueGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductOptionValue model
   */
  readonly fields: ProductOptionValueFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductOptionValue.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductOptionValueClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    ProductOption<T extends ProductOptionDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductOptionDefaultArgs<ExtArgs>>): Prisma__ProductOptionClient<$Result.GetResult<Prisma.$ProductOptionPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductOptionValue model
   */
  interface ProductOptionValueFieldRefs {
    readonly id: FieldRef<"ProductOptionValue", 'String'>
    readonly optionId: FieldRef<"ProductOptionValue", 'String'>
    readonly value: FieldRef<"ProductOptionValue", 'String'>
    readonly label: FieldRef<"ProductOptionValue", 'String'>
    readonly priceAdjustment: FieldRef<"ProductOptionValue", 'Float'>
    readonly sortOrder: FieldRef<"ProductOptionValue", 'Int'>
    readonly createdAt: FieldRef<"ProductOptionValue", 'DateTime'>
    readonly updatedAt: FieldRef<"ProductOptionValue", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductOptionValue findUnique
   */
  export type ProductOptionValueFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOptionValue
     */
    select?: ProductOptionValueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOptionValue
     */
    omit?: ProductOptionValueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionValueInclude<ExtArgs> | null
    /**
     * Filter, which ProductOptionValue to fetch.
     */
    where: ProductOptionValueWhereUniqueInput
  }

  /**
   * ProductOptionValue findUniqueOrThrow
   */
  export type ProductOptionValueFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOptionValue
     */
    select?: ProductOptionValueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOptionValue
     */
    omit?: ProductOptionValueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionValueInclude<ExtArgs> | null
    /**
     * Filter, which ProductOptionValue to fetch.
     */
    where: ProductOptionValueWhereUniqueInput
  }

  /**
   * ProductOptionValue findFirst
   */
  export type ProductOptionValueFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOptionValue
     */
    select?: ProductOptionValueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOptionValue
     */
    omit?: ProductOptionValueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionValueInclude<ExtArgs> | null
    /**
     * Filter, which ProductOptionValue to fetch.
     */
    where?: ProductOptionValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductOptionValues to fetch.
     */
    orderBy?: ProductOptionValueOrderByWithRelationInput | ProductOptionValueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductOptionValues.
     */
    cursor?: ProductOptionValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductOptionValues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductOptionValues.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductOptionValues.
     */
    distinct?: ProductOptionValueScalarFieldEnum | ProductOptionValueScalarFieldEnum[]
  }

  /**
   * ProductOptionValue findFirstOrThrow
   */
  export type ProductOptionValueFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOptionValue
     */
    select?: ProductOptionValueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOptionValue
     */
    omit?: ProductOptionValueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionValueInclude<ExtArgs> | null
    /**
     * Filter, which ProductOptionValue to fetch.
     */
    where?: ProductOptionValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductOptionValues to fetch.
     */
    orderBy?: ProductOptionValueOrderByWithRelationInput | ProductOptionValueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductOptionValues.
     */
    cursor?: ProductOptionValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductOptionValues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductOptionValues.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductOptionValues.
     */
    distinct?: ProductOptionValueScalarFieldEnum | ProductOptionValueScalarFieldEnum[]
  }

  /**
   * ProductOptionValue findMany
   */
  export type ProductOptionValueFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOptionValue
     */
    select?: ProductOptionValueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOptionValue
     */
    omit?: ProductOptionValueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionValueInclude<ExtArgs> | null
    /**
     * Filter, which ProductOptionValues to fetch.
     */
    where?: ProductOptionValueWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductOptionValues to fetch.
     */
    orderBy?: ProductOptionValueOrderByWithRelationInput | ProductOptionValueOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductOptionValues.
     */
    cursor?: ProductOptionValueWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductOptionValues from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductOptionValues.
     */
    skip?: number
    distinct?: ProductOptionValueScalarFieldEnum | ProductOptionValueScalarFieldEnum[]
  }

  /**
   * ProductOptionValue create
   */
  export type ProductOptionValueCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOptionValue
     */
    select?: ProductOptionValueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOptionValue
     */
    omit?: ProductOptionValueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionValueInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductOptionValue.
     */
    data: XOR<ProductOptionValueCreateInput, ProductOptionValueUncheckedCreateInput>
  }

  /**
   * ProductOptionValue createMany
   */
  export type ProductOptionValueCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductOptionValues.
     */
    data: ProductOptionValueCreateManyInput | ProductOptionValueCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductOptionValue createManyAndReturn
   */
  export type ProductOptionValueCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOptionValue
     */
    select?: ProductOptionValueSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOptionValue
     */
    omit?: ProductOptionValueOmit<ExtArgs> | null
    /**
     * The data used to create many ProductOptionValues.
     */
    data: ProductOptionValueCreateManyInput | ProductOptionValueCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionValueIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductOptionValue update
   */
  export type ProductOptionValueUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOptionValue
     */
    select?: ProductOptionValueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOptionValue
     */
    omit?: ProductOptionValueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionValueInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductOptionValue.
     */
    data: XOR<ProductOptionValueUpdateInput, ProductOptionValueUncheckedUpdateInput>
    /**
     * Choose, which ProductOptionValue to update.
     */
    where: ProductOptionValueWhereUniqueInput
  }

  /**
   * ProductOptionValue updateMany
   */
  export type ProductOptionValueUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductOptionValues.
     */
    data: XOR<ProductOptionValueUpdateManyMutationInput, ProductOptionValueUncheckedUpdateManyInput>
    /**
     * Filter which ProductOptionValues to update
     */
    where?: ProductOptionValueWhereInput
    /**
     * Limit how many ProductOptionValues to update.
     */
    limit?: number
  }

  /**
   * ProductOptionValue updateManyAndReturn
   */
  export type ProductOptionValueUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOptionValue
     */
    select?: ProductOptionValueSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOptionValue
     */
    omit?: ProductOptionValueOmit<ExtArgs> | null
    /**
     * The data used to update ProductOptionValues.
     */
    data: XOR<ProductOptionValueUpdateManyMutationInput, ProductOptionValueUncheckedUpdateManyInput>
    /**
     * Filter which ProductOptionValues to update
     */
    where?: ProductOptionValueWhereInput
    /**
     * Limit how many ProductOptionValues to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionValueIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * ProductOptionValue upsert
   */
  export type ProductOptionValueUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOptionValue
     */
    select?: ProductOptionValueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOptionValue
     */
    omit?: ProductOptionValueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionValueInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductOptionValue to update in case it exists.
     */
    where: ProductOptionValueWhereUniqueInput
    /**
     * In case the ProductOptionValue found by the `where` argument doesn't exist, create a new ProductOptionValue with this data.
     */
    create: XOR<ProductOptionValueCreateInput, ProductOptionValueUncheckedCreateInput>
    /**
     * In case the ProductOptionValue was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductOptionValueUpdateInput, ProductOptionValueUncheckedUpdateInput>
  }

  /**
   * ProductOptionValue delete
   */
  export type ProductOptionValueDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOptionValue
     */
    select?: ProductOptionValueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOptionValue
     */
    omit?: ProductOptionValueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionValueInclude<ExtArgs> | null
    /**
     * Filter which ProductOptionValue to delete.
     */
    where: ProductOptionValueWhereUniqueInput
  }

  /**
   * ProductOptionValue deleteMany
   */
  export type ProductOptionValueDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductOptionValues to delete
     */
    where?: ProductOptionValueWhereInput
    /**
     * Limit how many ProductOptionValues to delete.
     */
    limit?: number
  }

  /**
   * ProductOptionValue without action
   */
  export type ProductOptionValueDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductOptionValue
     */
    select?: ProductOptionValueSelect<ExtArgs> | null
    /**
     * Omit specific fields from the ProductOptionValue
     */
    omit?: ProductOptionValueOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductOptionValueInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    email: string | null
    firstName: string | null
    lastName: string | null
    password: string | null
    role: string | null
    department: string | null
    active: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    email: string | null
    firstName: string | null
    lastName: string | null
    password: string | null
    role: string | null
    department: string | null
    active: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    email: number
    firstName: number
    lastName: number
    password: number
    role: number
    department: number
    active: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    email?: true
    firstName?: true
    lastName?: true
    password?: true
    role?: true
    department?: true
    active?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    email?: true
    firstName?: true
    lastName?: true
    password?: true
    role?: true
    department?: true
    active?: true
    createdAt?: true
    updatedAt?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    email?: true
    firstName?: true
    lastName?: true
    password?: true
    role?: true
    department?: true
    active?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    email: string
    firstName: string
    lastName: string
    password: string
    role: string
    department: string | null
    active: boolean
    createdAt: Date
    updatedAt: Date
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    password?: boolean
    role?: boolean
    department?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    tasks?: boolean | User$tasksArgs<ExtArgs>
    user_roles?: boolean | User$user_rolesArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>

  export type UserSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    password?: boolean
    role?: boolean
    department?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    password?: boolean
    role?: boolean
    department?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["user"]>

  export type UserSelectScalar = {
    id?: boolean
    email?: boolean
    firstName?: boolean
    lastName?: boolean
    password?: boolean
    role?: boolean
    department?: boolean
    active?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type UserOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "email" | "firstName" | "lastName" | "password" | "role" | "department" | "active" | "createdAt" | "updatedAt", ExtArgs["result"]["user"]>
  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tasks?: boolean | User$tasksArgs<ExtArgs>
    user_roles?: boolean | User$user_rolesArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type UserIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type UserIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      tasks: Prisma.$tasksPayload<ExtArgs>[]
      user_roles: Prisma.$user_rolesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      email: string
      firstName: string
      lastName: string
      password: string
      role: string
      department: string | null
      active: boolean
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {UserCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `id`
     * const userWithIdOnly = await prisma.user.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends UserCreateManyAndReturnArgs>(args?: SelectSubset<T, UserCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {UserUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `id`
     * const userWithIdOnly = await prisma.user.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends UserUpdateManyAndReturnArgs>(args: SelectSubset<T, UserUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tasks<T extends User$tasksArgs<ExtArgs> = {}>(args?: Subset<T, User$tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    user_roles<T extends User$user_rolesArgs<ExtArgs> = {}>(args?: Subset<T, User$user_rolesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly firstName: FieldRef<"User", 'String'>
    readonly lastName: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly role: FieldRef<"User", 'String'>
    readonly department: FieldRef<"User", 'String'>
    readonly active: FieldRef<"User", 'Boolean'>
    readonly createdAt: FieldRef<"User", 'DateTime'>
    readonly updatedAt: FieldRef<"User", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User createManyAndReturn
   */
  export type UserCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User updateManyAndReturn
   */
  export type UserUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to update.
     */
    limit?: number
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
    /**
     * Limit how many Users to delete.
     */
    limit?: number
  }

  /**
   * User.tasks
   */
  export type User$tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    where?: tasksWhereInput
    orderBy?: tasksOrderByWithRelationInput | tasksOrderByWithRelationInput[]
    cursor?: tasksWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TasksScalarFieldEnum | TasksScalarFieldEnum[]
  }

  /**
   * User.user_roles
   */
  export type User$user_rolesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
    where?: user_rolesWhereInput
    orderBy?: user_rolesOrderByWithRelationInput | user_rolesOrderByWithRelationInput[]
    cursor?: user_rolesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: User_rolesScalarFieldEnum | User_rolesScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model task_dependencies
   */

  export type AggregateTask_dependencies = {
    _count: Task_dependenciesCountAggregateOutputType | null
    _min: Task_dependenciesMinAggregateOutputType | null
    _max: Task_dependenciesMaxAggregateOutputType | null
  }

  export type Task_dependenciesMinAggregateOutputType = {
    id: string | null
    taskId: string | null
    dependsOnTaskId: string | null
    createdAt: Date | null
  }

  export type Task_dependenciesMaxAggregateOutputType = {
    id: string | null
    taskId: string | null
    dependsOnTaskId: string | null
    createdAt: Date | null
  }

  export type Task_dependenciesCountAggregateOutputType = {
    id: number
    taskId: number
    dependsOnTaskId: number
    createdAt: number
    _all: number
  }


  export type Task_dependenciesMinAggregateInputType = {
    id?: true
    taskId?: true
    dependsOnTaskId?: true
    createdAt?: true
  }

  export type Task_dependenciesMaxAggregateInputType = {
    id?: true
    taskId?: true
    dependsOnTaskId?: true
    createdAt?: true
  }

  export type Task_dependenciesCountAggregateInputType = {
    id?: true
    taskId?: true
    dependsOnTaskId?: true
    createdAt?: true
    _all?: true
  }

  export type Task_dependenciesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which task_dependencies to aggregate.
     */
    where?: task_dependenciesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of task_dependencies to fetch.
     */
    orderBy?: task_dependenciesOrderByWithRelationInput | task_dependenciesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: task_dependenciesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` task_dependencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` task_dependencies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned task_dependencies
    **/
    _count?: true | Task_dependenciesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Task_dependenciesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Task_dependenciesMaxAggregateInputType
  }

  export type GetTask_dependenciesAggregateType<T extends Task_dependenciesAggregateArgs> = {
        [P in keyof T & keyof AggregateTask_dependencies]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTask_dependencies[P]>
      : GetScalarType<T[P], AggregateTask_dependencies[P]>
  }




  export type task_dependenciesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: task_dependenciesWhereInput
    orderBy?: task_dependenciesOrderByWithAggregationInput | task_dependenciesOrderByWithAggregationInput[]
    by: Task_dependenciesScalarFieldEnum[] | Task_dependenciesScalarFieldEnum
    having?: task_dependenciesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Task_dependenciesCountAggregateInputType | true
    _min?: Task_dependenciesMinAggregateInputType
    _max?: Task_dependenciesMaxAggregateInputType
  }

  export type Task_dependenciesGroupByOutputType = {
    id: string
    taskId: string
    dependsOnTaskId: string
    createdAt: Date
    _count: Task_dependenciesCountAggregateOutputType | null
    _min: Task_dependenciesMinAggregateOutputType | null
    _max: Task_dependenciesMaxAggregateOutputType | null
  }

  type GetTask_dependenciesGroupByPayload<T extends task_dependenciesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Task_dependenciesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Task_dependenciesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Task_dependenciesGroupByOutputType[P]>
            : GetScalarType<T[P], Task_dependenciesGroupByOutputType[P]>
        }
      >
    >


  export type task_dependenciesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    taskId?: boolean
    dependsOnTaskId?: boolean
    createdAt?: boolean
    tasks_task_dependencies_dependsOnTaskIdTotasks?: boolean | tasksDefaultArgs<ExtArgs>
    tasks_task_dependencies_taskIdTotasks?: boolean | tasksDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["task_dependencies"]>

  export type task_dependenciesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    taskId?: boolean
    dependsOnTaskId?: boolean
    createdAt?: boolean
    tasks_task_dependencies_dependsOnTaskIdTotasks?: boolean | tasksDefaultArgs<ExtArgs>
    tasks_task_dependencies_taskIdTotasks?: boolean | tasksDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["task_dependencies"]>

  export type task_dependenciesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    taskId?: boolean
    dependsOnTaskId?: boolean
    createdAt?: boolean
    tasks_task_dependencies_dependsOnTaskIdTotasks?: boolean | tasksDefaultArgs<ExtArgs>
    tasks_task_dependencies_taskIdTotasks?: boolean | tasksDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["task_dependencies"]>

  export type task_dependenciesSelectScalar = {
    id?: boolean
    taskId?: boolean
    dependsOnTaskId?: boolean
    createdAt?: boolean
  }

  export type task_dependenciesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "taskId" | "dependsOnTaskId" | "createdAt", ExtArgs["result"]["task_dependencies"]>
  export type task_dependenciesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tasks_task_dependencies_dependsOnTaskIdTotasks?: boolean | tasksDefaultArgs<ExtArgs>
    tasks_task_dependencies_taskIdTotasks?: boolean | tasksDefaultArgs<ExtArgs>
  }
  export type task_dependenciesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tasks_task_dependencies_dependsOnTaskIdTotasks?: boolean | tasksDefaultArgs<ExtArgs>
    tasks_task_dependencies_taskIdTotasks?: boolean | tasksDefaultArgs<ExtArgs>
  }
  export type task_dependenciesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    tasks_task_dependencies_dependsOnTaskIdTotasks?: boolean | tasksDefaultArgs<ExtArgs>
    tasks_task_dependencies_taskIdTotasks?: boolean | tasksDefaultArgs<ExtArgs>
  }

  export type $task_dependenciesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "task_dependencies"
    objects: {
      tasks_task_dependencies_dependsOnTaskIdTotasks: Prisma.$tasksPayload<ExtArgs>
      tasks_task_dependencies_taskIdTotasks: Prisma.$tasksPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      taskId: string
      dependsOnTaskId: string
      createdAt: Date
    }, ExtArgs["result"]["task_dependencies"]>
    composites: {}
  }

  type task_dependenciesGetPayload<S extends boolean | null | undefined | task_dependenciesDefaultArgs> = $Result.GetResult<Prisma.$task_dependenciesPayload, S>

  type task_dependenciesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<task_dependenciesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Task_dependenciesCountAggregateInputType | true
    }

  export interface task_dependenciesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['task_dependencies'], meta: { name: 'task_dependencies' } }
    /**
     * Find zero or one Task_dependencies that matches the filter.
     * @param {task_dependenciesFindUniqueArgs} args - Arguments to find a Task_dependencies
     * @example
     * // Get one Task_dependencies
     * const task_dependencies = await prisma.task_dependencies.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends task_dependenciesFindUniqueArgs>(args: SelectSubset<T, task_dependenciesFindUniqueArgs<ExtArgs>>): Prisma__task_dependenciesClient<$Result.GetResult<Prisma.$task_dependenciesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Task_dependencies that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {task_dependenciesFindUniqueOrThrowArgs} args - Arguments to find a Task_dependencies
     * @example
     * // Get one Task_dependencies
     * const task_dependencies = await prisma.task_dependencies.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends task_dependenciesFindUniqueOrThrowArgs>(args: SelectSubset<T, task_dependenciesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__task_dependenciesClient<$Result.GetResult<Prisma.$task_dependenciesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Task_dependencies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {task_dependenciesFindFirstArgs} args - Arguments to find a Task_dependencies
     * @example
     * // Get one Task_dependencies
     * const task_dependencies = await prisma.task_dependencies.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends task_dependenciesFindFirstArgs>(args?: SelectSubset<T, task_dependenciesFindFirstArgs<ExtArgs>>): Prisma__task_dependenciesClient<$Result.GetResult<Prisma.$task_dependenciesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Task_dependencies that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {task_dependenciesFindFirstOrThrowArgs} args - Arguments to find a Task_dependencies
     * @example
     * // Get one Task_dependencies
     * const task_dependencies = await prisma.task_dependencies.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends task_dependenciesFindFirstOrThrowArgs>(args?: SelectSubset<T, task_dependenciesFindFirstOrThrowArgs<ExtArgs>>): Prisma__task_dependenciesClient<$Result.GetResult<Prisma.$task_dependenciesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Task_dependencies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {task_dependenciesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Task_dependencies
     * const task_dependencies = await prisma.task_dependencies.findMany()
     * 
     * // Get first 10 Task_dependencies
     * const task_dependencies = await prisma.task_dependencies.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const task_dependenciesWithIdOnly = await prisma.task_dependencies.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends task_dependenciesFindManyArgs>(args?: SelectSubset<T, task_dependenciesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$task_dependenciesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Task_dependencies.
     * @param {task_dependenciesCreateArgs} args - Arguments to create a Task_dependencies.
     * @example
     * // Create one Task_dependencies
     * const Task_dependencies = await prisma.task_dependencies.create({
     *   data: {
     *     // ... data to create a Task_dependencies
     *   }
     * })
     * 
     */
    create<T extends task_dependenciesCreateArgs>(args: SelectSubset<T, task_dependenciesCreateArgs<ExtArgs>>): Prisma__task_dependenciesClient<$Result.GetResult<Prisma.$task_dependenciesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Task_dependencies.
     * @param {task_dependenciesCreateManyArgs} args - Arguments to create many Task_dependencies.
     * @example
     * // Create many Task_dependencies
     * const task_dependencies = await prisma.task_dependencies.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends task_dependenciesCreateManyArgs>(args?: SelectSubset<T, task_dependenciesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Task_dependencies and returns the data saved in the database.
     * @param {task_dependenciesCreateManyAndReturnArgs} args - Arguments to create many Task_dependencies.
     * @example
     * // Create many Task_dependencies
     * const task_dependencies = await prisma.task_dependencies.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Task_dependencies and only return the `id`
     * const task_dependenciesWithIdOnly = await prisma.task_dependencies.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends task_dependenciesCreateManyAndReturnArgs>(args?: SelectSubset<T, task_dependenciesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$task_dependenciesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Task_dependencies.
     * @param {task_dependenciesDeleteArgs} args - Arguments to delete one Task_dependencies.
     * @example
     * // Delete one Task_dependencies
     * const Task_dependencies = await prisma.task_dependencies.delete({
     *   where: {
     *     // ... filter to delete one Task_dependencies
     *   }
     * })
     * 
     */
    delete<T extends task_dependenciesDeleteArgs>(args: SelectSubset<T, task_dependenciesDeleteArgs<ExtArgs>>): Prisma__task_dependenciesClient<$Result.GetResult<Prisma.$task_dependenciesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Task_dependencies.
     * @param {task_dependenciesUpdateArgs} args - Arguments to update one Task_dependencies.
     * @example
     * // Update one Task_dependencies
     * const task_dependencies = await prisma.task_dependencies.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends task_dependenciesUpdateArgs>(args: SelectSubset<T, task_dependenciesUpdateArgs<ExtArgs>>): Prisma__task_dependenciesClient<$Result.GetResult<Prisma.$task_dependenciesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Task_dependencies.
     * @param {task_dependenciesDeleteManyArgs} args - Arguments to filter Task_dependencies to delete.
     * @example
     * // Delete a few Task_dependencies
     * const { count } = await prisma.task_dependencies.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends task_dependenciesDeleteManyArgs>(args?: SelectSubset<T, task_dependenciesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Task_dependencies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {task_dependenciesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Task_dependencies
     * const task_dependencies = await prisma.task_dependencies.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends task_dependenciesUpdateManyArgs>(args: SelectSubset<T, task_dependenciesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Task_dependencies and returns the data updated in the database.
     * @param {task_dependenciesUpdateManyAndReturnArgs} args - Arguments to update many Task_dependencies.
     * @example
     * // Update many Task_dependencies
     * const task_dependencies = await prisma.task_dependencies.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Task_dependencies and only return the `id`
     * const task_dependenciesWithIdOnly = await prisma.task_dependencies.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends task_dependenciesUpdateManyAndReturnArgs>(args: SelectSubset<T, task_dependenciesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$task_dependenciesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Task_dependencies.
     * @param {task_dependenciesUpsertArgs} args - Arguments to update or create a Task_dependencies.
     * @example
     * // Update or create a Task_dependencies
     * const task_dependencies = await prisma.task_dependencies.upsert({
     *   create: {
     *     // ... data to create a Task_dependencies
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Task_dependencies we want to update
     *   }
     * })
     */
    upsert<T extends task_dependenciesUpsertArgs>(args: SelectSubset<T, task_dependenciesUpsertArgs<ExtArgs>>): Prisma__task_dependenciesClient<$Result.GetResult<Prisma.$task_dependenciesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Task_dependencies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {task_dependenciesCountArgs} args - Arguments to filter Task_dependencies to count.
     * @example
     * // Count the number of Task_dependencies
     * const count = await prisma.task_dependencies.count({
     *   where: {
     *     // ... the filter for the Task_dependencies we want to count
     *   }
     * })
    **/
    count<T extends task_dependenciesCountArgs>(
      args?: Subset<T, task_dependenciesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Task_dependenciesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Task_dependencies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Task_dependenciesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Task_dependenciesAggregateArgs>(args: Subset<T, Task_dependenciesAggregateArgs>): Prisma.PrismaPromise<GetTask_dependenciesAggregateType<T>>

    /**
     * Group by Task_dependencies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {task_dependenciesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends task_dependenciesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: task_dependenciesGroupByArgs['orderBy'] }
        : { orderBy?: task_dependenciesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, task_dependenciesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTask_dependenciesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the task_dependencies model
   */
  readonly fields: task_dependenciesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for task_dependencies.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__task_dependenciesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    tasks_task_dependencies_dependsOnTaskIdTotasks<T extends tasksDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tasksDefaultArgs<ExtArgs>>): Prisma__tasksClient<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    tasks_task_dependencies_taskIdTotasks<T extends tasksDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tasksDefaultArgs<ExtArgs>>): Prisma__tasksClient<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the task_dependencies model
   */
  interface task_dependenciesFieldRefs {
    readonly id: FieldRef<"task_dependencies", 'String'>
    readonly taskId: FieldRef<"task_dependencies", 'String'>
    readonly dependsOnTaskId: FieldRef<"task_dependencies", 'String'>
    readonly createdAt: FieldRef<"task_dependencies", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * task_dependencies findUnique
   */
  export type task_dependenciesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_dependencies
     */
    select?: task_dependenciesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_dependencies
     */
    omit?: task_dependenciesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_dependenciesInclude<ExtArgs> | null
    /**
     * Filter, which task_dependencies to fetch.
     */
    where: task_dependenciesWhereUniqueInput
  }

  /**
   * task_dependencies findUniqueOrThrow
   */
  export type task_dependenciesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_dependencies
     */
    select?: task_dependenciesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_dependencies
     */
    omit?: task_dependenciesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_dependenciesInclude<ExtArgs> | null
    /**
     * Filter, which task_dependencies to fetch.
     */
    where: task_dependenciesWhereUniqueInput
  }

  /**
   * task_dependencies findFirst
   */
  export type task_dependenciesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_dependencies
     */
    select?: task_dependenciesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_dependencies
     */
    omit?: task_dependenciesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_dependenciesInclude<ExtArgs> | null
    /**
     * Filter, which task_dependencies to fetch.
     */
    where?: task_dependenciesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of task_dependencies to fetch.
     */
    orderBy?: task_dependenciesOrderByWithRelationInput | task_dependenciesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for task_dependencies.
     */
    cursor?: task_dependenciesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` task_dependencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` task_dependencies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of task_dependencies.
     */
    distinct?: Task_dependenciesScalarFieldEnum | Task_dependenciesScalarFieldEnum[]
  }

  /**
   * task_dependencies findFirstOrThrow
   */
  export type task_dependenciesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_dependencies
     */
    select?: task_dependenciesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_dependencies
     */
    omit?: task_dependenciesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_dependenciesInclude<ExtArgs> | null
    /**
     * Filter, which task_dependencies to fetch.
     */
    where?: task_dependenciesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of task_dependencies to fetch.
     */
    orderBy?: task_dependenciesOrderByWithRelationInput | task_dependenciesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for task_dependencies.
     */
    cursor?: task_dependenciesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` task_dependencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` task_dependencies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of task_dependencies.
     */
    distinct?: Task_dependenciesScalarFieldEnum | Task_dependenciesScalarFieldEnum[]
  }

  /**
   * task_dependencies findMany
   */
  export type task_dependenciesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_dependencies
     */
    select?: task_dependenciesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_dependencies
     */
    omit?: task_dependenciesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_dependenciesInclude<ExtArgs> | null
    /**
     * Filter, which task_dependencies to fetch.
     */
    where?: task_dependenciesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of task_dependencies to fetch.
     */
    orderBy?: task_dependenciesOrderByWithRelationInput | task_dependenciesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing task_dependencies.
     */
    cursor?: task_dependenciesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` task_dependencies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` task_dependencies.
     */
    skip?: number
    distinct?: Task_dependenciesScalarFieldEnum | Task_dependenciesScalarFieldEnum[]
  }

  /**
   * task_dependencies create
   */
  export type task_dependenciesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_dependencies
     */
    select?: task_dependenciesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_dependencies
     */
    omit?: task_dependenciesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_dependenciesInclude<ExtArgs> | null
    /**
     * The data needed to create a task_dependencies.
     */
    data: XOR<task_dependenciesCreateInput, task_dependenciesUncheckedCreateInput>
  }

  /**
   * task_dependencies createMany
   */
  export type task_dependenciesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many task_dependencies.
     */
    data: task_dependenciesCreateManyInput | task_dependenciesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * task_dependencies createManyAndReturn
   */
  export type task_dependenciesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_dependencies
     */
    select?: task_dependenciesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the task_dependencies
     */
    omit?: task_dependenciesOmit<ExtArgs> | null
    /**
     * The data used to create many task_dependencies.
     */
    data: task_dependenciesCreateManyInput | task_dependenciesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_dependenciesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * task_dependencies update
   */
  export type task_dependenciesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_dependencies
     */
    select?: task_dependenciesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_dependencies
     */
    omit?: task_dependenciesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_dependenciesInclude<ExtArgs> | null
    /**
     * The data needed to update a task_dependencies.
     */
    data: XOR<task_dependenciesUpdateInput, task_dependenciesUncheckedUpdateInput>
    /**
     * Choose, which task_dependencies to update.
     */
    where: task_dependenciesWhereUniqueInput
  }

  /**
   * task_dependencies updateMany
   */
  export type task_dependenciesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update task_dependencies.
     */
    data: XOR<task_dependenciesUpdateManyMutationInput, task_dependenciesUncheckedUpdateManyInput>
    /**
     * Filter which task_dependencies to update
     */
    where?: task_dependenciesWhereInput
    /**
     * Limit how many task_dependencies to update.
     */
    limit?: number
  }

  /**
   * task_dependencies updateManyAndReturn
   */
  export type task_dependenciesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_dependencies
     */
    select?: task_dependenciesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the task_dependencies
     */
    omit?: task_dependenciesOmit<ExtArgs> | null
    /**
     * The data used to update task_dependencies.
     */
    data: XOR<task_dependenciesUpdateManyMutationInput, task_dependenciesUncheckedUpdateManyInput>
    /**
     * Filter which task_dependencies to update
     */
    where?: task_dependenciesWhereInput
    /**
     * Limit how many task_dependencies to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_dependenciesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * task_dependencies upsert
   */
  export type task_dependenciesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_dependencies
     */
    select?: task_dependenciesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_dependencies
     */
    omit?: task_dependenciesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_dependenciesInclude<ExtArgs> | null
    /**
     * The filter to search for the task_dependencies to update in case it exists.
     */
    where: task_dependenciesWhereUniqueInput
    /**
     * In case the task_dependencies found by the `where` argument doesn't exist, create a new task_dependencies with this data.
     */
    create: XOR<task_dependenciesCreateInput, task_dependenciesUncheckedCreateInput>
    /**
     * In case the task_dependencies was found with the provided `where` argument, update it with this data.
     */
    update: XOR<task_dependenciesUpdateInput, task_dependenciesUncheckedUpdateInput>
  }

  /**
   * task_dependencies delete
   */
  export type task_dependenciesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_dependencies
     */
    select?: task_dependenciesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_dependencies
     */
    omit?: task_dependenciesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_dependenciesInclude<ExtArgs> | null
    /**
     * Filter which task_dependencies to delete.
     */
    where: task_dependenciesWhereUniqueInput
  }

  /**
   * task_dependencies deleteMany
   */
  export type task_dependenciesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which task_dependencies to delete
     */
    where?: task_dependenciesWhereInput
    /**
     * Limit how many task_dependencies to delete.
     */
    limit?: number
  }

  /**
   * task_dependencies without action
   */
  export type task_dependenciesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_dependencies
     */
    select?: task_dependenciesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_dependencies
     */
    omit?: task_dependenciesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_dependenciesInclude<ExtArgs> | null
  }


  /**
   * Model task_templates
   */

  export type AggregateTask_templates = {
    _count: Task_templatesCountAggregateOutputType | null
    _avg: Task_templatesAvgAggregateOutputType | null
    _sum: Task_templatesSumAggregateOutputType | null
    _min: Task_templatesMinAggregateOutputType | null
    _max: Task_templatesMaxAggregateOutputType | null
  }

  export type Task_templatesAvgAggregateOutputType = {
    estimatedDuration: number | null
    leadTimeHours: number | null
    sequenceOrder: number | null
  }

  export type Task_templatesSumAggregateOutputType = {
    estimatedDuration: number | null
    leadTimeHours: number | null
    sequenceOrder: number | null
  }

  export type Task_templatesMinAggregateOutputType = {
    id: string | null
    productId: string | null
    name: string | null
    description: string | null
    estimatedDuration: number | null
    leadTimeHours: number | null
    sequenceOrder: number | null
    requiredRole: string | null
    triggerCondition: $Enums.TaskTriggerCondition | null
    isMandatory: boolean | null
    requiresCompletionBeforeNext: boolean | null
    autoAssignToRole: string | null
    notes: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    category: string | null
  }

  export type Task_templatesMaxAggregateOutputType = {
    id: string | null
    productId: string | null
    name: string | null
    description: string | null
    estimatedDuration: number | null
    leadTimeHours: number | null
    sequenceOrder: number | null
    requiredRole: string | null
    triggerCondition: $Enums.TaskTriggerCondition | null
    isMandatory: boolean | null
    requiresCompletionBeforeNext: boolean | null
    autoAssignToRole: string | null
    notes: string | null
    isActive: boolean | null
    createdAt: Date | null
    updatedAt: Date | null
    category: string | null
  }

  export type Task_templatesCountAggregateOutputType = {
    id: number
    productId: number
    name: number
    description: number
    estimatedDuration: number
    leadTimeHours: number
    sequenceOrder: number
    requiredRole: number
    triggerCondition: number
    isMandatory: number
    requiresCompletionBeforeNext: number
    autoAssignToRole: number
    notes: number
    isActive: number
    createdAt: number
    updatedAt: number
    category: number
    _all: number
  }


  export type Task_templatesAvgAggregateInputType = {
    estimatedDuration?: true
    leadTimeHours?: true
    sequenceOrder?: true
  }

  export type Task_templatesSumAggregateInputType = {
    estimatedDuration?: true
    leadTimeHours?: true
    sequenceOrder?: true
  }

  export type Task_templatesMinAggregateInputType = {
    id?: true
    productId?: true
    name?: true
    description?: true
    estimatedDuration?: true
    leadTimeHours?: true
    sequenceOrder?: true
    requiredRole?: true
    triggerCondition?: true
    isMandatory?: true
    requiresCompletionBeforeNext?: true
    autoAssignToRole?: true
    notes?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    category?: true
  }

  export type Task_templatesMaxAggregateInputType = {
    id?: true
    productId?: true
    name?: true
    description?: true
    estimatedDuration?: true
    leadTimeHours?: true
    sequenceOrder?: true
    requiredRole?: true
    triggerCondition?: true
    isMandatory?: true
    requiresCompletionBeforeNext?: true
    autoAssignToRole?: true
    notes?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    category?: true
  }

  export type Task_templatesCountAggregateInputType = {
    id?: true
    productId?: true
    name?: true
    description?: true
    estimatedDuration?: true
    leadTimeHours?: true
    sequenceOrder?: true
    requiredRole?: true
    triggerCondition?: true
    isMandatory?: true
    requiresCompletionBeforeNext?: true
    autoAssignToRole?: true
    notes?: true
    isActive?: true
    createdAt?: true
    updatedAt?: true
    category?: true
    _all?: true
  }

  export type Task_templatesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which task_templates to aggregate.
     */
    where?: task_templatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of task_templates to fetch.
     */
    orderBy?: task_templatesOrderByWithRelationInput | task_templatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: task_templatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` task_templates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` task_templates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned task_templates
    **/
    _count?: true | Task_templatesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Task_templatesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Task_templatesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Task_templatesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Task_templatesMaxAggregateInputType
  }

  export type GetTask_templatesAggregateType<T extends Task_templatesAggregateArgs> = {
        [P in keyof T & keyof AggregateTask_templates]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTask_templates[P]>
      : GetScalarType<T[P], AggregateTask_templates[P]>
  }




  export type task_templatesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: task_templatesWhereInput
    orderBy?: task_templatesOrderByWithAggregationInput | task_templatesOrderByWithAggregationInput[]
    by: Task_templatesScalarFieldEnum[] | Task_templatesScalarFieldEnum
    having?: task_templatesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Task_templatesCountAggregateInputType | true
    _avg?: Task_templatesAvgAggregateInputType
    _sum?: Task_templatesSumAggregateInputType
    _min?: Task_templatesMinAggregateInputType
    _max?: Task_templatesMaxAggregateInputType
  }

  export type Task_templatesGroupByOutputType = {
    id: string
    productId: string
    name: string
    description: string | null
    estimatedDuration: number
    leadTimeHours: number
    sequenceOrder: number
    requiredRole: string | null
    triggerCondition: $Enums.TaskTriggerCondition
    isMandatory: boolean
    requiresCompletionBeforeNext: boolean
    autoAssignToRole: string | null
    notes: string | null
    isActive: boolean
    createdAt: Date
    updatedAt: Date
    category: string | null
    _count: Task_templatesCountAggregateOutputType | null
    _avg: Task_templatesAvgAggregateOutputType | null
    _sum: Task_templatesSumAggregateOutputType | null
    _min: Task_templatesMinAggregateOutputType | null
    _max: Task_templatesMaxAggregateOutputType | null
  }

  type GetTask_templatesGroupByPayload<T extends task_templatesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Task_templatesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Task_templatesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Task_templatesGroupByOutputType[P]>
            : GetScalarType<T[P], Task_templatesGroupByOutputType[P]>
        }
      >
    >


  export type task_templatesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    name?: boolean
    description?: boolean
    estimatedDuration?: boolean
    leadTimeHours?: boolean
    sequenceOrder?: boolean
    requiredRole?: boolean
    triggerCondition?: boolean
    isMandatory?: boolean
    requiresCompletionBeforeNext?: boolean
    autoAssignToRole?: boolean
    notes?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    category?: boolean
    Product?: boolean | ProductDefaultArgs<ExtArgs>
    tasks?: boolean | task_templates$tasksArgs<ExtArgs>
    _count?: boolean | Task_templatesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["task_templates"]>

  export type task_templatesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    name?: boolean
    description?: boolean
    estimatedDuration?: boolean
    leadTimeHours?: boolean
    sequenceOrder?: boolean
    requiredRole?: boolean
    triggerCondition?: boolean
    isMandatory?: boolean
    requiresCompletionBeforeNext?: boolean
    autoAssignToRole?: boolean
    notes?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    category?: boolean
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["task_templates"]>

  export type task_templatesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    name?: boolean
    description?: boolean
    estimatedDuration?: boolean
    leadTimeHours?: boolean
    sequenceOrder?: boolean
    requiredRole?: boolean
    triggerCondition?: boolean
    isMandatory?: boolean
    requiresCompletionBeforeNext?: boolean
    autoAssignToRole?: boolean
    notes?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    category?: boolean
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["task_templates"]>

  export type task_templatesSelectScalar = {
    id?: boolean
    productId?: boolean
    name?: boolean
    description?: boolean
    estimatedDuration?: boolean
    leadTimeHours?: boolean
    sequenceOrder?: boolean
    requiredRole?: boolean
    triggerCondition?: boolean
    isMandatory?: boolean
    requiresCompletionBeforeNext?: boolean
    autoAssignToRole?: boolean
    notes?: boolean
    isActive?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    category?: boolean
  }

  export type task_templatesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "productId" | "name" | "description" | "estimatedDuration" | "leadTimeHours" | "sequenceOrder" | "requiredRole" | "triggerCondition" | "isMandatory" | "requiresCompletionBeforeNext" | "autoAssignToRole" | "notes" | "isActive" | "createdAt" | "updatedAt" | "category", ExtArgs["result"]["task_templates"]>
  export type task_templatesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Product?: boolean | ProductDefaultArgs<ExtArgs>
    tasks?: boolean | task_templates$tasksArgs<ExtArgs>
    _count?: boolean | Task_templatesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type task_templatesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }
  export type task_templatesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $task_templatesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "task_templates"
    objects: {
      Product: Prisma.$ProductPayload<ExtArgs>
      tasks: Prisma.$tasksPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      productId: string
      name: string
      description: string | null
      estimatedDuration: number
      leadTimeHours: number
      sequenceOrder: number
      requiredRole: string | null
      triggerCondition: $Enums.TaskTriggerCondition
      isMandatory: boolean
      requiresCompletionBeforeNext: boolean
      autoAssignToRole: string | null
      notes: string | null
      isActive: boolean
      createdAt: Date
      updatedAt: Date
      category: string | null
    }, ExtArgs["result"]["task_templates"]>
    composites: {}
  }

  type task_templatesGetPayload<S extends boolean | null | undefined | task_templatesDefaultArgs> = $Result.GetResult<Prisma.$task_templatesPayload, S>

  type task_templatesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<task_templatesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Task_templatesCountAggregateInputType | true
    }

  export interface task_templatesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['task_templates'], meta: { name: 'task_templates' } }
    /**
     * Find zero or one Task_templates that matches the filter.
     * @param {task_templatesFindUniqueArgs} args - Arguments to find a Task_templates
     * @example
     * // Get one Task_templates
     * const task_templates = await prisma.task_templates.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends task_templatesFindUniqueArgs>(args: SelectSubset<T, task_templatesFindUniqueArgs<ExtArgs>>): Prisma__task_templatesClient<$Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Task_templates that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {task_templatesFindUniqueOrThrowArgs} args - Arguments to find a Task_templates
     * @example
     * // Get one Task_templates
     * const task_templates = await prisma.task_templates.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends task_templatesFindUniqueOrThrowArgs>(args: SelectSubset<T, task_templatesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__task_templatesClient<$Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Task_templates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {task_templatesFindFirstArgs} args - Arguments to find a Task_templates
     * @example
     * // Get one Task_templates
     * const task_templates = await prisma.task_templates.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends task_templatesFindFirstArgs>(args?: SelectSubset<T, task_templatesFindFirstArgs<ExtArgs>>): Prisma__task_templatesClient<$Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Task_templates that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {task_templatesFindFirstOrThrowArgs} args - Arguments to find a Task_templates
     * @example
     * // Get one Task_templates
     * const task_templates = await prisma.task_templates.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends task_templatesFindFirstOrThrowArgs>(args?: SelectSubset<T, task_templatesFindFirstOrThrowArgs<ExtArgs>>): Prisma__task_templatesClient<$Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Task_templates that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {task_templatesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Task_templates
     * const task_templates = await prisma.task_templates.findMany()
     * 
     * // Get first 10 Task_templates
     * const task_templates = await prisma.task_templates.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const task_templatesWithIdOnly = await prisma.task_templates.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends task_templatesFindManyArgs>(args?: SelectSubset<T, task_templatesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Task_templates.
     * @param {task_templatesCreateArgs} args - Arguments to create a Task_templates.
     * @example
     * // Create one Task_templates
     * const Task_templates = await prisma.task_templates.create({
     *   data: {
     *     // ... data to create a Task_templates
     *   }
     * })
     * 
     */
    create<T extends task_templatesCreateArgs>(args: SelectSubset<T, task_templatesCreateArgs<ExtArgs>>): Prisma__task_templatesClient<$Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Task_templates.
     * @param {task_templatesCreateManyArgs} args - Arguments to create many Task_templates.
     * @example
     * // Create many Task_templates
     * const task_templates = await prisma.task_templates.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends task_templatesCreateManyArgs>(args?: SelectSubset<T, task_templatesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Task_templates and returns the data saved in the database.
     * @param {task_templatesCreateManyAndReturnArgs} args - Arguments to create many Task_templates.
     * @example
     * // Create many Task_templates
     * const task_templates = await prisma.task_templates.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Task_templates and only return the `id`
     * const task_templatesWithIdOnly = await prisma.task_templates.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends task_templatesCreateManyAndReturnArgs>(args?: SelectSubset<T, task_templatesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Task_templates.
     * @param {task_templatesDeleteArgs} args - Arguments to delete one Task_templates.
     * @example
     * // Delete one Task_templates
     * const Task_templates = await prisma.task_templates.delete({
     *   where: {
     *     // ... filter to delete one Task_templates
     *   }
     * })
     * 
     */
    delete<T extends task_templatesDeleteArgs>(args: SelectSubset<T, task_templatesDeleteArgs<ExtArgs>>): Prisma__task_templatesClient<$Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Task_templates.
     * @param {task_templatesUpdateArgs} args - Arguments to update one Task_templates.
     * @example
     * // Update one Task_templates
     * const task_templates = await prisma.task_templates.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends task_templatesUpdateArgs>(args: SelectSubset<T, task_templatesUpdateArgs<ExtArgs>>): Prisma__task_templatesClient<$Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Task_templates.
     * @param {task_templatesDeleteManyArgs} args - Arguments to filter Task_templates to delete.
     * @example
     * // Delete a few Task_templates
     * const { count } = await prisma.task_templates.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends task_templatesDeleteManyArgs>(args?: SelectSubset<T, task_templatesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Task_templates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {task_templatesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Task_templates
     * const task_templates = await prisma.task_templates.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends task_templatesUpdateManyArgs>(args: SelectSubset<T, task_templatesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Task_templates and returns the data updated in the database.
     * @param {task_templatesUpdateManyAndReturnArgs} args - Arguments to update many Task_templates.
     * @example
     * // Update many Task_templates
     * const task_templates = await prisma.task_templates.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Task_templates and only return the `id`
     * const task_templatesWithIdOnly = await prisma.task_templates.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends task_templatesUpdateManyAndReturnArgs>(args: SelectSubset<T, task_templatesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Task_templates.
     * @param {task_templatesUpsertArgs} args - Arguments to update or create a Task_templates.
     * @example
     * // Update or create a Task_templates
     * const task_templates = await prisma.task_templates.upsert({
     *   create: {
     *     // ... data to create a Task_templates
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Task_templates we want to update
     *   }
     * })
     */
    upsert<T extends task_templatesUpsertArgs>(args: SelectSubset<T, task_templatesUpsertArgs<ExtArgs>>): Prisma__task_templatesClient<$Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Task_templates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {task_templatesCountArgs} args - Arguments to filter Task_templates to count.
     * @example
     * // Count the number of Task_templates
     * const count = await prisma.task_templates.count({
     *   where: {
     *     // ... the filter for the Task_templates we want to count
     *   }
     * })
    **/
    count<T extends task_templatesCountArgs>(
      args?: Subset<T, task_templatesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Task_templatesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Task_templates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Task_templatesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Task_templatesAggregateArgs>(args: Subset<T, Task_templatesAggregateArgs>): Prisma.PrismaPromise<GetTask_templatesAggregateType<T>>

    /**
     * Group by Task_templates.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {task_templatesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends task_templatesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: task_templatesGroupByArgs['orderBy'] }
        : { orderBy?: task_templatesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, task_templatesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTask_templatesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the task_templates model
   */
  readonly fields: task_templatesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for task_templates.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__task_templatesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    tasks<T extends task_templates$tasksArgs<ExtArgs> = {}>(args?: Subset<T, task_templates$tasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the task_templates model
   */
  interface task_templatesFieldRefs {
    readonly id: FieldRef<"task_templates", 'String'>
    readonly productId: FieldRef<"task_templates", 'String'>
    readonly name: FieldRef<"task_templates", 'String'>
    readonly description: FieldRef<"task_templates", 'String'>
    readonly estimatedDuration: FieldRef<"task_templates", 'Int'>
    readonly leadTimeHours: FieldRef<"task_templates", 'Int'>
    readonly sequenceOrder: FieldRef<"task_templates", 'Int'>
    readonly requiredRole: FieldRef<"task_templates", 'String'>
    readonly triggerCondition: FieldRef<"task_templates", 'TaskTriggerCondition'>
    readonly isMandatory: FieldRef<"task_templates", 'Boolean'>
    readonly requiresCompletionBeforeNext: FieldRef<"task_templates", 'Boolean'>
    readonly autoAssignToRole: FieldRef<"task_templates", 'String'>
    readonly notes: FieldRef<"task_templates", 'String'>
    readonly isActive: FieldRef<"task_templates", 'Boolean'>
    readonly createdAt: FieldRef<"task_templates", 'DateTime'>
    readonly updatedAt: FieldRef<"task_templates", 'DateTime'>
    readonly category: FieldRef<"task_templates", 'String'>
  }
    

  // Custom InputTypes
  /**
   * task_templates findUnique
   */
  export type task_templatesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_templates
     */
    select?: task_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_templates
     */
    omit?: task_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_templatesInclude<ExtArgs> | null
    /**
     * Filter, which task_templates to fetch.
     */
    where: task_templatesWhereUniqueInput
  }

  /**
   * task_templates findUniqueOrThrow
   */
  export type task_templatesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_templates
     */
    select?: task_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_templates
     */
    omit?: task_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_templatesInclude<ExtArgs> | null
    /**
     * Filter, which task_templates to fetch.
     */
    where: task_templatesWhereUniqueInput
  }

  /**
   * task_templates findFirst
   */
  export type task_templatesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_templates
     */
    select?: task_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_templates
     */
    omit?: task_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_templatesInclude<ExtArgs> | null
    /**
     * Filter, which task_templates to fetch.
     */
    where?: task_templatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of task_templates to fetch.
     */
    orderBy?: task_templatesOrderByWithRelationInput | task_templatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for task_templates.
     */
    cursor?: task_templatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` task_templates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` task_templates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of task_templates.
     */
    distinct?: Task_templatesScalarFieldEnum | Task_templatesScalarFieldEnum[]
  }

  /**
   * task_templates findFirstOrThrow
   */
  export type task_templatesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_templates
     */
    select?: task_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_templates
     */
    omit?: task_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_templatesInclude<ExtArgs> | null
    /**
     * Filter, which task_templates to fetch.
     */
    where?: task_templatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of task_templates to fetch.
     */
    orderBy?: task_templatesOrderByWithRelationInput | task_templatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for task_templates.
     */
    cursor?: task_templatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` task_templates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` task_templates.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of task_templates.
     */
    distinct?: Task_templatesScalarFieldEnum | Task_templatesScalarFieldEnum[]
  }

  /**
   * task_templates findMany
   */
  export type task_templatesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_templates
     */
    select?: task_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_templates
     */
    omit?: task_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_templatesInclude<ExtArgs> | null
    /**
     * Filter, which task_templates to fetch.
     */
    where?: task_templatesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of task_templates to fetch.
     */
    orderBy?: task_templatesOrderByWithRelationInput | task_templatesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing task_templates.
     */
    cursor?: task_templatesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` task_templates from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` task_templates.
     */
    skip?: number
    distinct?: Task_templatesScalarFieldEnum | Task_templatesScalarFieldEnum[]
  }

  /**
   * task_templates create
   */
  export type task_templatesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_templates
     */
    select?: task_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_templates
     */
    omit?: task_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_templatesInclude<ExtArgs> | null
    /**
     * The data needed to create a task_templates.
     */
    data: XOR<task_templatesCreateInput, task_templatesUncheckedCreateInput>
  }

  /**
   * task_templates createMany
   */
  export type task_templatesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many task_templates.
     */
    data: task_templatesCreateManyInput | task_templatesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * task_templates createManyAndReturn
   */
  export type task_templatesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_templates
     */
    select?: task_templatesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the task_templates
     */
    omit?: task_templatesOmit<ExtArgs> | null
    /**
     * The data used to create many task_templates.
     */
    data: task_templatesCreateManyInput | task_templatesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_templatesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * task_templates update
   */
  export type task_templatesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_templates
     */
    select?: task_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_templates
     */
    omit?: task_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_templatesInclude<ExtArgs> | null
    /**
     * The data needed to update a task_templates.
     */
    data: XOR<task_templatesUpdateInput, task_templatesUncheckedUpdateInput>
    /**
     * Choose, which task_templates to update.
     */
    where: task_templatesWhereUniqueInput
  }

  /**
   * task_templates updateMany
   */
  export type task_templatesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update task_templates.
     */
    data: XOR<task_templatesUpdateManyMutationInput, task_templatesUncheckedUpdateManyInput>
    /**
     * Filter which task_templates to update
     */
    where?: task_templatesWhereInput
    /**
     * Limit how many task_templates to update.
     */
    limit?: number
  }

  /**
   * task_templates updateManyAndReturn
   */
  export type task_templatesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_templates
     */
    select?: task_templatesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the task_templates
     */
    omit?: task_templatesOmit<ExtArgs> | null
    /**
     * The data used to update task_templates.
     */
    data: XOR<task_templatesUpdateManyMutationInput, task_templatesUncheckedUpdateManyInput>
    /**
     * Filter which task_templates to update
     */
    where?: task_templatesWhereInput
    /**
     * Limit how many task_templates to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_templatesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * task_templates upsert
   */
  export type task_templatesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_templates
     */
    select?: task_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_templates
     */
    omit?: task_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_templatesInclude<ExtArgs> | null
    /**
     * The filter to search for the task_templates to update in case it exists.
     */
    where: task_templatesWhereUniqueInput
    /**
     * In case the task_templates found by the `where` argument doesn't exist, create a new task_templates with this data.
     */
    create: XOR<task_templatesCreateInput, task_templatesUncheckedCreateInput>
    /**
     * In case the task_templates was found with the provided `where` argument, update it with this data.
     */
    update: XOR<task_templatesUpdateInput, task_templatesUncheckedUpdateInput>
  }

  /**
   * task_templates delete
   */
  export type task_templatesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_templates
     */
    select?: task_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_templates
     */
    omit?: task_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_templatesInclude<ExtArgs> | null
    /**
     * Filter which task_templates to delete.
     */
    where: task_templatesWhereUniqueInput
  }

  /**
   * task_templates deleteMany
   */
  export type task_templatesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which task_templates to delete
     */
    where?: task_templatesWhereInput
    /**
     * Limit how many task_templates to delete.
     */
    limit?: number
  }

  /**
   * task_templates.tasks
   */
  export type task_templates$tasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    where?: tasksWhereInput
    orderBy?: tasksOrderByWithRelationInput | tasksOrderByWithRelationInput[]
    cursor?: tasksWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TasksScalarFieldEnum | TasksScalarFieldEnum[]
  }

  /**
   * task_templates without action
   */
  export type task_templatesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_templates
     */
    select?: task_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_templates
     */
    omit?: task_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_templatesInclude<ExtArgs> | null
  }


  /**
   * Model tasks
   */

  export type AggregateTasks = {
    _count: TasksCountAggregateOutputType | null
    _avg: TasksAvgAggregateOutputType | null
    _sum: TasksSumAggregateOutputType | null
    _min: TasksMinAggregateOutputType | null
    _max: TasksMaxAggregateOutputType | null
  }

  export type TasksAvgAggregateOutputType = {
    estimatedDuration: number | null
    actualDuration: number | null
  }

  export type TasksSumAggregateOutputType = {
    estimatedDuration: number | null
    actualDuration: number | null
  }

  export type TasksMinAggregateOutputType = {
    id: string | null
    templateId: string | null
    eventId: string | null
    orderId: string | null
    productId: string | null
    assignedUserId: string | null
    name: string | null
    description: string | null
    category: string | null
    status: $Enums.TaskStatus | null
    priority: $Enums.TaskPriority | null
    dueDate: Date | null
    startTime: Date | null
    endTime: Date | null
    estimatedDuration: number | null
    actualDuration: number | null
    actualStartTime: Date | null
    actualEndTime: Date | null
    completionNotes: string | null
    requiresCustomerApproval: boolean | null
    customerApprovedAt: Date | null
    blockedReason: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TasksMaxAggregateOutputType = {
    id: string | null
    templateId: string | null
    eventId: string | null
    orderId: string | null
    productId: string | null
    assignedUserId: string | null
    name: string | null
    description: string | null
    category: string | null
    status: $Enums.TaskStatus | null
    priority: $Enums.TaskPriority | null
    dueDate: Date | null
    startTime: Date | null
    endTime: Date | null
    estimatedDuration: number | null
    actualDuration: number | null
    actualStartTime: Date | null
    actualEndTime: Date | null
    completionNotes: string | null
    requiresCustomerApproval: boolean | null
    customerApprovedAt: Date | null
    blockedReason: string | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type TasksCountAggregateOutputType = {
    id: number
    templateId: number
    eventId: number
    orderId: number
    productId: number
    assignedUserId: number
    name: number
    description: number
    category: number
    status: number
    priority: number
    dueDate: number
    startTime: number
    endTime: number
    estimatedDuration: number
    actualDuration: number
    actualStartTime: number
    actualEndTime: number
    completionNotes: number
    requiresCustomerApproval: number
    customerApprovedAt: number
    blockedReason: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type TasksAvgAggregateInputType = {
    estimatedDuration?: true
    actualDuration?: true
  }

  export type TasksSumAggregateInputType = {
    estimatedDuration?: true
    actualDuration?: true
  }

  export type TasksMinAggregateInputType = {
    id?: true
    templateId?: true
    eventId?: true
    orderId?: true
    productId?: true
    assignedUserId?: true
    name?: true
    description?: true
    category?: true
    status?: true
    priority?: true
    dueDate?: true
    startTime?: true
    endTime?: true
    estimatedDuration?: true
    actualDuration?: true
    actualStartTime?: true
    actualEndTime?: true
    completionNotes?: true
    requiresCustomerApproval?: true
    customerApprovedAt?: true
    blockedReason?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TasksMaxAggregateInputType = {
    id?: true
    templateId?: true
    eventId?: true
    orderId?: true
    productId?: true
    assignedUserId?: true
    name?: true
    description?: true
    category?: true
    status?: true
    priority?: true
    dueDate?: true
    startTime?: true
    endTime?: true
    estimatedDuration?: true
    actualDuration?: true
    actualStartTime?: true
    actualEndTime?: true
    completionNotes?: true
    requiresCustomerApproval?: true
    customerApprovedAt?: true
    blockedReason?: true
    createdAt?: true
    updatedAt?: true
  }

  export type TasksCountAggregateInputType = {
    id?: true
    templateId?: true
    eventId?: true
    orderId?: true
    productId?: true
    assignedUserId?: true
    name?: true
    description?: true
    category?: true
    status?: true
    priority?: true
    dueDate?: true
    startTime?: true
    endTime?: true
    estimatedDuration?: true
    actualDuration?: true
    actualStartTime?: true
    actualEndTime?: true
    completionNotes?: true
    requiresCustomerApproval?: true
    customerApprovedAt?: true
    blockedReason?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type TasksAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tasks to aggregate.
     */
    where?: tasksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tasks to fetch.
     */
    orderBy?: tasksOrderByWithRelationInput | tasksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tasksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tasks
    **/
    _count?: true | TasksCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TasksAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TasksSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TasksMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TasksMaxAggregateInputType
  }

  export type GetTasksAggregateType<T extends TasksAggregateArgs> = {
        [P in keyof T & keyof AggregateTasks]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTasks[P]>
      : GetScalarType<T[P], AggregateTasks[P]>
  }




  export type tasksGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tasksWhereInput
    orderBy?: tasksOrderByWithAggregationInput | tasksOrderByWithAggregationInput[]
    by: TasksScalarFieldEnum[] | TasksScalarFieldEnum
    having?: tasksScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TasksCountAggregateInputType | true
    _avg?: TasksAvgAggregateInputType
    _sum?: TasksSumAggregateInputType
    _min?: TasksMinAggregateInputType
    _max?: TasksMaxAggregateInputType
  }

  export type TasksGroupByOutputType = {
    id: string
    templateId: string | null
    eventId: string | null
    orderId: string | null
    productId: string | null
    assignedUserId: string | null
    name: string
    description: string | null
    category: string | null
    status: $Enums.TaskStatus
    priority: $Enums.TaskPriority
    dueDate: Date | null
    startTime: Date | null
    endTime: Date | null
    estimatedDuration: number | null
    actualDuration: number | null
    actualStartTime: Date | null
    actualEndTime: Date | null
    completionNotes: string | null
    requiresCustomerApproval: boolean
    customerApprovedAt: Date | null
    blockedReason: string | null
    createdAt: Date
    updatedAt: Date
    _count: TasksCountAggregateOutputType | null
    _avg: TasksAvgAggregateOutputType | null
    _sum: TasksSumAggregateOutputType | null
    _min: TasksMinAggregateOutputType | null
    _max: TasksMaxAggregateOutputType | null
  }

  type GetTasksGroupByPayload<T extends tasksGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TasksGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TasksGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TasksGroupByOutputType[P]>
            : GetScalarType<T[P], TasksGroupByOutputType[P]>
        }
      >
    >


  export type tasksSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    templateId?: boolean
    eventId?: boolean
    orderId?: boolean
    productId?: boolean
    assignedUserId?: boolean
    name?: boolean
    description?: boolean
    category?: boolean
    status?: boolean
    priority?: boolean
    dueDate?: boolean
    startTime?: boolean
    endTime?: boolean
    estimatedDuration?: boolean
    actualDuration?: boolean
    actualStartTime?: boolean
    actualEndTime?: boolean
    completionNotes?: boolean
    requiresCustomerApproval?: boolean
    customerApprovedAt?: boolean
    blockedReason?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: boolean | tasks$task_dependencies_task_dependencies_dependsOnTaskIdTotasksArgs<ExtArgs>
    task_dependencies_task_dependencies_taskIdTotasks?: boolean | tasks$task_dependencies_task_dependencies_taskIdTotasksArgs<ExtArgs>
    User?: boolean | tasks$UserArgs<ExtArgs>
    Event?: boolean | tasks$EventArgs<ExtArgs>
    Order?: boolean | tasks$OrderArgs<ExtArgs>
    Product?: boolean | tasks$ProductArgs<ExtArgs>
    task_templates?: boolean | tasks$task_templatesArgs<ExtArgs>
    _count?: boolean | TasksCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tasks"]>

  export type tasksSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    templateId?: boolean
    eventId?: boolean
    orderId?: boolean
    productId?: boolean
    assignedUserId?: boolean
    name?: boolean
    description?: boolean
    category?: boolean
    status?: boolean
    priority?: boolean
    dueDate?: boolean
    startTime?: boolean
    endTime?: boolean
    estimatedDuration?: boolean
    actualDuration?: boolean
    actualStartTime?: boolean
    actualEndTime?: boolean
    completionNotes?: boolean
    requiresCustomerApproval?: boolean
    customerApprovedAt?: boolean
    blockedReason?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    User?: boolean | tasks$UserArgs<ExtArgs>
    Event?: boolean | tasks$EventArgs<ExtArgs>
    Order?: boolean | tasks$OrderArgs<ExtArgs>
    Product?: boolean | tasks$ProductArgs<ExtArgs>
    task_templates?: boolean | tasks$task_templatesArgs<ExtArgs>
  }, ExtArgs["result"]["tasks"]>

  export type tasksSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    templateId?: boolean
    eventId?: boolean
    orderId?: boolean
    productId?: boolean
    assignedUserId?: boolean
    name?: boolean
    description?: boolean
    category?: boolean
    status?: boolean
    priority?: boolean
    dueDate?: boolean
    startTime?: boolean
    endTime?: boolean
    estimatedDuration?: boolean
    actualDuration?: boolean
    actualStartTime?: boolean
    actualEndTime?: boolean
    completionNotes?: boolean
    requiresCustomerApproval?: boolean
    customerApprovedAt?: boolean
    blockedReason?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    User?: boolean | tasks$UserArgs<ExtArgs>
    Event?: boolean | tasks$EventArgs<ExtArgs>
    Order?: boolean | tasks$OrderArgs<ExtArgs>
    Product?: boolean | tasks$ProductArgs<ExtArgs>
    task_templates?: boolean | tasks$task_templatesArgs<ExtArgs>
  }, ExtArgs["result"]["tasks"]>

  export type tasksSelectScalar = {
    id?: boolean
    templateId?: boolean
    eventId?: boolean
    orderId?: boolean
    productId?: boolean
    assignedUserId?: boolean
    name?: boolean
    description?: boolean
    category?: boolean
    status?: boolean
    priority?: boolean
    dueDate?: boolean
    startTime?: boolean
    endTime?: boolean
    estimatedDuration?: boolean
    actualDuration?: boolean
    actualStartTime?: boolean
    actualEndTime?: boolean
    completionNotes?: boolean
    requiresCustomerApproval?: boolean
    customerApprovedAt?: boolean
    blockedReason?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type tasksOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "templateId" | "eventId" | "orderId" | "productId" | "assignedUserId" | "name" | "description" | "category" | "status" | "priority" | "dueDate" | "startTime" | "endTime" | "estimatedDuration" | "actualDuration" | "actualStartTime" | "actualEndTime" | "completionNotes" | "requiresCustomerApproval" | "customerApprovedAt" | "blockedReason" | "createdAt" | "updatedAt", ExtArgs["result"]["tasks"]>
  export type tasksInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: boolean | tasks$task_dependencies_task_dependencies_dependsOnTaskIdTotasksArgs<ExtArgs>
    task_dependencies_task_dependencies_taskIdTotasks?: boolean | tasks$task_dependencies_task_dependencies_taskIdTotasksArgs<ExtArgs>
    User?: boolean | tasks$UserArgs<ExtArgs>
    Event?: boolean | tasks$EventArgs<ExtArgs>
    Order?: boolean | tasks$OrderArgs<ExtArgs>
    Product?: boolean | tasks$ProductArgs<ExtArgs>
    task_templates?: boolean | tasks$task_templatesArgs<ExtArgs>
    _count?: boolean | TasksCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type tasksIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | tasks$UserArgs<ExtArgs>
    Event?: boolean | tasks$EventArgs<ExtArgs>
    Order?: boolean | tasks$OrderArgs<ExtArgs>
    Product?: boolean | tasks$ProductArgs<ExtArgs>
    task_templates?: boolean | tasks$task_templatesArgs<ExtArgs>
  }
  export type tasksIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | tasks$UserArgs<ExtArgs>
    Event?: boolean | tasks$EventArgs<ExtArgs>
    Order?: boolean | tasks$OrderArgs<ExtArgs>
    Product?: boolean | tasks$ProductArgs<ExtArgs>
    task_templates?: boolean | tasks$task_templatesArgs<ExtArgs>
  }

  export type $tasksPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tasks"
    objects: {
      task_dependencies_task_dependencies_dependsOnTaskIdTotasks: Prisma.$task_dependenciesPayload<ExtArgs>[]
      task_dependencies_task_dependencies_taskIdTotasks: Prisma.$task_dependenciesPayload<ExtArgs>[]
      User: Prisma.$UserPayload<ExtArgs> | null
      Event: Prisma.$EventPayload<ExtArgs> | null
      Order: Prisma.$OrderPayload<ExtArgs> | null
      Product: Prisma.$ProductPayload<ExtArgs> | null
      task_templates: Prisma.$task_templatesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      templateId: string | null
      eventId: string | null
      orderId: string | null
      productId: string | null
      assignedUserId: string | null
      name: string
      description: string | null
      category: string | null
      status: $Enums.TaskStatus
      priority: $Enums.TaskPriority
      dueDate: Date | null
      startTime: Date | null
      endTime: Date | null
      estimatedDuration: number | null
      actualDuration: number | null
      actualStartTime: Date | null
      actualEndTime: Date | null
      completionNotes: string | null
      requiresCustomerApproval: boolean
      customerApprovedAt: Date | null
      blockedReason: string | null
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["tasks"]>
    composites: {}
  }

  type tasksGetPayload<S extends boolean | null | undefined | tasksDefaultArgs> = $Result.GetResult<Prisma.$tasksPayload, S>

  type tasksCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tasksFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TasksCountAggregateInputType | true
    }

  export interface tasksDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tasks'], meta: { name: 'tasks' } }
    /**
     * Find zero or one Tasks that matches the filter.
     * @param {tasksFindUniqueArgs} args - Arguments to find a Tasks
     * @example
     * // Get one Tasks
     * const tasks = await prisma.tasks.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tasksFindUniqueArgs>(args: SelectSubset<T, tasksFindUniqueArgs<ExtArgs>>): Prisma__tasksClient<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tasks that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tasksFindUniqueOrThrowArgs} args - Arguments to find a Tasks
     * @example
     * // Get one Tasks
     * const tasks = await prisma.tasks.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tasksFindUniqueOrThrowArgs>(args: SelectSubset<T, tasksFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tasksClient<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tasks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tasksFindFirstArgs} args - Arguments to find a Tasks
     * @example
     * // Get one Tasks
     * const tasks = await prisma.tasks.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tasksFindFirstArgs>(args?: SelectSubset<T, tasksFindFirstArgs<ExtArgs>>): Prisma__tasksClient<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tasks that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tasksFindFirstOrThrowArgs} args - Arguments to find a Tasks
     * @example
     * // Get one Tasks
     * const tasks = await prisma.tasks.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tasksFindFirstOrThrowArgs>(args?: SelectSubset<T, tasksFindFirstOrThrowArgs<ExtArgs>>): Prisma__tasksClient<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tasks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tasksFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tasks
     * const tasks = await prisma.tasks.findMany()
     * 
     * // Get first 10 Tasks
     * const tasks = await prisma.tasks.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tasksWithIdOnly = await prisma.tasks.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tasksFindManyArgs>(args?: SelectSubset<T, tasksFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tasks.
     * @param {tasksCreateArgs} args - Arguments to create a Tasks.
     * @example
     * // Create one Tasks
     * const Tasks = await prisma.tasks.create({
     *   data: {
     *     // ... data to create a Tasks
     *   }
     * })
     * 
     */
    create<T extends tasksCreateArgs>(args: SelectSubset<T, tasksCreateArgs<ExtArgs>>): Prisma__tasksClient<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tasks.
     * @param {tasksCreateManyArgs} args - Arguments to create many Tasks.
     * @example
     * // Create many Tasks
     * const tasks = await prisma.tasks.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tasksCreateManyArgs>(args?: SelectSubset<T, tasksCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tasks and returns the data saved in the database.
     * @param {tasksCreateManyAndReturnArgs} args - Arguments to create many Tasks.
     * @example
     * // Create many Tasks
     * const tasks = await prisma.tasks.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tasks and only return the `id`
     * const tasksWithIdOnly = await prisma.tasks.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tasksCreateManyAndReturnArgs>(args?: SelectSubset<T, tasksCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Tasks.
     * @param {tasksDeleteArgs} args - Arguments to delete one Tasks.
     * @example
     * // Delete one Tasks
     * const Tasks = await prisma.tasks.delete({
     *   where: {
     *     // ... filter to delete one Tasks
     *   }
     * })
     * 
     */
    delete<T extends tasksDeleteArgs>(args: SelectSubset<T, tasksDeleteArgs<ExtArgs>>): Prisma__tasksClient<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tasks.
     * @param {tasksUpdateArgs} args - Arguments to update one Tasks.
     * @example
     * // Update one Tasks
     * const tasks = await prisma.tasks.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tasksUpdateArgs>(args: SelectSubset<T, tasksUpdateArgs<ExtArgs>>): Prisma__tasksClient<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tasks.
     * @param {tasksDeleteManyArgs} args - Arguments to filter Tasks to delete.
     * @example
     * // Delete a few Tasks
     * const { count } = await prisma.tasks.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tasksDeleteManyArgs>(args?: SelectSubset<T, tasksDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tasksUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tasks
     * const tasks = await prisma.tasks.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tasksUpdateManyArgs>(args: SelectSubset<T, tasksUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tasks and returns the data updated in the database.
     * @param {tasksUpdateManyAndReturnArgs} args - Arguments to update many Tasks.
     * @example
     * // Update many Tasks
     * const tasks = await prisma.tasks.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tasks and only return the `id`
     * const tasksWithIdOnly = await prisma.tasks.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends tasksUpdateManyAndReturnArgs>(args: SelectSubset<T, tasksUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Tasks.
     * @param {tasksUpsertArgs} args - Arguments to update or create a Tasks.
     * @example
     * // Update or create a Tasks
     * const tasks = await prisma.tasks.upsert({
     *   create: {
     *     // ... data to create a Tasks
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tasks we want to update
     *   }
     * })
     */
    upsert<T extends tasksUpsertArgs>(args: SelectSubset<T, tasksUpsertArgs<ExtArgs>>): Prisma__tasksClient<$Result.GetResult<Prisma.$tasksPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tasksCountArgs} args - Arguments to filter Tasks to count.
     * @example
     * // Count the number of Tasks
     * const count = await prisma.tasks.count({
     *   where: {
     *     // ... the filter for the Tasks we want to count
     *   }
     * })
    **/
    count<T extends tasksCountArgs>(
      args?: Subset<T, tasksCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TasksCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TasksAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TasksAggregateArgs>(args: Subset<T, TasksAggregateArgs>): Prisma.PrismaPromise<GetTasksAggregateType<T>>

    /**
     * Group by Tasks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tasksGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tasksGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tasksGroupByArgs['orderBy'] }
        : { orderBy?: tasksGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tasksGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTasksGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tasks model
   */
  readonly fields: tasksFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tasks.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tasksClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks<T extends tasks$task_dependencies_task_dependencies_dependsOnTaskIdTotasksArgs<ExtArgs> = {}>(args?: Subset<T, tasks$task_dependencies_task_dependencies_dependsOnTaskIdTotasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$task_dependenciesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    task_dependencies_task_dependencies_taskIdTotasks<T extends tasks$task_dependencies_task_dependencies_taskIdTotasksArgs<ExtArgs> = {}>(args?: Subset<T, tasks$task_dependencies_task_dependencies_taskIdTotasksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$task_dependenciesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    User<T extends tasks$UserArgs<ExtArgs> = {}>(args?: Subset<T, tasks$UserArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Event<T extends tasks$EventArgs<ExtArgs> = {}>(args?: Subset<T, tasks$EventArgs<ExtArgs>>): Prisma__EventClient<$Result.GetResult<Prisma.$EventPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Order<T extends tasks$OrderArgs<ExtArgs> = {}>(args?: Subset<T, tasks$OrderArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    Product<T extends tasks$ProductArgs<ExtArgs> = {}>(args?: Subset<T, tasks$ProductArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    task_templates<T extends tasks$task_templatesArgs<ExtArgs> = {}>(args?: Subset<T, tasks$task_templatesArgs<ExtArgs>>): Prisma__task_templatesClient<$Result.GetResult<Prisma.$task_templatesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tasks model
   */
  interface tasksFieldRefs {
    readonly id: FieldRef<"tasks", 'String'>
    readonly templateId: FieldRef<"tasks", 'String'>
    readonly eventId: FieldRef<"tasks", 'String'>
    readonly orderId: FieldRef<"tasks", 'String'>
    readonly productId: FieldRef<"tasks", 'String'>
    readonly assignedUserId: FieldRef<"tasks", 'String'>
    readonly name: FieldRef<"tasks", 'String'>
    readonly description: FieldRef<"tasks", 'String'>
    readonly category: FieldRef<"tasks", 'String'>
    readonly status: FieldRef<"tasks", 'TaskStatus'>
    readonly priority: FieldRef<"tasks", 'TaskPriority'>
    readonly dueDate: FieldRef<"tasks", 'DateTime'>
    readonly startTime: FieldRef<"tasks", 'DateTime'>
    readonly endTime: FieldRef<"tasks", 'DateTime'>
    readonly estimatedDuration: FieldRef<"tasks", 'Int'>
    readonly actualDuration: FieldRef<"tasks", 'Int'>
    readonly actualStartTime: FieldRef<"tasks", 'DateTime'>
    readonly actualEndTime: FieldRef<"tasks", 'DateTime'>
    readonly completionNotes: FieldRef<"tasks", 'String'>
    readonly requiresCustomerApproval: FieldRef<"tasks", 'Boolean'>
    readonly customerApprovedAt: FieldRef<"tasks", 'DateTime'>
    readonly blockedReason: FieldRef<"tasks", 'String'>
    readonly createdAt: FieldRef<"tasks", 'DateTime'>
    readonly updatedAt: FieldRef<"tasks", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * tasks findUnique
   */
  export type tasksFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    /**
     * Filter, which tasks to fetch.
     */
    where: tasksWhereUniqueInput
  }

  /**
   * tasks findUniqueOrThrow
   */
  export type tasksFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    /**
     * Filter, which tasks to fetch.
     */
    where: tasksWhereUniqueInput
  }

  /**
   * tasks findFirst
   */
  export type tasksFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    /**
     * Filter, which tasks to fetch.
     */
    where?: tasksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tasks to fetch.
     */
    orderBy?: tasksOrderByWithRelationInput | tasksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tasks.
     */
    cursor?: tasksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tasks.
     */
    distinct?: TasksScalarFieldEnum | TasksScalarFieldEnum[]
  }

  /**
   * tasks findFirstOrThrow
   */
  export type tasksFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    /**
     * Filter, which tasks to fetch.
     */
    where?: tasksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tasks to fetch.
     */
    orderBy?: tasksOrderByWithRelationInput | tasksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tasks.
     */
    cursor?: tasksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tasks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tasks.
     */
    distinct?: TasksScalarFieldEnum | TasksScalarFieldEnum[]
  }

  /**
   * tasks findMany
   */
  export type tasksFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    /**
     * Filter, which tasks to fetch.
     */
    where?: tasksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tasks to fetch.
     */
    orderBy?: tasksOrderByWithRelationInput | tasksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tasks.
     */
    cursor?: tasksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tasks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tasks.
     */
    skip?: number
    distinct?: TasksScalarFieldEnum | TasksScalarFieldEnum[]
  }

  /**
   * tasks create
   */
  export type tasksCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    /**
     * The data needed to create a tasks.
     */
    data: XOR<tasksCreateInput, tasksUncheckedCreateInput>
  }

  /**
   * tasks createMany
   */
  export type tasksCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tasks.
     */
    data: tasksCreateManyInput | tasksCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tasks createManyAndReturn
   */
  export type tasksCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * The data used to create many tasks.
     */
    data: tasksCreateManyInput | tasksCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * tasks update
   */
  export type tasksUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    /**
     * The data needed to update a tasks.
     */
    data: XOR<tasksUpdateInput, tasksUncheckedUpdateInput>
    /**
     * Choose, which tasks to update.
     */
    where: tasksWhereUniqueInput
  }

  /**
   * tasks updateMany
   */
  export type tasksUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tasks.
     */
    data: XOR<tasksUpdateManyMutationInput, tasksUncheckedUpdateManyInput>
    /**
     * Filter which tasks to update
     */
    where?: tasksWhereInput
    /**
     * Limit how many tasks to update.
     */
    limit?: number
  }

  /**
   * tasks updateManyAndReturn
   */
  export type tasksUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * The data used to update tasks.
     */
    data: XOR<tasksUpdateManyMutationInput, tasksUncheckedUpdateManyInput>
    /**
     * Filter which tasks to update
     */
    where?: tasksWhereInput
    /**
     * Limit how many tasks to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * tasks upsert
   */
  export type tasksUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    /**
     * The filter to search for the tasks to update in case it exists.
     */
    where: tasksWhereUniqueInput
    /**
     * In case the tasks found by the `where` argument doesn't exist, create a new tasks with this data.
     */
    create: XOR<tasksCreateInput, tasksUncheckedCreateInput>
    /**
     * In case the tasks was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tasksUpdateInput, tasksUncheckedUpdateInput>
  }

  /**
   * tasks delete
   */
  export type tasksDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
    /**
     * Filter which tasks to delete.
     */
    where: tasksWhereUniqueInput
  }

  /**
   * tasks deleteMany
   */
  export type tasksDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tasks to delete
     */
    where?: tasksWhereInput
    /**
     * Limit how many tasks to delete.
     */
    limit?: number
  }

  /**
   * tasks.task_dependencies_task_dependencies_dependsOnTaskIdTotasks
   */
  export type tasks$task_dependencies_task_dependencies_dependsOnTaskIdTotasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_dependencies
     */
    select?: task_dependenciesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_dependencies
     */
    omit?: task_dependenciesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_dependenciesInclude<ExtArgs> | null
    where?: task_dependenciesWhereInput
    orderBy?: task_dependenciesOrderByWithRelationInput | task_dependenciesOrderByWithRelationInput[]
    cursor?: task_dependenciesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Task_dependenciesScalarFieldEnum | Task_dependenciesScalarFieldEnum[]
  }

  /**
   * tasks.task_dependencies_task_dependencies_taskIdTotasks
   */
  export type tasks$task_dependencies_task_dependencies_taskIdTotasksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_dependencies
     */
    select?: task_dependenciesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_dependencies
     */
    omit?: task_dependenciesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_dependenciesInclude<ExtArgs> | null
    where?: task_dependenciesWhereInput
    orderBy?: task_dependenciesOrderByWithRelationInput | task_dependenciesOrderByWithRelationInput[]
    cursor?: task_dependenciesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Task_dependenciesScalarFieldEnum | Task_dependenciesScalarFieldEnum[]
  }

  /**
   * tasks.User
   */
  export type tasks$UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Omit specific fields from the User
     */
    omit?: UserOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    where?: UserWhereInput
  }

  /**
   * tasks.Event
   */
  export type tasks$EventArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Event
     */
    select?: EventSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Event
     */
    omit?: EventOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: EventInclude<ExtArgs> | null
    where?: EventWhereInput
  }

  /**
   * tasks.Order
   */
  export type tasks$OrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Order
     */
    omit?: OrderOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
  }

  /**
   * tasks.Product
   */
  export type tasks$ProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Omit specific fields from the Product
     */
    omit?: ProductOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
  }

  /**
   * tasks.task_templates
   */
  export type tasks$task_templatesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the task_templates
     */
    select?: task_templatesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the task_templates
     */
    omit?: task_templatesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: task_templatesInclude<ExtArgs> | null
    where?: task_templatesWhereInput
  }

  /**
   * tasks without action
   */
  export type tasksDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tasks
     */
    select?: tasksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tasks
     */
    omit?: tasksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tasksInclude<ExtArgs> | null
  }


  /**
   * Model user_roles
   */

  export type AggregateUser_roles = {
    _count: User_rolesCountAggregateOutputType | null
    _min: User_rolesMinAggregateOutputType | null
    _max: User_rolesMaxAggregateOutputType | null
  }

  export type User_rolesMinAggregateOutputType = {
    id: string | null
    userId: string | null
    role: string | null
    department: string | null
    isPrimary: boolean | null
    createdAt: Date | null
  }

  export type User_rolesMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    role: string | null
    department: string | null
    isPrimary: boolean | null
    createdAt: Date | null
  }

  export type User_rolesCountAggregateOutputType = {
    id: number
    userId: number
    role: number
    department: number
    isPrimary: number
    createdAt: number
    _all: number
  }


  export type User_rolesMinAggregateInputType = {
    id?: true
    userId?: true
    role?: true
    department?: true
    isPrimary?: true
    createdAt?: true
  }

  export type User_rolesMaxAggregateInputType = {
    id?: true
    userId?: true
    role?: true
    department?: true
    isPrimary?: true
    createdAt?: true
  }

  export type User_rolesCountAggregateInputType = {
    id?: true
    userId?: true
    role?: true
    department?: true
    isPrimary?: true
    createdAt?: true
    _all?: true
  }

  export type User_rolesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_roles to aggregate.
     */
    where?: user_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_roles to fetch.
     */
    orderBy?: user_rolesOrderByWithRelationInput | user_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_roles
    **/
    _count?: true | User_rolesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_rolesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_rolesMaxAggregateInputType
  }

  export type GetUser_rolesAggregateType<T extends User_rolesAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_roles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_roles[P]>
      : GetScalarType<T[P], AggregateUser_roles[P]>
  }




  export type user_rolesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_rolesWhereInput
    orderBy?: user_rolesOrderByWithAggregationInput | user_rolesOrderByWithAggregationInput[]
    by: User_rolesScalarFieldEnum[] | User_rolesScalarFieldEnum
    having?: user_rolesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_rolesCountAggregateInputType | true
    _min?: User_rolesMinAggregateInputType
    _max?: User_rolesMaxAggregateInputType
  }

  export type User_rolesGroupByOutputType = {
    id: string
    userId: string
    role: string
    department: string | null
    isPrimary: boolean
    createdAt: Date
    _count: User_rolesCountAggregateOutputType | null
    _min: User_rolesMinAggregateOutputType | null
    _max: User_rolesMaxAggregateOutputType | null
  }

  type GetUser_rolesGroupByPayload<T extends user_rolesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_rolesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_rolesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_rolesGroupByOutputType[P]>
            : GetScalarType<T[P], User_rolesGroupByOutputType[P]>
        }
      >
    >


  export type user_rolesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    role?: boolean
    department?: boolean
    isPrimary?: boolean
    createdAt?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_roles"]>

  export type user_rolesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    role?: boolean
    department?: boolean
    isPrimary?: boolean
    createdAt?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_roles"]>

  export type user_rolesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    role?: boolean
    department?: boolean
    isPrimary?: boolean
    createdAt?: boolean
    User?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_roles"]>

  export type user_rolesSelectScalar = {
    id?: boolean
    userId?: boolean
    role?: boolean
    department?: boolean
    isPrimary?: boolean
    createdAt?: boolean
  }

  export type user_rolesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "userId" | "role" | "department" | "isPrimary" | "createdAt", ExtArgs["result"]["user_roles"]>
  export type user_rolesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type user_rolesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }
  export type user_rolesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    User?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $user_rolesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_roles"
    objects: {
      User: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      role: string
      department: string | null
      isPrimary: boolean
      createdAt: Date
    }, ExtArgs["result"]["user_roles"]>
    composites: {}
  }

  type user_rolesGetPayload<S extends boolean | null | undefined | user_rolesDefaultArgs> = $Result.GetResult<Prisma.$user_rolesPayload, S>

  type user_rolesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_rolesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_rolesCountAggregateInputType | true
    }

  export interface user_rolesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_roles'], meta: { name: 'user_roles' } }
    /**
     * Find zero or one User_roles that matches the filter.
     * @param {user_rolesFindUniqueArgs} args - Arguments to find a User_roles
     * @example
     * // Get one User_roles
     * const user_roles = await prisma.user_roles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_rolesFindUniqueArgs>(args: SelectSubset<T, user_rolesFindUniqueArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_roles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_rolesFindUniqueOrThrowArgs} args - Arguments to find a User_roles
     * @example
     * // Get one User_roles
     * const user_roles = await prisma.user_roles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_rolesFindUniqueOrThrowArgs>(args: SelectSubset<T, user_rolesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_rolesFindFirstArgs} args - Arguments to find a User_roles
     * @example
     * // Get one User_roles
     * const user_roles = await prisma.user_roles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_rolesFindFirstArgs>(args?: SelectSubset<T, user_rolesFindFirstArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_roles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_rolesFindFirstOrThrowArgs} args - Arguments to find a User_roles
     * @example
     * // Get one User_roles
     * const user_roles = await prisma.user_roles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_rolesFindFirstOrThrowArgs>(args?: SelectSubset<T, user_rolesFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_roles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_rolesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_roles
     * const user_roles = await prisma.user_roles.findMany()
     * 
     * // Get first 10 User_roles
     * const user_roles = await prisma.user_roles.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_rolesWithIdOnly = await prisma.user_roles.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_rolesFindManyArgs>(args?: SelectSubset<T, user_rolesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_roles.
     * @param {user_rolesCreateArgs} args - Arguments to create a User_roles.
     * @example
     * // Create one User_roles
     * const User_roles = await prisma.user_roles.create({
     *   data: {
     *     // ... data to create a User_roles
     *   }
     * })
     * 
     */
    create<T extends user_rolesCreateArgs>(args: SelectSubset<T, user_rolesCreateArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_roles.
     * @param {user_rolesCreateManyArgs} args - Arguments to create many User_roles.
     * @example
     * // Create many User_roles
     * const user_roles = await prisma.user_roles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_rolesCreateManyArgs>(args?: SelectSubset<T, user_rolesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_roles and returns the data saved in the database.
     * @param {user_rolesCreateManyAndReturnArgs} args - Arguments to create many User_roles.
     * @example
     * // Create many User_roles
     * const user_roles = await prisma.user_roles.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_roles and only return the `id`
     * const user_rolesWithIdOnly = await prisma.user_roles.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_rolesCreateManyAndReturnArgs>(args?: SelectSubset<T, user_rolesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_roles.
     * @param {user_rolesDeleteArgs} args - Arguments to delete one User_roles.
     * @example
     * // Delete one User_roles
     * const User_roles = await prisma.user_roles.delete({
     *   where: {
     *     // ... filter to delete one User_roles
     *   }
     * })
     * 
     */
    delete<T extends user_rolesDeleteArgs>(args: SelectSubset<T, user_rolesDeleteArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_roles.
     * @param {user_rolesUpdateArgs} args - Arguments to update one User_roles.
     * @example
     * // Update one User_roles
     * const user_roles = await prisma.user_roles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_rolesUpdateArgs>(args: SelectSubset<T, user_rolesUpdateArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_roles.
     * @param {user_rolesDeleteManyArgs} args - Arguments to filter User_roles to delete.
     * @example
     * // Delete a few User_roles
     * const { count } = await prisma.user_roles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_rolesDeleteManyArgs>(args?: SelectSubset<T, user_rolesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_rolesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_roles
     * const user_roles = await prisma.user_roles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_rolesUpdateManyArgs>(args: SelectSubset<T, user_rolesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_roles and returns the data updated in the database.
     * @param {user_rolesUpdateManyAndReturnArgs} args - Arguments to update many User_roles.
     * @example
     * // Update many User_roles
     * const user_roles = await prisma.user_roles.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_roles and only return the `id`
     * const user_rolesWithIdOnly = await prisma.user_roles.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_rolesUpdateManyAndReturnArgs>(args: SelectSubset<T, user_rolesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_roles.
     * @param {user_rolesUpsertArgs} args - Arguments to update or create a User_roles.
     * @example
     * // Update or create a User_roles
     * const user_roles = await prisma.user_roles.upsert({
     *   create: {
     *     // ... data to create a User_roles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_roles we want to update
     *   }
     * })
     */
    upsert<T extends user_rolesUpsertArgs>(args: SelectSubset<T, user_rolesUpsertArgs<ExtArgs>>): Prisma__user_rolesClient<$Result.GetResult<Prisma.$user_rolesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_rolesCountArgs} args - Arguments to filter User_roles to count.
     * @example
     * // Count the number of User_roles
     * const count = await prisma.user_roles.count({
     *   where: {
     *     // ... the filter for the User_roles we want to count
     *   }
     * })
    **/
    count<T extends user_rolesCountArgs>(
      args?: Subset<T, user_rolesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_rolesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_rolesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_rolesAggregateArgs>(args: Subset<T, User_rolesAggregateArgs>): Prisma.PrismaPromise<GetUser_rolesAggregateType<T>>

    /**
     * Group by User_roles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_rolesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_rolesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_rolesGroupByArgs['orderBy'] }
        : { orderBy?: user_rolesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_rolesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_rolesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_roles model
   */
  readonly fields: user_rolesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_roles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_rolesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    User<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_roles model
   */
  interface user_rolesFieldRefs {
    readonly id: FieldRef<"user_roles", 'String'>
    readonly userId: FieldRef<"user_roles", 'String'>
    readonly role: FieldRef<"user_roles", 'String'>
    readonly department: FieldRef<"user_roles", 'String'>
    readonly isPrimary: FieldRef<"user_roles", 'Boolean'>
    readonly createdAt: FieldRef<"user_roles", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * user_roles findUnique
   */
  export type user_rolesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
    /**
     * Filter, which user_roles to fetch.
     */
    where: user_rolesWhereUniqueInput
  }

  /**
   * user_roles findUniqueOrThrow
   */
  export type user_rolesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
    /**
     * Filter, which user_roles to fetch.
     */
    where: user_rolesWhereUniqueInput
  }

  /**
   * user_roles findFirst
   */
  export type user_rolesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
    /**
     * Filter, which user_roles to fetch.
     */
    where?: user_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_roles to fetch.
     */
    orderBy?: user_rolesOrderByWithRelationInput | user_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_roles.
     */
    cursor?: user_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_roles.
     */
    distinct?: User_rolesScalarFieldEnum | User_rolesScalarFieldEnum[]
  }

  /**
   * user_roles findFirstOrThrow
   */
  export type user_rolesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
    /**
     * Filter, which user_roles to fetch.
     */
    where?: user_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_roles to fetch.
     */
    orderBy?: user_rolesOrderByWithRelationInput | user_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_roles.
     */
    cursor?: user_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_roles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_roles.
     */
    distinct?: User_rolesScalarFieldEnum | User_rolesScalarFieldEnum[]
  }

  /**
   * user_roles findMany
   */
  export type user_rolesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
    /**
     * Filter, which user_roles to fetch.
     */
    where?: user_rolesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_roles to fetch.
     */
    orderBy?: user_rolesOrderByWithRelationInput | user_rolesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_roles.
     */
    cursor?: user_rolesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_roles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_roles.
     */
    skip?: number
    distinct?: User_rolesScalarFieldEnum | User_rolesScalarFieldEnum[]
  }

  /**
   * user_roles create
   */
  export type user_rolesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
    /**
     * The data needed to create a user_roles.
     */
    data: XOR<user_rolesCreateInput, user_rolesUncheckedCreateInput>
  }

  /**
   * user_roles createMany
   */
  export type user_rolesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_roles.
     */
    data: user_rolesCreateManyInput | user_rolesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_roles createManyAndReturn
   */
  export type user_rolesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * The data used to create many user_roles.
     */
    data: user_rolesCreateManyInput | user_rolesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_roles update
   */
  export type user_rolesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
    /**
     * The data needed to update a user_roles.
     */
    data: XOR<user_rolesUpdateInput, user_rolesUncheckedUpdateInput>
    /**
     * Choose, which user_roles to update.
     */
    where: user_rolesWhereUniqueInput
  }

  /**
   * user_roles updateMany
   */
  export type user_rolesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_roles.
     */
    data: XOR<user_rolesUpdateManyMutationInput, user_rolesUncheckedUpdateManyInput>
    /**
     * Filter which user_roles to update
     */
    where?: user_rolesWhereInput
    /**
     * Limit how many user_roles to update.
     */
    limit?: number
  }

  /**
   * user_roles updateManyAndReturn
   */
  export type user_rolesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * The data used to update user_roles.
     */
    data: XOR<user_rolesUpdateManyMutationInput, user_rolesUncheckedUpdateManyInput>
    /**
     * Filter which user_roles to update
     */
    where?: user_rolesWhereInput
    /**
     * Limit how many user_roles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * user_roles upsert
   */
  export type user_rolesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
    /**
     * The filter to search for the user_roles to update in case it exists.
     */
    where: user_rolesWhereUniqueInput
    /**
     * In case the user_roles found by the `where` argument doesn't exist, create a new user_roles with this data.
     */
    create: XOR<user_rolesCreateInput, user_rolesUncheckedCreateInput>
    /**
     * In case the user_roles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_rolesUpdateInput, user_rolesUncheckedUpdateInput>
  }

  /**
   * user_roles delete
   */
  export type user_rolesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
    /**
     * Filter which user_roles to delete.
     */
    where: user_rolesWhereUniqueInput
  }

  /**
   * user_roles deleteMany
   */
  export type user_rolesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_roles to delete
     */
    where?: user_rolesWhereInput
    /**
     * Limit how many user_roles to delete.
     */
    limit?: number
  }

  /**
   * user_roles without action
   */
  export type user_rolesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_roles
     */
    select?: user_rolesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_roles
     */
    omit?: user_rolesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_rolesInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const AccountScalarFieldEnum: {
    id: 'id',
    email: 'email',
    firstName: 'firstName',
    lastName: 'lastName',
    password: 'password',
    role: 'role',
    accessLevel: 'accessLevel',
    active: 'active',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type AccountScalarFieldEnum = (typeof AccountScalarFieldEnum)[keyof typeof AccountScalarFieldEnum]


  export const CustomerScalarFieldEnum: {
    id: 'id',
    email: 'email',
    firstName: 'firstName',
    lastName: 'lastName',
    phone: 'phone',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type CustomerScalarFieldEnum = (typeof CustomerScalarFieldEnum)[keyof typeof CustomerScalarFieldEnum]


  export const EventScalarFieldEnum: {
    id: 'id',
    title: 'title',
    description: 'description',
    location: 'location',
    startDate: 'startDate',
    endDate: 'endDate',
    customerId: 'customerId',
    status: 'status',
    staffNotes: 'staffNotes',
    assignedStaffId: 'assignedStaffId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    customerNotes: 'customerNotes',
    depositAmount: 'depositAmount',
    depositPaid: 'depositPaid',
    endTime: 'endTime',
    finalPaymentPaid: 'finalPaymentPaid',
    reviewedAt: 'reviewedAt',
    reviewedBy: 'reviewedBy',
    stage: 'stage',
    startTime: 'startTime',
    totalAmount: 'totalAmount'
  };

  export type EventScalarFieldEnum = (typeof EventScalarFieldEnum)[keyof typeof EventScalarFieldEnum]


  export const HeroSettingScalarFieldEnum: {
    id: 'id',
    imageUrl: 'imageUrl',
    title: 'title',
    description: 'description',
    buttonText: 'buttonText',
    buttonLink: 'buttonLink',
    textPosition: 'textPosition',
    active: 'active',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type HeroSettingScalarFieldEnum = (typeof HeroSettingScalarFieldEnum)[keyof typeof HeroSettingScalarFieldEnum]


  export const OrderScalarFieldEnum: {
    id: 'id',
    customerId: 'customerId',
    totalAmount: 'totalAmount',
    status: 'status',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    assignedStaffId: 'assignedStaffId',
    billingAddress: 'billingAddress',
    customerNotes: 'customerNotes',
    deliveredAt: 'deliveredAt',
    discountAmount: 'discountAmount',
    finalAmount: 'finalAmount',
    orderNumber: 'orderNumber',
    paymentStatus: 'paymentStatus',
    reviewedAt: 'reviewedAt',
    reviewedBy: 'reviewedBy',
    shippedAt: 'shippedAt',
    shippingAddress: 'shippingAddress',
    shippingAmount: 'shippingAmount',
    staffNotes: 'staffNotes',
    stage: 'stage',
    taxAmount: 'taxAmount'
  };

  export type OrderScalarFieldEnum = (typeof OrderScalarFieldEnum)[keyof typeof OrderScalarFieldEnum]


  export const ProductScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    price: 'price',
    imageUrl: 'imageUrl',
    active: 'active',
    categoryId: 'categoryId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    canBuy: 'canBuy',
    canHire: 'canHire',
    hasRangePrice: 'hasRangePrice',
    hasUnitPrice: 'hasUnitPrice',
    maxPrice: 'maxPrice',
    minPrice: 'minPrice',
    minQuantity: 'minQuantity',
    unitPrice: 'unitPrice',
    unitType: 'unitType'
  };

  export type ProductScalarFieldEnum = (typeof ProductScalarFieldEnum)[keyof typeof ProductScalarFieldEnum]


  export const StaffInvitationScalarFieldEnum: {
    id: 'id',
    email: 'email',
    firstName: 'firstName',
    lastName: 'lastName',
    role: 'role',
    accessLevel: 'accessLevel',
    token: 'token',
    used: 'used',
    usedAt: 'usedAt',
    createdAt: 'createdAt',
    expiresAt: 'expiresAt'
  };

  export type StaffInvitationScalarFieldEnum = (typeof StaffInvitationScalarFieldEnum)[keyof typeof StaffInvitationScalarFieldEnum]


  export const ProductCategoryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    active: 'active',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProductCategoryScalarFieldEnum = (typeof ProductCategoryScalarFieldEnum)[keyof typeof ProductCategoryScalarFieldEnum]


  export const EventItemScalarFieldEnum: {
    id: 'id',
    eventId: 'eventId',
    productId: 'productId',
    quantity: 'quantity',
    unitPrice: 'unitPrice',
    totalPrice: 'totalPrice',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type EventItemScalarFieldEnum = (typeof EventItemScalarFieldEnum)[keyof typeof EventItemScalarFieldEnum]


  export const EventItemOptionScalarFieldEnum: {
    id: 'id',
    eventItemId: 'eventItemId',
    optionId: 'optionId',
    optionName: 'optionName',
    value: 'value',
    label: 'label',
    priceAdjustment: 'priceAdjustment',
    createdAt: 'createdAt'
  };

  export type EventItemOptionScalarFieldEnum = (typeof EventItemOptionScalarFieldEnum)[keyof typeof EventItemOptionScalarFieldEnum]


  export const EventStatusHistoryScalarFieldEnum: {
    id: 'id',
    eventId: 'eventId',
    fromStatus: 'fromStatus',
    toStatus: 'toStatus',
    fromStage: 'fromStage',
    toStage: 'toStage',
    notes: 'notes',
    changedBy: 'changedBy',
    changedAt: 'changedAt'
  };

  export type EventStatusHistoryScalarFieldEnum = (typeof EventStatusHistoryScalarFieldEnum)[keyof typeof EventStatusHistoryScalarFieldEnum]


  export const OrderItemScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    productId: 'productId',
    quantity: 'quantity',
    unitPrice: 'unitPrice',
    totalPrice: 'totalPrice',
    notes: 'notes',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type OrderItemScalarFieldEnum = (typeof OrderItemScalarFieldEnum)[keyof typeof OrderItemScalarFieldEnum]


  export const OrderItemOptionScalarFieldEnum: {
    id: 'id',
    orderItemId: 'orderItemId',
    optionId: 'optionId',
    optionName: 'optionName',
    value: 'value',
    label: 'label',
    priceAdjustment: 'priceAdjustment',
    createdAt: 'createdAt'
  };

  export type OrderItemOptionScalarFieldEnum = (typeof OrderItemOptionScalarFieldEnum)[keyof typeof OrderItemOptionScalarFieldEnum]


  export const OrderStatusHistoryScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    fromStatus: 'fromStatus',
    toStatus: 'toStatus',
    fromStage: 'fromStage',
    toStage: 'toStage',
    notes: 'notes',
    changedBy: 'changedBy',
    changedAt: 'changedAt'
  };

  export type OrderStatusHistoryScalarFieldEnum = (typeof OrderStatusHistoryScalarFieldEnum)[keyof typeof OrderStatusHistoryScalarFieldEnum]


  export const ProductOptionScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    name: 'name',
    type: 'type',
    required: 'required',
    sortOrder: 'sortOrder',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProductOptionScalarFieldEnum = (typeof ProductOptionScalarFieldEnum)[keyof typeof ProductOptionScalarFieldEnum]


  export const ProductOptionValueScalarFieldEnum: {
    id: 'id',
    optionId: 'optionId',
    value: 'value',
    label: 'label',
    priceAdjustment: 'priceAdjustment',
    sortOrder: 'sortOrder',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProductOptionValueScalarFieldEnum = (typeof ProductOptionValueScalarFieldEnum)[keyof typeof ProductOptionValueScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    email: 'email',
    firstName: 'firstName',
    lastName: 'lastName',
    password: 'password',
    role: 'role',
    department: 'department',
    active: 'active',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const Task_dependenciesScalarFieldEnum: {
    id: 'id',
    taskId: 'taskId',
    dependsOnTaskId: 'dependsOnTaskId',
    createdAt: 'createdAt'
  };

  export type Task_dependenciesScalarFieldEnum = (typeof Task_dependenciesScalarFieldEnum)[keyof typeof Task_dependenciesScalarFieldEnum]


  export const Task_templatesScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    name: 'name',
    description: 'description',
    estimatedDuration: 'estimatedDuration',
    leadTimeHours: 'leadTimeHours',
    sequenceOrder: 'sequenceOrder',
    requiredRole: 'requiredRole',
    triggerCondition: 'triggerCondition',
    isMandatory: 'isMandatory',
    requiresCompletionBeforeNext: 'requiresCompletionBeforeNext',
    autoAssignToRole: 'autoAssignToRole',
    notes: 'notes',
    isActive: 'isActive',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    category: 'category'
  };

  export type Task_templatesScalarFieldEnum = (typeof Task_templatesScalarFieldEnum)[keyof typeof Task_templatesScalarFieldEnum]


  export const TasksScalarFieldEnum: {
    id: 'id',
    templateId: 'templateId',
    eventId: 'eventId',
    orderId: 'orderId',
    productId: 'productId',
    assignedUserId: 'assignedUserId',
    name: 'name',
    description: 'description',
    category: 'category',
    status: 'status',
    priority: 'priority',
    dueDate: 'dueDate',
    startTime: 'startTime',
    endTime: 'endTime',
    estimatedDuration: 'estimatedDuration',
    actualDuration: 'actualDuration',
    actualStartTime: 'actualStartTime',
    actualEndTime: 'actualEndTime',
    completionNotes: 'completionNotes',
    requiresCustomerApproval: 'requiresCustomerApproval',
    customerApprovedAt: 'customerApprovedAt',
    blockedReason: 'blockedReason',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type TasksScalarFieldEnum = (typeof TasksScalarFieldEnum)[keyof typeof TasksScalarFieldEnum]


  export const User_rolesScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    role: 'role',
    department: 'department',
    isPrimary: 'isPrimary',
    createdAt: 'createdAt'
  };

  export type User_rolesScalarFieldEnum = (typeof User_rolesScalarFieldEnum)[keyof typeof User_rolesScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'TaskTriggerCondition'
   */
  export type EnumTaskTriggerConditionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TaskTriggerCondition'>
    


  /**
   * Reference to a field of type 'TaskTriggerCondition[]'
   */
  export type ListEnumTaskTriggerConditionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TaskTriggerCondition[]'>
    


  /**
   * Reference to a field of type 'TaskStatus'
   */
  export type EnumTaskStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TaskStatus'>
    


  /**
   * Reference to a field of type 'TaskStatus[]'
   */
  export type ListEnumTaskStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TaskStatus[]'>
    


  /**
   * Reference to a field of type 'TaskPriority'
   */
  export type EnumTaskPriorityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TaskPriority'>
    


  /**
   * Reference to a field of type 'TaskPriority[]'
   */
  export type ListEnumTaskPriorityFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'TaskPriority[]'>
    
  /**
   * Deep Input Types
   */


  export type AccountWhereInput = {
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    id?: StringFilter<"Account"> | string
    email?: StringFilter<"Account"> | string
    firstName?: StringFilter<"Account"> | string
    lastName?: StringFilter<"Account"> | string
    password?: StringFilter<"Account"> | string
    role?: StringFilter<"Account"> | string
    accessLevel?: StringFilter<"Account"> | string
    active?: BoolFilter<"Account"> | boolean
    createdAt?: DateTimeFilter<"Account"> | Date | string
    updatedAt?: DateTimeFilter<"Account"> | Date | string
  }

  export type AccountOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    password?: SortOrder
    role?: SortOrder
    accessLevel?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AccountWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: AccountWhereInput | AccountWhereInput[]
    OR?: AccountWhereInput[]
    NOT?: AccountWhereInput | AccountWhereInput[]
    firstName?: StringFilter<"Account"> | string
    lastName?: StringFilter<"Account"> | string
    password?: StringFilter<"Account"> | string
    role?: StringFilter<"Account"> | string
    accessLevel?: StringFilter<"Account"> | string
    active?: BoolFilter<"Account"> | boolean
    createdAt?: DateTimeFilter<"Account"> | Date | string
    updatedAt?: DateTimeFilter<"Account"> | Date | string
  }, "id" | "email">

  export type AccountOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    password?: SortOrder
    role?: SortOrder
    accessLevel?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: AccountCountOrderByAggregateInput
    _max?: AccountMaxOrderByAggregateInput
    _min?: AccountMinOrderByAggregateInput
  }

  export type AccountScalarWhereWithAggregatesInput = {
    AND?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    OR?: AccountScalarWhereWithAggregatesInput[]
    NOT?: AccountScalarWhereWithAggregatesInput | AccountScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Account"> | string
    email?: StringWithAggregatesFilter<"Account"> | string
    firstName?: StringWithAggregatesFilter<"Account"> | string
    lastName?: StringWithAggregatesFilter<"Account"> | string
    password?: StringWithAggregatesFilter<"Account"> | string
    role?: StringWithAggregatesFilter<"Account"> | string
    accessLevel?: StringWithAggregatesFilter<"Account"> | string
    active?: BoolWithAggregatesFilter<"Account"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"Account"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Account"> | Date | string
  }

  export type CustomerWhereInput = {
    AND?: CustomerWhereInput | CustomerWhereInput[]
    OR?: CustomerWhereInput[]
    NOT?: CustomerWhereInput | CustomerWhereInput[]
    id?: StringFilter<"Customer"> | string
    email?: StringFilter<"Customer"> | string
    firstName?: StringFilter<"Customer"> | string
    lastName?: StringFilter<"Customer"> | string
    phone?: StringNullableFilter<"Customer"> | string | null
    createdAt?: DateTimeFilter<"Customer"> | Date | string
    updatedAt?: DateTimeFilter<"Customer"> | Date | string
    Event?: EventListRelationFilter
    Order?: OrderListRelationFilter
  }

  export type CustomerOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Event?: EventOrderByRelationAggregateInput
    Order?: OrderOrderByRelationAggregateInput
  }

  export type CustomerWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: CustomerWhereInput | CustomerWhereInput[]
    OR?: CustomerWhereInput[]
    NOT?: CustomerWhereInput | CustomerWhereInput[]
    firstName?: StringFilter<"Customer"> | string
    lastName?: StringFilter<"Customer"> | string
    phone?: StringNullableFilter<"Customer"> | string | null
    createdAt?: DateTimeFilter<"Customer"> | Date | string
    updatedAt?: DateTimeFilter<"Customer"> | Date | string
    Event?: EventListRelationFilter
    Order?: OrderListRelationFilter
  }, "id" | "email">

  export type CustomerOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: CustomerCountOrderByAggregateInput
    _max?: CustomerMaxOrderByAggregateInput
    _min?: CustomerMinOrderByAggregateInput
  }

  export type CustomerScalarWhereWithAggregatesInput = {
    AND?: CustomerScalarWhereWithAggregatesInput | CustomerScalarWhereWithAggregatesInput[]
    OR?: CustomerScalarWhereWithAggregatesInput[]
    NOT?: CustomerScalarWhereWithAggregatesInput | CustomerScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Customer"> | string
    email?: StringWithAggregatesFilter<"Customer"> | string
    firstName?: StringWithAggregatesFilter<"Customer"> | string
    lastName?: StringWithAggregatesFilter<"Customer"> | string
    phone?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Customer"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Customer"> | Date | string
  }

  export type EventWhereInput = {
    AND?: EventWhereInput | EventWhereInput[]
    OR?: EventWhereInput[]
    NOT?: EventWhereInput | EventWhereInput[]
    id?: StringFilter<"Event"> | string
    title?: StringFilter<"Event"> | string
    description?: StringNullableFilter<"Event"> | string | null
    location?: StringFilter<"Event"> | string
    startDate?: DateTimeFilter<"Event"> | Date | string
    endDate?: DateTimeNullableFilter<"Event"> | Date | string | null
    customerId?: StringNullableFilter<"Event"> | string | null
    status?: StringFilter<"Event"> | string
    staffNotes?: StringNullableFilter<"Event"> | string | null
    assignedStaffId?: StringNullableFilter<"Event"> | string | null
    createdAt?: DateTimeFilter<"Event"> | Date | string
    updatedAt?: DateTimeFilter<"Event"> | Date | string
    customerNotes?: StringNullableFilter<"Event"> | string | null
    depositAmount?: FloatNullableFilter<"Event"> | number | null
    depositPaid?: BoolFilter<"Event"> | boolean
    endTime?: StringNullableFilter<"Event"> | string | null
    finalPaymentPaid?: BoolFilter<"Event"> | boolean
    reviewedAt?: DateTimeNullableFilter<"Event"> | Date | string | null
    reviewedBy?: StringNullableFilter<"Event"> | string | null
    stage?: StringFilter<"Event"> | string
    startTime?: StringFilter<"Event"> | string
    totalAmount?: FloatNullableFilter<"Event"> | number | null
    Customer?: XOR<CustomerNullableScalarRelationFilter, CustomerWhereInput> | null
    EventItem?: EventItemListRelationFilter
    EventStatusHistory?: EventStatusHistoryListRelationFilter
    tasks?: TasksListRelationFilter
  }

  export type EventOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    location?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrderInput | SortOrder
    customerId?: SortOrderInput | SortOrder
    status?: SortOrder
    staffNotes?: SortOrderInput | SortOrder
    assignedStaffId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    customerNotes?: SortOrderInput | SortOrder
    depositAmount?: SortOrderInput | SortOrder
    depositPaid?: SortOrder
    endTime?: SortOrderInput | SortOrder
    finalPaymentPaid?: SortOrder
    reviewedAt?: SortOrderInput | SortOrder
    reviewedBy?: SortOrderInput | SortOrder
    stage?: SortOrder
    startTime?: SortOrder
    totalAmount?: SortOrderInput | SortOrder
    Customer?: CustomerOrderByWithRelationInput
    EventItem?: EventItemOrderByRelationAggregateInput
    EventStatusHistory?: EventStatusHistoryOrderByRelationAggregateInput
    tasks?: tasksOrderByRelationAggregateInput
  }

  export type EventWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: EventWhereInput | EventWhereInput[]
    OR?: EventWhereInput[]
    NOT?: EventWhereInput | EventWhereInput[]
    title?: StringFilter<"Event"> | string
    description?: StringNullableFilter<"Event"> | string | null
    location?: StringFilter<"Event"> | string
    startDate?: DateTimeFilter<"Event"> | Date | string
    endDate?: DateTimeNullableFilter<"Event"> | Date | string | null
    customerId?: StringNullableFilter<"Event"> | string | null
    status?: StringFilter<"Event"> | string
    staffNotes?: StringNullableFilter<"Event"> | string | null
    assignedStaffId?: StringNullableFilter<"Event"> | string | null
    createdAt?: DateTimeFilter<"Event"> | Date | string
    updatedAt?: DateTimeFilter<"Event"> | Date | string
    customerNotes?: StringNullableFilter<"Event"> | string | null
    depositAmount?: FloatNullableFilter<"Event"> | number | null
    depositPaid?: BoolFilter<"Event"> | boolean
    endTime?: StringNullableFilter<"Event"> | string | null
    finalPaymentPaid?: BoolFilter<"Event"> | boolean
    reviewedAt?: DateTimeNullableFilter<"Event"> | Date | string | null
    reviewedBy?: StringNullableFilter<"Event"> | string | null
    stage?: StringFilter<"Event"> | string
    startTime?: StringFilter<"Event"> | string
    totalAmount?: FloatNullableFilter<"Event"> | number | null
    Customer?: XOR<CustomerNullableScalarRelationFilter, CustomerWhereInput> | null
    EventItem?: EventItemListRelationFilter
    EventStatusHistory?: EventStatusHistoryListRelationFilter
    tasks?: TasksListRelationFilter
  }, "id">

  export type EventOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrderInput | SortOrder
    location?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrderInput | SortOrder
    customerId?: SortOrderInput | SortOrder
    status?: SortOrder
    staffNotes?: SortOrderInput | SortOrder
    assignedStaffId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    customerNotes?: SortOrderInput | SortOrder
    depositAmount?: SortOrderInput | SortOrder
    depositPaid?: SortOrder
    endTime?: SortOrderInput | SortOrder
    finalPaymentPaid?: SortOrder
    reviewedAt?: SortOrderInput | SortOrder
    reviewedBy?: SortOrderInput | SortOrder
    stage?: SortOrder
    startTime?: SortOrder
    totalAmount?: SortOrderInput | SortOrder
    _count?: EventCountOrderByAggregateInput
    _avg?: EventAvgOrderByAggregateInput
    _max?: EventMaxOrderByAggregateInput
    _min?: EventMinOrderByAggregateInput
    _sum?: EventSumOrderByAggregateInput
  }

  export type EventScalarWhereWithAggregatesInput = {
    AND?: EventScalarWhereWithAggregatesInput | EventScalarWhereWithAggregatesInput[]
    OR?: EventScalarWhereWithAggregatesInput[]
    NOT?: EventScalarWhereWithAggregatesInput | EventScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Event"> | string
    title?: StringWithAggregatesFilter<"Event"> | string
    description?: StringNullableWithAggregatesFilter<"Event"> | string | null
    location?: StringWithAggregatesFilter<"Event"> | string
    startDate?: DateTimeWithAggregatesFilter<"Event"> | Date | string
    endDate?: DateTimeNullableWithAggregatesFilter<"Event"> | Date | string | null
    customerId?: StringNullableWithAggregatesFilter<"Event"> | string | null
    status?: StringWithAggregatesFilter<"Event"> | string
    staffNotes?: StringNullableWithAggregatesFilter<"Event"> | string | null
    assignedStaffId?: StringNullableWithAggregatesFilter<"Event"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Event"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Event"> | Date | string
    customerNotes?: StringNullableWithAggregatesFilter<"Event"> | string | null
    depositAmount?: FloatNullableWithAggregatesFilter<"Event"> | number | null
    depositPaid?: BoolWithAggregatesFilter<"Event"> | boolean
    endTime?: StringNullableWithAggregatesFilter<"Event"> | string | null
    finalPaymentPaid?: BoolWithAggregatesFilter<"Event"> | boolean
    reviewedAt?: DateTimeNullableWithAggregatesFilter<"Event"> | Date | string | null
    reviewedBy?: StringNullableWithAggregatesFilter<"Event"> | string | null
    stage?: StringWithAggregatesFilter<"Event"> | string
    startTime?: StringWithAggregatesFilter<"Event"> | string
    totalAmount?: FloatNullableWithAggregatesFilter<"Event"> | number | null
  }

  export type HeroSettingWhereInput = {
    AND?: HeroSettingWhereInput | HeroSettingWhereInput[]
    OR?: HeroSettingWhereInput[]
    NOT?: HeroSettingWhereInput | HeroSettingWhereInput[]
    id?: StringFilter<"HeroSetting"> | string
    imageUrl?: StringFilter<"HeroSetting"> | string
    title?: StringFilter<"HeroSetting"> | string
    description?: StringFilter<"HeroSetting"> | string
    buttonText?: StringFilter<"HeroSetting"> | string
    buttonLink?: StringFilter<"HeroSetting"> | string
    textPosition?: StringFilter<"HeroSetting"> | string
    active?: BoolFilter<"HeroSetting"> | boolean
    createdAt?: DateTimeFilter<"HeroSetting"> | Date | string
    updatedAt?: DateTimeFilter<"HeroSetting"> | Date | string
  }

  export type HeroSettingOrderByWithRelationInput = {
    id?: SortOrder
    imageUrl?: SortOrder
    title?: SortOrder
    description?: SortOrder
    buttonText?: SortOrder
    buttonLink?: SortOrder
    textPosition?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HeroSettingWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: HeroSettingWhereInput | HeroSettingWhereInput[]
    OR?: HeroSettingWhereInput[]
    NOT?: HeroSettingWhereInput | HeroSettingWhereInput[]
    imageUrl?: StringFilter<"HeroSetting"> | string
    title?: StringFilter<"HeroSetting"> | string
    description?: StringFilter<"HeroSetting"> | string
    buttonText?: StringFilter<"HeroSetting"> | string
    buttonLink?: StringFilter<"HeroSetting"> | string
    textPosition?: StringFilter<"HeroSetting"> | string
    active?: BoolFilter<"HeroSetting"> | boolean
    createdAt?: DateTimeFilter<"HeroSetting"> | Date | string
    updatedAt?: DateTimeFilter<"HeroSetting"> | Date | string
  }, "id">

  export type HeroSettingOrderByWithAggregationInput = {
    id?: SortOrder
    imageUrl?: SortOrder
    title?: SortOrder
    description?: SortOrder
    buttonText?: SortOrder
    buttonLink?: SortOrder
    textPosition?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: HeroSettingCountOrderByAggregateInput
    _max?: HeroSettingMaxOrderByAggregateInput
    _min?: HeroSettingMinOrderByAggregateInput
  }

  export type HeroSettingScalarWhereWithAggregatesInput = {
    AND?: HeroSettingScalarWhereWithAggregatesInput | HeroSettingScalarWhereWithAggregatesInput[]
    OR?: HeroSettingScalarWhereWithAggregatesInput[]
    NOT?: HeroSettingScalarWhereWithAggregatesInput | HeroSettingScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"HeroSetting"> | string
    imageUrl?: StringWithAggregatesFilter<"HeroSetting"> | string
    title?: StringWithAggregatesFilter<"HeroSetting"> | string
    description?: StringWithAggregatesFilter<"HeroSetting"> | string
    buttonText?: StringWithAggregatesFilter<"HeroSetting"> | string
    buttonLink?: StringWithAggregatesFilter<"HeroSetting"> | string
    textPosition?: StringWithAggregatesFilter<"HeroSetting"> | string
    active?: BoolWithAggregatesFilter<"HeroSetting"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"HeroSetting"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"HeroSetting"> | Date | string
  }

  export type OrderWhereInput = {
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    id?: StringFilter<"Order"> | string
    customerId?: StringFilter<"Order"> | string
    totalAmount?: FloatFilter<"Order"> | number
    status?: StringFilter<"Order"> | string
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    assignedStaffId?: StringNullableFilter<"Order"> | string | null
    billingAddress?: JsonNullableFilter<"Order">
    customerNotes?: StringNullableFilter<"Order"> | string | null
    deliveredAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    discountAmount?: FloatNullableFilter<"Order"> | number | null
    finalAmount?: FloatFilter<"Order"> | number
    orderNumber?: StringFilter<"Order"> | string
    paymentStatus?: StringFilter<"Order"> | string
    reviewedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    reviewedBy?: StringNullableFilter<"Order"> | string | null
    shippedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    shippingAddress?: JsonNullableFilter<"Order">
    shippingAmount?: FloatNullableFilter<"Order"> | number | null
    staffNotes?: StringNullableFilter<"Order"> | string | null
    stage?: StringFilter<"Order"> | string
    taxAmount?: FloatNullableFilter<"Order"> | number | null
    Customer?: XOR<CustomerScalarRelationFilter, CustomerWhereInput>
    OrderItem?: OrderItemListRelationFilter
    OrderStatusHistory?: OrderStatusHistoryListRelationFilter
    tasks?: TasksListRelationFilter
  }

  export type OrderOrderByWithRelationInput = {
    id?: SortOrder
    customerId?: SortOrder
    totalAmount?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    assignedStaffId?: SortOrderInput | SortOrder
    billingAddress?: SortOrderInput | SortOrder
    customerNotes?: SortOrderInput | SortOrder
    deliveredAt?: SortOrderInput | SortOrder
    discountAmount?: SortOrderInput | SortOrder
    finalAmount?: SortOrder
    orderNumber?: SortOrder
    paymentStatus?: SortOrder
    reviewedAt?: SortOrderInput | SortOrder
    reviewedBy?: SortOrderInput | SortOrder
    shippedAt?: SortOrderInput | SortOrder
    shippingAddress?: SortOrderInput | SortOrder
    shippingAmount?: SortOrderInput | SortOrder
    staffNotes?: SortOrderInput | SortOrder
    stage?: SortOrder
    taxAmount?: SortOrderInput | SortOrder
    Customer?: CustomerOrderByWithRelationInput
    OrderItem?: OrderItemOrderByRelationAggregateInput
    OrderStatusHistory?: OrderStatusHistoryOrderByRelationAggregateInput
    tasks?: tasksOrderByRelationAggregateInput
  }

  export type OrderWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    orderNumber?: string
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    customerId?: StringFilter<"Order"> | string
    totalAmount?: FloatFilter<"Order"> | number
    status?: StringFilter<"Order"> | string
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    assignedStaffId?: StringNullableFilter<"Order"> | string | null
    billingAddress?: JsonNullableFilter<"Order">
    customerNotes?: StringNullableFilter<"Order"> | string | null
    deliveredAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    discountAmount?: FloatNullableFilter<"Order"> | number | null
    finalAmount?: FloatFilter<"Order"> | number
    paymentStatus?: StringFilter<"Order"> | string
    reviewedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    reviewedBy?: StringNullableFilter<"Order"> | string | null
    shippedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    shippingAddress?: JsonNullableFilter<"Order">
    shippingAmount?: FloatNullableFilter<"Order"> | number | null
    staffNotes?: StringNullableFilter<"Order"> | string | null
    stage?: StringFilter<"Order"> | string
    taxAmount?: FloatNullableFilter<"Order"> | number | null
    Customer?: XOR<CustomerScalarRelationFilter, CustomerWhereInput>
    OrderItem?: OrderItemListRelationFilter
    OrderStatusHistory?: OrderStatusHistoryListRelationFilter
    tasks?: TasksListRelationFilter
  }, "id" | "orderNumber">

  export type OrderOrderByWithAggregationInput = {
    id?: SortOrder
    customerId?: SortOrder
    totalAmount?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    assignedStaffId?: SortOrderInput | SortOrder
    billingAddress?: SortOrderInput | SortOrder
    customerNotes?: SortOrderInput | SortOrder
    deliveredAt?: SortOrderInput | SortOrder
    discountAmount?: SortOrderInput | SortOrder
    finalAmount?: SortOrder
    orderNumber?: SortOrder
    paymentStatus?: SortOrder
    reviewedAt?: SortOrderInput | SortOrder
    reviewedBy?: SortOrderInput | SortOrder
    shippedAt?: SortOrderInput | SortOrder
    shippingAddress?: SortOrderInput | SortOrder
    shippingAmount?: SortOrderInput | SortOrder
    staffNotes?: SortOrderInput | SortOrder
    stage?: SortOrder
    taxAmount?: SortOrderInput | SortOrder
    _count?: OrderCountOrderByAggregateInput
    _avg?: OrderAvgOrderByAggregateInput
    _max?: OrderMaxOrderByAggregateInput
    _min?: OrderMinOrderByAggregateInput
    _sum?: OrderSumOrderByAggregateInput
  }

  export type OrderScalarWhereWithAggregatesInput = {
    AND?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    OR?: OrderScalarWhereWithAggregatesInput[]
    NOT?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Order"> | string
    customerId?: StringWithAggregatesFilter<"Order"> | string
    totalAmount?: FloatWithAggregatesFilter<"Order"> | number
    status?: StringWithAggregatesFilter<"Order"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    assignedStaffId?: StringNullableWithAggregatesFilter<"Order"> | string | null
    billingAddress?: JsonNullableWithAggregatesFilter<"Order">
    customerNotes?: StringNullableWithAggregatesFilter<"Order"> | string | null
    deliveredAt?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    discountAmount?: FloatNullableWithAggregatesFilter<"Order"> | number | null
    finalAmount?: FloatWithAggregatesFilter<"Order"> | number
    orderNumber?: StringWithAggregatesFilter<"Order"> | string
    paymentStatus?: StringWithAggregatesFilter<"Order"> | string
    reviewedAt?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    reviewedBy?: StringNullableWithAggregatesFilter<"Order"> | string | null
    shippedAt?: DateTimeNullableWithAggregatesFilter<"Order"> | Date | string | null
    shippingAddress?: JsonNullableWithAggregatesFilter<"Order">
    shippingAmount?: FloatNullableWithAggregatesFilter<"Order"> | number | null
    staffNotes?: StringNullableWithAggregatesFilter<"Order"> | string | null
    stage?: StringWithAggregatesFilter<"Order"> | string
    taxAmount?: FloatNullableWithAggregatesFilter<"Order"> | number | null
  }

  export type ProductWhereInput = {
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    id?: StringFilter<"Product"> | string
    name?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    price?: FloatFilter<"Product"> | number
    imageUrl?: StringNullableFilter<"Product"> | string | null
    active?: BoolFilter<"Product"> | boolean
    categoryId?: StringNullableFilter<"Product"> | string | null
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    canBuy?: BoolFilter<"Product"> | boolean
    canHire?: BoolFilter<"Product"> | boolean
    hasRangePrice?: BoolFilter<"Product"> | boolean
    hasUnitPrice?: BoolFilter<"Product"> | boolean
    maxPrice?: FloatNullableFilter<"Product"> | number | null
    minPrice?: FloatNullableFilter<"Product"> | number | null
    minQuantity?: IntNullableFilter<"Product"> | number | null
    unitPrice?: FloatNullableFilter<"Product"> | number | null
    unitType?: StringNullableFilter<"Product"> | string | null
    EventItem?: EventItemListRelationFilter
    OrderItem?: OrderItemListRelationFilter
    ProductCategory?: XOR<ProductCategoryNullableScalarRelationFilter, ProductCategoryWhereInput> | null
    ProductOption?: ProductOptionListRelationFilter
    task_templates?: Task_templatesListRelationFilter
    tasks?: TasksListRelationFilter
  }

  export type ProductOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    price?: SortOrder
    imageUrl?: SortOrderInput | SortOrder
    active?: SortOrder
    categoryId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    canBuy?: SortOrder
    canHire?: SortOrder
    hasRangePrice?: SortOrder
    hasUnitPrice?: SortOrder
    maxPrice?: SortOrderInput | SortOrder
    minPrice?: SortOrderInput | SortOrder
    minQuantity?: SortOrderInput | SortOrder
    unitPrice?: SortOrderInput | SortOrder
    unitType?: SortOrderInput | SortOrder
    EventItem?: EventItemOrderByRelationAggregateInput
    OrderItem?: OrderItemOrderByRelationAggregateInput
    ProductCategory?: ProductCategoryOrderByWithRelationInput
    ProductOption?: ProductOptionOrderByRelationAggregateInput
    task_templates?: task_templatesOrderByRelationAggregateInput
    tasks?: tasksOrderByRelationAggregateInput
  }

  export type ProductWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    name?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    price?: FloatFilter<"Product"> | number
    imageUrl?: StringNullableFilter<"Product"> | string | null
    active?: BoolFilter<"Product"> | boolean
    categoryId?: StringNullableFilter<"Product"> | string | null
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    canBuy?: BoolFilter<"Product"> | boolean
    canHire?: BoolFilter<"Product"> | boolean
    hasRangePrice?: BoolFilter<"Product"> | boolean
    hasUnitPrice?: BoolFilter<"Product"> | boolean
    maxPrice?: FloatNullableFilter<"Product"> | number | null
    minPrice?: FloatNullableFilter<"Product"> | number | null
    minQuantity?: IntNullableFilter<"Product"> | number | null
    unitPrice?: FloatNullableFilter<"Product"> | number | null
    unitType?: StringNullableFilter<"Product"> | string | null
    EventItem?: EventItemListRelationFilter
    OrderItem?: OrderItemListRelationFilter
    ProductCategory?: XOR<ProductCategoryNullableScalarRelationFilter, ProductCategoryWhereInput> | null
    ProductOption?: ProductOptionListRelationFilter
    task_templates?: Task_templatesListRelationFilter
    tasks?: TasksListRelationFilter
  }, "id">

  export type ProductOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    price?: SortOrder
    imageUrl?: SortOrderInput | SortOrder
    active?: SortOrder
    categoryId?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    canBuy?: SortOrder
    canHire?: SortOrder
    hasRangePrice?: SortOrder
    hasUnitPrice?: SortOrder
    maxPrice?: SortOrderInput | SortOrder
    minPrice?: SortOrderInput | SortOrder
    minQuantity?: SortOrderInput | SortOrder
    unitPrice?: SortOrderInput | SortOrder
    unitType?: SortOrderInput | SortOrder
    _count?: ProductCountOrderByAggregateInput
    _avg?: ProductAvgOrderByAggregateInput
    _max?: ProductMaxOrderByAggregateInput
    _min?: ProductMinOrderByAggregateInput
    _sum?: ProductSumOrderByAggregateInput
  }

  export type ProductScalarWhereWithAggregatesInput = {
    AND?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    OR?: ProductScalarWhereWithAggregatesInput[]
    NOT?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Product"> | string
    name?: StringWithAggregatesFilter<"Product"> | string
    description?: StringNullableWithAggregatesFilter<"Product"> | string | null
    price?: FloatWithAggregatesFilter<"Product"> | number
    imageUrl?: StringNullableWithAggregatesFilter<"Product"> | string | null
    active?: BoolWithAggregatesFilter<"Product"> | boolean
    categoryId?: StringNullableWithAggregatesFilter<"Product"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    canBuy?: BoolWithAggregatesFilter<"Product"> | boolean
    canHire?: BoolWithAggregatesFilter<"Product"> | boolean
    hasRangePrice?: BoolWithAggregatesFilter<"Product"> | boolean
    hasUnitPrice?: BoolWithAggregatesFilter<"Product"> | boolean
    maxPrice?: FloatNullableWithAggregatesFilter<"Product"> | number | null
    minPrice?: FloatNullableWithAggregatesFilter<"Product"> | number | null
    minQuantity?: IntNullableWithAggregatesFilter<"Product"> | number | null
    unitPrice?: FloatNullableWithAggregatesFilter<"Product"> | number | null
    unitType?: StringNullableWithAggregatesFilter<"Product"> | string | null
  }

  export type StaffInvitationWhereInput = {
    AND?: StaffInvitationWhereInput | StaffInvitationWhereInput[]
    OR?: StaffInvitationWhereInput[]
    NOT?: StaffInvitationWhereInput | StaffInvitationWhereInput[]
    id?: StringFilter<"StaffInvitation"> | string
    email?: StringFilter<"StaffInvitation"> | string
    firstName?: StringFilter<"StaffInvitation"> | string
    lastName?: StringFilter<"StaffInvitation"> | string
    role?: StringFilter<"StaffInvitation"> | string
    accessLevel?: StringFilter<"StaffInvitation"> | string
    token?: StringFilter<"StaffInvitation"> | string
    used?: BoolFilter<"StaffInvitation"> | boolean
    usedAt?: DateTimeNullableFilter<"StaffInvitation"> | Date | string | null
    createdAt?: DateTimeFilter<"StaffInvitation"> | Date | string
    expiresAt?: DateTimeFilter<"StaffInvitation"> | Date | string
  }

  export type StaffInvitationOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    role?: SortOrder
    accessLevel?: SortOrder
    token?: SortOrder
    used?: SortOrder
    usedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
  }

  export type StaffInvitationWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    token?: string
    AND?: StaffInvitationWhereInput | StaffInvitationWhereInput[]
    OR?: StaffInvitationWhereInput[]
    NOT?: StaffInvitationWhereInput | StaffInvitationWhereInput[]
    email?: StringFilter<"StaffInvitation"> | string
    firstName?: StringFilter<"StaffInvitation"> | string
    lastName?: StringFilter<"StaffInvitation"> | string
    role?: StringFilter<"StaffInvitation"> | string
    accessLevel?: StringFilter<"StaffInvitation"> | string
    used?: BoolFilter<"StaffInvitation"> | boolean
    usedAt?: DateTimeNullableFilter<"StaffInvitation"> | Date | string | null
    createdAt?: DateTimeFilter<"StaffInvitation"> | Date | string
    expiresAt?: DateTimeFilter<"StaffInvitation"> | Date | string
  }, "id" | "token">

  export type StaffInvitationOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    role?: SortOrder
    accessLevel?: SortOrder
    token?: SortOrder
    used?: SortOrder
    usedAt?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
    _count?: StaffInvitationCountOrderByAggregateInput
    _max?: StaffInvitationMaxOrderByAggregateInput
    _min?: StaffInvitationMinOrderByAggregateInput
  }

  export type StaffInvitationScalarWhereWithAggregatesInput = {
    AND?: StaffInvitationScalarWhereWithAggregatesInput | StaffInvitationScalarWhereWithAggregatesInput[]
    OR?: StaffInvitationScalarWhereWithAggregatesInput[]
    NOT?: StaffInvitationScalarWhereWithAggregatesInput | StaffInvitationScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"StaffInvitation"> | string
    email?: StringWithAggregatesFilter<"StaffInvitation"> | string
    firstName?: StringWithAggregatesFilter<"StaffInvitation"> | string
    lastName?: StringWithAggregatesFilter<"StaffInvitation"> | string
    role?: StringWithAggregatesFilter<"StaffInvitation"> | string
    accessLevel?: StringWithAggregatesFilter<"StaffInvitation"> | string
    token?: StringWithAggregatesFilter<"StaffInvitation"> | string
    used?: BoolWithAggregatesFilter<"StaffInvitation"> | boolean
    usedAt?: DateTimeNullableWithAggregatesFilter<"StaffInvitation"> | Date | string | null
    createdAt?: DateTimeWithAggregatesFilter<"StaffInvitation"> | Date | string
    expiresAt?: DateTimeWithAggregatesFilter<"StaffInvitation"> | Date | string
  }

  export type ProductCategoryWhereInput = {
    AND?: ProductCategoryWhereInput | ProductCategoryWhereInput[]
    OR?: ProductCategoryWhereInput[]
    NOT?: ProductCategoryWhereInput | ProductCategoryWhereInput[]
    id?: StringFilter<"ProductCategory"> | string
    name?: StringFilter<"ProductCategory"> | string
    description?: StringNullableFilter<"ProductCategory"> | string | null
    active?: BoolFilter<"ProductCategory"> | boolean
    createdAt?: DateTimeFilter<"ProductCategory"> | Date | string
    updatedAt?: DateTimeFilter<"ProductCategory"> | Date | string
    Product?: ProductListRelationFilter
  }

  export type ProductCategoryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Product?: ProductOrderByRelationAggregateInput
  }

  export type ProductCategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductCategoryWhereInput | ProductCategoryWhereInput[]
    OR?: ProductCategoryWhereInput[]
    NOT?: ProductCategoryWhereInput | ProductCategoryWhereInput[]
    name?: StringFilter<"ProductCategory"> | string
    description?: StringNullableFilter<"ProductCategory"> | string | null
    active?: BoolFilter<"ProductCategory"> | boolean
    createdAt?: DateTimeFilter<"ProductCategory"> | Date | string
    updatedAt?: DateTimeFilter<"ProductCategory"> | Date | string
    Product?: ProductListRelationFilter
  }, "id">

  export type ProductCategoryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProductCategoryCountOrderByAggregateInput
    _max?: ProductCategoryMaxOrderByAggregateInput
    _min?: ProductCategoryMinOrderByAggregateInput
  }

  export type ProductCategoryScalarWhereWithAggregatesInput = {
    AND?: ProductCategoryScalarWhereWithAggregatesInput | ProductCategoryScalarWhereWithAggregatesInput[]
    OR?: ProductCategoryScalarWhereWithAggregatesInput[]
    NOT?: ProductCategoryScalarWhereWithAggregatesInput | ProductCategoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductCategory"> | string
    name?: StringWithAggregatesFilter<"ProductCategory"> | string
    description?: StringNullableWithAggregatesFilter<"ProductCategory"> | string | null
    active?: BoolWithAggregatesFilter<"ProductCategory"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"ProductCategory"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProductCategory"> | Date | string
  }

  export type EventItemWhereInput = {
    AND?: EventItemWhereInput | EventItemWhereInput[]
    OR?: EventItemWhereInput[]
    NOT?: EventItemWhereInput | EventItemWhereInput[]
    id?: StringFilter<"EventItem"> | string
    eventId?: StringFilter<"EventItem"> | string
    productId?: StringFilter<"EventItem"> | string
    quantity?: IntFilter<"EventItem"> | number
    unitPrice?: FloatNullableFilter<"EventItem"> | number | null
    totalPrice?: FloatNullableFilter<"EventItem"> | number | null
    notes?: StringNullableFilter<"EventItem"> | string | null
    createdAt?: DateTimeFilter<"EventItem"> | Date | string
    updatedAt?: DateTimeFilter<"EventItem"> | Date | string
    Event?: XOR<EventScalarRelationFilter, EventWhereInput>
    Product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    EventItemOption?: EventItemOptionListRelationFilter
  }

  export type EventItemOrderByWithRelationInput = {
    id?: SortOrder
    eventId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrderInput | SortOrder
    totalPrice?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Event?: EventOrderByWithRelationInput
    Product?: ProductOrderByWithRelationInput
    EventItemOption?: EventItemOptionOrderByRelationAggregateInput
  }

  export type EventItemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: EventItemWhereInput | EventItemWhereInput[]
    OR?: EventItemWhereInput[]
    NOT?: EventItemWhereInput | EventItemWhereInput[]
    eventId?: StringFilter<"EventItem"> | string
    productId?: StringFilter<"EventItem"> | string
    quantity?: IntFilter<"EventItem"> | number
    unitPrice?: FloatNullableFilter<"EventItem"> | number | null
    totalPrice?: FloatNullableFilter<"EventItem"> | number | null
    notes?: StringNullableFilter<"EventItem"> | string | null
    createdAt?: DateTimeFilter<"EventItem"> | Date | string
    updatedAt?: DateTimeFilter<"EventItem"> | Date | string
    Event?: XOR<EventScalarRelationFilter, EventWhereInput>
    Product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    EventItemOption?: EventItemOptionListRelationFilter
  }, "id">

  export type EventItemOrderByWithAggregationInput = {
    id?: SortOrder
    eventId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrderInput | SortOrder
    totalPrice?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: EventItemCountOrderByAggregateInput
    _avg?: EventItemAvgOrderByAggregateInput
    _max?: EventItemMaxOrderByAggregateInput
    _min?: EventItemMinOrderByAggregateInput
    _sum?: EventItemSumOrderByAggregateInput
  }

  export type EventItemScalarWhereWithAggregatesInput = {
    AND?: EventItemScalarWhereWithAggregatesInput | EventItemScalarWhereWithAggregatesInput[]
    OR?: EventItemScalarWhereWithAggregatesInput[]
    NOT?: EventItemScalarWhereWithAggregatesInput | EventItemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"EventItem"> | string
    eventId?: StringWithAggregatesFilter<"EventItem"> | string
    productId?: StringWithAggregatesFilter<"EventItem"> | string
    quantity?: IntWithAggregatesFilter<"EventItem"> | number
    unitPrice?: FloatNullableWithAggregatesFilter<"EventItem"> | number | null
    totalPrice?: FloatNullableWithAggregatesFilter<"EventItem"> | number | null
    notes?: StringNullableWithAggregatesFilter<"EventItem"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"EventItem"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"EventItem"> | Date | string
  }

  export type EventItemOptionWhereInput = {
    AND?: EventItemOptionWhereInput | EventItemOptionWhereInput[]
    OR?: EventItemOptionWhereInput[]
    NOT?: EventItemOptionWhereInput | EventItemOptionWhereInput[]
    id?: StringFilter<"EventItemOption"> | string
    eventItemId?: StringFilter<"EventItemOption"> | string
    optionId?: StringFilter<"EventItemOption"> | string
    optionName?: StringFilter<"EventItemOption"> | string
    value?: StringFilter<"EventItemOption"> | string
    label?: StringNullableFilter<"EventItemOption"> | string | null
    priceAdjustment?: FloatFilter<"EventItemOption"> | number
    createdAt?: DateTimeFilter<"EventItemOption"> | Date | string
    EventItem?: XOR<EventItemScalarRelationFilter, EventItemWhereInput>
    ProductOption?: XOR<ProductOptionScalarRelationFilter, ProductOptionWhereInput>
  }

  export type EventItemOptionOrderByWithRelationInput = {
    id?: SortOrder
    eventItemId?: SortOrder
    optionId?: SortOrder
    optionName?: SortOrder
    value?: SortOrder
    label?: SortOrderInput | SortOrder
    priceAdjustment?: SortOrder
    createdAt?: SortOrder
    EventItem?: EventItemOrderByWithRelationInput
    ProductOption?: ProductOptionOrderByWithRelationInput
  }

  export type EventItemOptionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: EventItemOptionWhereInput | EventItemOptionWhereInput[]
    OR?: EventItemOptionWhereInput[]
    NOT?: EventItemOptionWhereInput | EventItemOptionWhereInput[]
    eventItemId?: StringFilter<"EventItemOption"> | string
    optionId?: StringFilter<"EventItemOption"> | string
    optionName?: StringFilter<"EventItemOption"> | string
    value?: StringFilter<"EventItemOption"> | string
    label?: StringNullableFilter<"EventItemOption"> | string | null
    priceAdjustment?: FloatFilter<"EventItemOption"> | number
    createdAt?: DateTimeFilter<"EventItemOption"> | Date | string
    EventItem?: XOR<EventItemScalarRelationFilter, EventItemWhereInput>
    ProductOption?: XOR<ProductOptionScalarRelationFilter, ProductOptionWhereInput>
  }, "id">

  export type EventItemOptionOrderByWithAggregationInput = {
    id?: SortOrder
    eventItemId?: SortOrder
    optionId?: SortOrder
    optionName?: SortOrder
    value?: SortOrder
    label?: SortOrderInput | SortOrder
    priceAdjustment?: SortOrder
    createdAt?: SortOrder
    _count?: EventItemOptionCountOrderByAggregateInput
    _avg?: EventItemOptionAvgOrderByAggregateInput
    _max?: EventItemOptionMaxOrderByAggregateInput
    _min?: EventItemOptionMinOrderByAggregateInput
    _sum?: EventItemOptionSumOrderByAggregateInput
  }

  export type EventItemOptionScalarWhereWithAggregatesInput = {
    AND?: EventItemOptionScalarWhereWithAggregatesInput | EventItemOptionScalarWhereWithAggregatesInput[]
    OR?: EventItemOptionScalarWhereWithAggregatesInput[]
    NOT?: EventItemOptionScalarWhereWithAggregatesInput | EventItemOptionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"EventItemOption"> | string
    eventItemId?: StringWithAggregatesFilter<"EventItemOption"> | string
    optionId?: StringWithAggregatesFilter<"EventItemOption"> | string
    optionName?: StringWithAggregatesFilter<"EventItemOption"> | string
    value?: StringWithAggregatesFilter<"EventItemOption"> | string
    label?: StringNullableWithAggregatesFilter<"EventItemOption"> | string | null
    priceAdjustment?: FloatWithAggregatesFilter<"EventItemOption"> | number
    createdAt?: DateTimeWithAggregatesFilter<"EventItemOption"> | Date | string
  }

  export type EventStatusHistoryWhereInput = {
    AND?: EventStatusHistoryWhereInput | EventStatusHistoryWhereInput[]
    OR?: EventStatusHistoryWhereInput[]
    NOT?: EventStatusHistoryWhereInput | EventStatusHistoryWhereInput[]
    id?: StringFilter<"EventStatusHistory"> | string
    eventId?: StringFilter<"EventStatusHistory"> | string
    fromStatus?: StringNullableFilter<"EventStatusHistory"> | string | null
    toStatus?: StringFilter<"EventStatusHistory"> | string
    fromStage?: StringNullableFilter<"EventStatusHistory"> | string | null
    toStage?: StringFilter<"EventStatusHistory"> | string
    notes?: StringNullableFilter<"EventStatusHistory"> | string | null
    changedBy?: StringNullableFilter<"EventStatusHistory"> | string | null
    changedAt?: DateTimeFilter<"EventStatusHistory"> | Date | string
    Event?: XOR<EventScalarRelationFilter, EventWhereInput>
  }

  export type EventStatusHistoryOrderByWithRelationInput = {
    id?: SortOrder
    eventId?: SortOrder
    fromStatus?: SortOrderInput | SortOrder
    toStatus?: SortOrder
    fromStage?: SortOrderInput | SortOrder
    toStage?: SortOrder
    notes?: SortOrderInput | SortOrder
    changedBy?: SortOrderInput | SortOrder
    changedAt?: SortOrder
    Event?: EventOrderByWithRelationInput
  }

  export type EventStatusHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: EventStatusHistoryWhereInput | EventStatusHistoryWhereInput[]
    OR?: EventStatusHistoryWhereInput[]
    NOT?: EventStatusHistoryWhereInput | EventStatusHistoryWhereInput[]
    eventId?: StringFilter<"EventStatusHistory"> | string
    fromStatus?: StringNullableFilter<"EventStatusHistory"> | string | null
    toStatus?: StringFilter<"EventStatusHistory"> | string
    fromStage?: StringNullableFilter<"EventStatusHistory"> | string | null
    toStage?: StringFilter<"EventStatusHistory"> | string
    notes?: StringNullableFilter<"EventStatusHistory"> | string | null
    changedBy?: StringNullableFilter<"EventStatusHistory"> | string | null
    changedAt?: DateTimeFilter<"EventStatusHistory"> | Date | string
    Event?: XOR<EventScalarRelationFilter, EventWhereInput>
  }, "id">

  export type EventStatusHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    eventId?: SortOrder
    fromStatus?: SortOrderInput | SortOrder
    toStatus?: SortOrder
    fromStage?: SortOrderInput | SortOrder
    toStage?: SortOrder
    notes?: SortOrderInput | SortOrder
    changedBy?: SortOrderInput | SortOrder
    changedAt?: SortOrder
    _count?: EventStatusHistoryCountOrderByAggregateInput
    _max?: EventStatusHistoryMaxOrderByAggregateInput
    _min?: EventStatusHistoryMinOrderByAggregateInput
  }

  export type EventStatusHistoryScalarWhereWithAggregatesInput = {
    AND?: EventStatusHistoryScalarWhereWithAggregatesInput | EventStatusHistoryScalarWhereWithAggregatesInput[]
    OR?: EventStatusHistoryScalarWhereWithAggregatesInput[]
    NOT?: EventStatusHistoryScalarWhereWithAggregatesInput | EventStatusHistoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"EventStatusHistory"> | string
    eventId?: StringWithAggregatesFilter<"EventStatusHistory"> | string
    fromStatus?: StringNullableWithAggregatesFilter<"EventStatusHistory"> | string | null
    toStatus?: StringWithAggregatesFilter<"EventStatusHistory"> | string
    fromStage?: StringNullableWithAggregatesFilter<"EventStatusHistory"> | string | null
    toStage?: StringWithAggregatesFilter<"EventStatusHistory"> | string
    notes?: StringNullableWithAggregatesFilter<"EventStatusHistory"> | string | null
    changedBy?: StringNullableWithAggregatesFilter<"EventStatusHistory"> | string | null
    changedAt?: DateTimeWithAggregatesFilter<"EventStatusHistory"> | Date | string
  }

  export type OrderItemWhereInput = {
    AND?: OrderItemWhereInput | OrderItemWhereInput[]
    OR?: OrderItemWhereInput[]
    NOT?: OrderItemWhereInput | OrderItemWhereInput[]
    id?: StringFilter<"OrderItem"> | string
    orderId?: StringFilter<"OrderItem"> | string
    productId?: StringFilter<"OrderItem"> | string
    quantity?: IntFilter<"OrderItem"> | number
    unitPrice?: FloatFilter<"OrderItem"> | number
    totalPrice?: FloatFilter<"OrderItem"> | number
    notes?: StringNullableFilter<"OrderItem"> | string | null
    createdAt?: DateTimeFilter<"OrderItem"> | Date | string
    updatedAt?: DateTimeFilter<"OrderItem"> | Date | string
    Order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    Product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    OrderItemOption?: OrderItemOptionListRelationFilter
  }

  export type OrderItemOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    Order?: OrderOrderByWithRelationInput
    Product?: ProductOrderByWithRelationInput
    OrderItemOption?: OrderItemOptionOrderByRelationAggregateInput
  }

  export type OrderItemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: OrderItemWhereInput | OrderItemWhereInput[]
    OR?: OrderItemWhereInput[]
    NOT?: OrderItemWhereInput | OrderItemWhereInput[]
    orderId?: StringFilter<"OrderItem"> | string
    productId?: StringFilter<"OrderItem"> | string
    quantity?: IntFilter<"OrderItem"> | number
    unitPrice?: FloatFilter<"OrderItem"> | number
    totalPrice?: FloatFilter<"OrderItem"> | number
    notes?: StringNullableFilter<"OrderItem"> | string | null
    createdAt?: DateTimeFilter<"OrderItem"> | Date | string
    updatedAt?: DateTimeFilter<"OrderItem"> | Date | string
    Order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
    Product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    OrderItemOption?: OrderItemOptionListRelationFilter
  }, "id">

  export type OrderItemOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    notes?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: OrderItemCountOrderByAggregateInput
    _avg?: OrderItemAvgOrderByAggregateInput
    _max?: OrderItemMaxOrderByAggregateInput
    _min?: OrderItemMinOrderByAggregateInput
    _sum?: OrderItemSumOrderByAggregateInput
  }

  export type OrderItemScalarWhereWithAggregatesInput = {
    AND?: OrderItemScalarWhereWithAggregatesInput | OrderItemScalarWhereWithAggregatesInput[]
    OR?: OrderItemScalarWhereWithAggregatesInput[]
    NOT?: OrderItemScalarWhereWithAggregatesInput | OrderItemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OrderItem"> | string
    orderId?: StringWithAggregatesFilter<"OrderItem"> | string
    productId?: StringWithAggregatesFilter<"OrderItem"> | string
    quantity?: IntWithAggregatesFilter<"OrderItem"> | number
    unitPrice?: FloatWithAggregatesFilter<"OrderItem"> | number
    totalPrice?: FloatWithAggregatesFilter<"OrderItem"> | number
    notes?: StringNullableWithAggregatesFilter<"OrderItem"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"OrderItem"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"OrderItem"> | Date | string
  }

  export type OrderItemOptionWhereInput = {
    AND?: OrderItemOptionWhereInput | OrderItemOptionWhereInput[]
    OR?: OrderItemOptionWhereInput[]
    NOT?: OrderItemOptionWhereInput | OrderItemOptionWhereInput[]
    id?: StringFilter<"OrderItemOption"> | string
    orderItemId?: StringFilter<"OrderItemOption"> | string
    optionId?: StringFilter<"OrderItemOption"> | string
    optionName?: StringFilter<"OrderItemOption"> | string
    value?: StringFilter<"OrderItemOption"> | string
    label?: StringNullableFilter<"OrderItemOption"> | string | null
    priceAdjustment?: FloatFilter<"OrderItemOption"> | number
    createdAt?: DateTimeFilter<"OrderItemOption"> | Date | string
    ProductOption?: XOR<ProductOptionScalarRelationFilter, ProductOptionWhereInput>
    OrderItem?: XOR<OrderItemScalarRelationFilter, OrderItemWhereInput>
  }

  export type OrderItemOptionOrderByWithRelationInput = {
    id?: SortOrder
    orderItemId?: SortOrder
    optionId?: SortOrder
    optionName?: SortOrder
    value?: SortOrder
    label?: SortOrderInput | SortOrder
    priceAdjustment?: SortOrder
    createdAt?: SortOrder
    ProductOption?: ProductOptionOrderByWithRelationInput
    OrderItem?: OrderItemOrderByWithRelationInput
  }

  export type OrderItemOptionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: OrderItemOptionWhereInput | OrderItemOptionWhereInput[]
    OR?: OrderItemOptionWhereInput[]
    NOT?: OrderItemOptionWhereInput | OrderItemOptionWhereInput[]
    orderItemId?: StringFilter<"OrderItemOption"> | string
    optionId?: StringFilter<"OrderItemOption"> | string
    optionName?: StringFilter<"OrderItemOption"> | string
    value?: StringFilter<"OrderItemOption"> | string
    label?: StringNullableFilter<"OrderItemOption"> | string | null
    priceAdjustment?: FloatFilter<"OrderItemOption"> | number
    createdAt?: DateTimeFilter<"OrderItemOption"> | Date | string
    ProductOption?: XOR<ProductOptionScalarRelationFilter, ProductOptionWhereInput>
    OrderItem?: XOR<OrderItemScalarRelationFilter, OrderItemWhereInput>
  }, "id">

  export type OrderItemOptionOrderByWithAggregationInput = {
    id?: SortOrder
    orderItemId?: SortOrder
    optionId?: SortOrder
    optionName?: SortOrder
    value?: SortOrder
    label?: SortOrderInput | SortOrder
    priceAdjustment?: SortOrder
    createdAt?: SortOrder
    _count?: OrderItemOptionCountOrderByAggregateInput
    _avg?: OrderItemOptionAvgOrderByAggregateInput
    _max?: OrderItemOptionMaxOrderByAggregateInput
    _min?: OrderItemOptionMinOrderByAggregateInput
    _sum?: OrderItemOptionSumOrderByAggregateInput
  }

  export type OrderItemOptionScalarWhereWithAggregatesInput = {
    AND?: OrderItemOptionScalarWhereWithAggregatesInput | OrderItemOptionScalarWhereWithAggregatesInput[]
    OR?: OrderItemOptionScalarWhereWithAggregatesInput[]
    NOT?: OrderItemOptionScalarWhereWithAggregatesInput | OrderItemOptionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OrderItemOption"> | string
    orderItemId?: StringWithAggregatesFilter<"OrderItemOption"> | string
    optionId?: StringWithAggregatesFilter<"OrderItemOption"> | string
    optionName?: StringWithAggregatesFilter<"OrderItemOption"> | string
    value?: StringWithAggregatesFilter<"OrderItemOption"> | string
    label?: StringNullableWithAggregatesFilter<"OrderItemOption"> | string | null
    priceAdjustment?: FloatWithAggregatesFilter<"OrderItemOption"> | number
    createdAt?: DateTimeWithAggregatesFilter<"OrderItemOption"> | Date | string
  }

  export type OrderStatusHistoryWhereInput = {
    AND?: OrderStatusHistoryWhereInput | OrderStatusHistoryWhereInput[]
    OR?: OrderStatusHistoryWhereInput[]
    NOT?: OrderStatusHistoryWhereInput | OrderStatusHistoryWhereInput[]
    id?: StringFilter<"OrderStatusHistory"> | string
    orderId?: StringFilter<"OrderStatusHistory"> | string
    fromStatus?: StringNullableFilter<"OrderStatusHistory"> | string | null
    toStatus?: StringFilter<"OrderStatusHistory"> | string
    fromStage?: StringNullableFilter<"OrderStatusHistory"> | string | null
    toStage?: StringFilter<"OrderStatusHistory"> | string
    notes?: StringNullableFilter<"OrderStatusHistory"> | string | null
    changedBy?: StringNullableFilter<"OrderStatusHistory"> | string | null
    changedAt?: DateTimeFilter<"OrderStatusHistory"> | Date | string
    Order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
  }

  export type OrderStatusHistoryOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    fromStatus?: SortOrderInput | SortOrder
    toStatus?: SortOrder
    fromStage?: SortOrderInput | SortOrder
    toStage?: SortOrder
    notes?: SortOrderInput | SortOrder
    changedBy?: SortOrderInput | SortOrder
    changedAt?: SortOrder
    Order?: OrderOrderByWithRelationInput
  }

  export type OrderStatusHistoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: OrderStatusHistoryWhereInput | OrderStatusHistoryWhereInput[]
    OR?: OrderStatusHistoryWhereInput[]
    NOT?: OrderStatusHistoryWhereInput | OrderStatusHistoryWhereInput[]
    orderId?: StringFilter<"OrderStatusHistory"> | string
    fromStatus?: StringNullableFilter<"OrderStatusHistory"> | string | null
    toStatus?: StringFilter<"OrderStatusHistory"> | string
    fromStage?: StringNullableFilter<"OrderStatusHistory"> | string | null
    toStage?: StringFilter<"OrderStatusHistory"> | string
    notes?: StringNullableFilter<"OrderStatusHistory"> | string | null
    changedBy?: StringNullableFilter<"OrderStatusHistory"> | string | null
    changedAt?: DateTimeFilter<"OrderStatusHistory"> | Date | string
    Order?: XOR<OrderScalarRelationFilter, OrderWhereInput>
  }, "id">

  export type OrderStatusHistoryOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    fromStatus?: SortOrderInput | SortOrder
    toStatus?: SortOrder
    fromStage?: SortOrderInput | SortOrder
    toStage?: SortOrder
    notes?: SortOrderInput | SortOrder
    changedBy?: SortOrderInput | SortOrder
    changedAt?: SortOrder
    _count?: OrderStatusHistoryCountOrderByAggregateInput
    _max?: OrderStatusHistoryMaxOrderByAggregateInput
    _min?: OrderStatusHistoryMinOrderByAggregateInput
  }

  export type OrderStatusHistoryScalarWhereWithAggregatesInput = {
    AND?: OrderStatusHistoryScalarWhereWithAggregatesInput | OrderStatusHistoryScalarWhereWithAggregatesInput[]
    OR?: OrderStatusHistoryScalarWhereWithAggregatesInput[]
    NOT?: OrderStatusHistoryScalarWhereWithAggregatesInput | OrderStatusHistoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OrderStatusHistory"> | string
    orderId?: StringWithAggregatesFilter<"OrderStatusHistory"> | string
    fromStatus?: StringNullableWithAggregatesFilter<"OrderStatusHistory"> | string | null
    toStatus?: StringWithAggregatesFilter<"OrderStatusHistory"> | string
    fromStage?: StringNullableWithAggregatesFilter<"OrderStatusHistory"> | string | null
    toStage?: StringWithAggregatesFilter<"OrderStatusHistory"> | string
    notes?: StringNullableWithAggregatesFilter<"OrderStatusHistory"> | string | null
    changedBy?: StringNullableWithAggregatesFilter<"OrderStatusHistory"> | string | null
    changedAt?: DateTimeWithAggregatesFilter<"OrderStatusHistory"> | Date | string
  }

  export type ProductOptionWhereInput = {
    AND?: ProductOptionWhereInput | ProductOptionWhereInput[]
    OR?: ProductOptionWhereInput[]
    NOT?: ProductOptionWhereInput | ProductOptionWhereInput[]
    id?: StringFilter<"ProductOption"> | string
    productId?: StringFilter<"ProductOption"> | string
    name?: StringFilter<"ProductOption"> | string
    type?: StringFilter<"ProductOption"> | string
    required?: BoolFilter<"ProductOption"> | boolean
    sortOrder?: IntFilter<"ProductOption"> | number
    createdAt?: DateTimeFilter<"ProductOption"> | Date | string
    updatedAt?: DateTimeFilter<"ProductOption"> | Date | string
    EventItemOption?: EventItemOptionListRelationFilter
    OrderItemOption?: OrderItemOptionListRelationFilter
    Product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    ProductOptionValue?: ProductOptionValueListRelationFilter
  }

  export type ProductOptionOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    name?: SortOrder
    type?: SortOrder
    required?: SortOrder
    sortOrder?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    EventItemOption?: EventItemOptionOrderByRelationAggregateInput
    OrderItemOption?: OrderItemOptionOrderByRelationAggregateInput
    Product?: ProductOrderByWithRelationInput
    ProductOptionValue?: ProductOptionValueOrderByRelationAggregateInput
  }

  export type ProductOptionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductOptionWhereInput | ProductOptionWhereInput[]
    OR?: ProductOptionWhereInput[]
    NOT?: ProductOptionWhereInput | ProductOptionWhereInput[]
    productId?: StringFilter<"ProductOption"> | string
    name?: StringFilter<"ProductOption"> | string
    type?: StringFilter<"ProductOption"> | string
    required?: BoolFilter<"ProductOption"> | boolean
    sortOrder?: IntFilter<"ProductOption"> | number
    createdAt?: DateTimeFilter<"ProductOption"> | Date | string
    updatedAt?: DateTimeFilter<"ProductOption"> | Date | string
    EventItemOption?: EventItemOptionListRelationFilter
    OrderItemOption?: OrderItemOptionListRelationFilter
    Product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    ProductOptionValue?: ProductOptionValueListRelationFilter
  }, "id">

  export type ProductOptionOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    name?: SortOrder
    type?: SortOrder
    required?: SortOrder
    sortOrder?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProductOptionCountOrderByAggregateInput
    _avg?: ProductOptionAvgOrderByAggregateInput
    _max?: ProductOptionMaxOrderByAggregateInput
    _min?: ProductOptionMinOrderByAggregateInput
    _sum?: ProductOptionSumOrderByAggregateInput
  }

  export type ProductOptionScalarWhereWithAggregatesInput = {
    AND?: ProductOptionScalarWhereWithAggregatesInput | ProductOptionScalarWhereWithAggregatesInput[]
    OR?: ProductOptionScalarWhereWithAggregatesInput[]
    NOT?: ProductOptionScalarWhereWithAggregatesInput | ProductOptionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductOption"> | string
    productId?: StringWithAggregatesFilter<"ProductOption"> | string
    name?: StringWithAggregatesFilter<"ProductOption"> | string
    type?: StringWithAggregatesFilter<"ProductOption"> | string
    required?: BoolWithAggregatesFilter<"ProductOption"> | boolean
    sortOrder?: IntWithAggregatesFilter<"ProductOption"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ProductOption"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProductOption"> | Date | string
  }

  export type ProductOptionValueWhereInput = {
    AND?: ProductOptionValueWhereInput | ProductOptionValueWhereInput[]
    OR?: ProductOptionValueWhereInput[]
    NOT?: ProductOptionValueWhereInput | ProductOptionValueWhereInput[]
    id?: StringFilter<"ProductOptionValue"> | string
    optionId?: StringFilter<"ProductOptionValue"> | string
    value?: StringFilter<"ProductOptionValue"> | string
    label?: StringNullableFilter<"ProductOptionValue"> | string | null
    priceAdjustment?: FloatNullableFilter<"ProductOptionValue"> | number | null
    sortOrder?: IntFilter<"ProductOptionValue"> | number
    createdAt?: DateTimeFilter<"ProductOptionValue"> | Date | string
    updatedAt?: DateTimeFilter<"ProductOptionValue"> | Date | string
    ProductOption?: XOR<ProductOptionScalarRelationFilter, ProductOptionWhereInput>
  }

  export type ProductOptionValueOrderByWithRelationInput = {
    id?: SortOrder
    optionId?: SortOrder
    value?: SortOrder
    label?: SortOrderInput | SortOrder
    priceAdjustment?: SortOrderInput | SortOrder
    sortOrder?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    ProductOption?: ProductOptionOrderByWithRelationInput
  }

  export type ProductOptionValueWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductOptionValueWhereInput | ProductOptionValueWhereInput[]
    OR?: ProductOptionValueWhereInput[]
    NOT?: ProductOptionValueWhereInput | ProductOptionValueWhereInput[]
    optionId?: StringFilter<"ProductOptionValue"> | string
    value?: StringFilter<"ProductOptionValue"> | string
    label?: StringNullableFilter<"ProductOptionValue"> | string | null
    priceAdjustment?: FloatNullableFilter<"ProductOptionValue"> | number | null
    sortOrder?: IntFilter<"ProductOptionValue"> | number
    createdAt?: DateTimeFilter<"ProductOptionValue"> | Date | string
    updatedAt?: DateTimeFilter<"ProductOptionValue"> | Date | string
    ProductOption?: XOR<ProductOptionScalarRelationFilter, ProductOptionWhereInput>
  }, "id">

  export type ProductOptionValueOrderByWithAggregationInput = {
    id?: SortOrder
    optionId?: SortOrder
    value?: SortOrder
    label?: SortOrderInput | SortOrder
    priceAdjustment?: SortOrderInput | SortOrder
    sortOrder?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProductOptionValueCountOrderByAggregateInput
    _avg?: ProductOptionValueAvgOrderByAggregateInput
    _max?: ProductOptionValueMaxOrderByAggregateInput
    _min?: ProductOptionValueMinOrderByAggregateInput
    _sum?: ProductOptionValueSumOrderByAggregateInput
  }

  export type ProductOptionValueScalarWhereWithAggregatesInput = {
    AND?: ProductOptionValueScalarWhereWithAggregatesInput | ProductOptionValueScalarWhereWithAggregatesInput[]
    OR?: ProductOptionValueScalarWhereWithAggregatesInput[]
    NOT?: ProductOptionValueScalarWhereWithAggregatesInput | ProductOptionValueScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductOptionValue"> | string
    optionId?: StringWithAggregatesFilter<"ProductOptionValue"> | string
    value?: StringWithAggregatesFilter<"ProductOptionValue"> | string
    label?: StringNullableWithAggregatesFilter<"ProductOptionValue"> | string | null
    priceAdjustment?: FloatNullableWithAggregatesFilter<"ProductOptionValue"> | number | null
    sortOrder?: IntWithAggregatesFilter<"ProductOptionValue"> | number
    createdAt?: DateTimeWithAggregatesFilter<"ProductOptionValue"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProductOptionValue"> | Date | string
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    role?: StringFilter<"User"> | string
    department?: StringNullableFilter<"User"> | string | null
    active?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    tasks?: TasksListRelationFilter
    user_roles?: User_rolesListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    password?: SortOrder
    role?: SortOrder
    department?: SortOrderInput | SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    tasks?: tasksOrderByRelationAggregateInput
    user_roles?: user_rolesOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    firstName?: StringFilter<"User"> | string
    lastName?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    role?: StringFilter<"User"> | string
    department?: StringNullableFilter<"User"> | string | null
    active?: BoolFilter<"User"> | boolean
    createdAt?: DateTimeFilter<"User"> | Date | string
    updatedAt?: DateTimeFilter<"User"> | Date | string
    tasks?: TasksListRelationFilter
    user_roles?: User_rolesListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    password?: SortOrder
    role?: SortOrder
    department?: SortOrderInput | SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    firstName?: StringWithAggregatesFilter<"User"> | string
    lastName?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    role?: StringWithAggregatesFilter<"User"> | string
    department?: StringNullableWithAggregatesFilter<"User"> | string | null
    active?: BoolWithAggregatesFilter<"User"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"User"> | Date | string
  }

  export type task_dependenciesWhereInput = {
    AND?: task_dependenciesWhereInput | task_dependenciesWhereInput[]
    OR?: task_dependenciesWhereInput[]
    NOT?: task_dependenciesWhereInput | task_dependenciesWhereInput[]
    id?: StringFilter<"task_dependencies"> | string
    taskId?: StringFilter<"task_dependencies"> | string
    dependsOnTaskId?: StringFilter<"task_dependencies"> | string
    createdAt?: DateTimeFilter<"task_dependencies"> | Date | string
    tasks_task_dependencies_dependsOnTaskIdTotasks?: XOR<TasksScalarRelationFilter, tasksWhereInput>
    tasks_task_dependencies_taskIdTotasks?: XOR<TasksScalarRelationFilter, tasksWhereInput>
  }

  export type task_dependenciesOrderByWithRelationInput = {
    id?: SortOrder
    taskId?: SortOrder
    dependsOnTaskId?: SortOrder
    createdAt?: SortOrder
    tasks_task_dependencies_dependsOnTaskIdTotasks?: tasksOrderByWithRelationInput
    tasks_task_dependencies_taskIdTotasks?: tasksOrderByWithRelationInput
  }

  export type task_dependenciesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: task_dependenciesWhereInput | task_dependenciesWhereInput[]
    OR?: task_dependenciesWhereInput[]
    NOT?: task_dependenciesWhereInput | task_dependenciesWhereInput[]
    taskId?: StringFilter<"task_dependencies"> | string
    dependsOnTaskId?: StringFilter<"task_dependencies"> | string
    createdAt?: DateTimeFilter<"task_dependencies"> | Date | string
    tasks_task_dependencies_dependsOnTaskIdTotasks?: XOR<TasksScalarRelationFilter, tasksWhereInput>
    tasks_task_dependencies_taskIdTotasks?: XOR<TasksScalarRelationFilter, tasksWhereInput>
  }, "id">

  export type task_dependenciesOrderByWithAggregationInput = {
    id?: SortOrder
    taskId?: SortOrder
    dependsOnTaskId?: SortOrder
    createdAt?: SortOrder
    _count?: task_dependenciesCountOrderByAggregateInput
    _max?: task_dependenciesMaxOrderByAggregateInput
    _min?: task_dependenciesMinOrderByAggregateInput
  }

  export type task_dependenciesScalarWhereWithAggregatesInput = {
    AND?: task_dependenciesScalarWhereWithAggregatesInput | task_dependenciesScalarWhereWithAggregatesInput[]
    OR?: task_dependenciesScalarWhereWithAggregatesInput[]
    NOT?: task_dependenciesScalarWhereWithAggregatesInput | task_dependenciesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"task_dependencies"> | string
    taskId?: StringWithAggregatesFilter<"task_dependencies"> | string
    dependsOnTaskId?: StringWithAggregatesFilter<"task_dependencies"> | string
    createdAt?: DateTimeWithAggregatesFilter<"task_dependencies"> | Date | string
  }

  export type task_templatesWhereInput = {
    AND?: task_templatesWhereInput | task_templatesWhereInput[]
    OR?: task_templatesWhereInput[]
    NOT?: task_templatesWhereInput | task_templatesWhereInput[]
    id?: StringFilter<"task_templates"> | string
    productId?: StringFilter<"task_templates"> | string
    name?: StringFilter<"task_templates"> | string
    description?: StringNullableFilter<"task_templates"> | string | null
    estimatedDuration?: IntFilter<"task_templates"> | number
    leadTimeHours?: IntFilter<"task_templates"> | number
    sequenceOrder?: IntFilter<"task_templates"> | number
    requiredRole?: StringNullableFilter<"task_templates"> | string | null
    triggerCondition?: EnumTaskTriggerConditionFilter<"task_templates"> | $Enums.TaskTriggerCondition
    isMandatory?: BoolFilter<"task_templates"> | boolean
    requiresCompletionBeforeNext?: BoolFilter<"task_templates"> | boolean
    autoAssignToRole?: StringNullableFilter<"task_templates"> | string | null
    notes?: StringNullableFilter<"task_templates"> | string | null
    isActive?: BoolFilter<"task_templates"> | boolean
    createdAt?: DateTimeFilter<"task_templates"> | Date | string
    updatedAt?: DateTimeFilter<"task_templates"> | Date | string
    category?: StringNullableFilter<"task_templates"> | string | null
    Product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    tasks?: TasksListRelationFilter
  }

  export type task_templatesOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    estimatedDuration?: SortOrder
    leadTimeHours?: SortOrder
    sequenceOrder?: SortOrder
    requiredRole?: SortOrderInput | SortOrder
    triggerCondition?: SortOrder
    isMandatory?: SortOrder
    requiresCompletionBeforeNext?: SortOrder
    autoAssignToRole?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    category?: SortOrderInput | SortOrder
    Product?: ProductOrderByWithRelationInput
    tasks?: tasksOrderByRelationAggregateInput
  }

  export type task_templatesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: task_templatesWhereInput | task_templatesWhereInput[]
    OR?: task_templatesWhereInput[]
    NOT?: task_templatesWhereInput | task_templatesWhereInput[]
    productId?: StringFilter<"task_templates"> | string
    name?: StringFilter<"task_templates"> | string
    description?: StringNullableFilter<"task_templates"> | string | null
    estimatedDuration?: IntFilter<"task_templates"> | number
    leadTimeHours?: IntFilter<"task_templates"> | number
    sequenceOrder?: IntFilter<"task_templates"> | number
    requiredRole?: StringNullableFilter<"task_templates"> | string | null
    triggerCondition?: EnumTaskTriggerConditionFilter<"task_templates"> | $Enums.TaskTriggerCondition
    isMandatory?: BoolFilter<"task_templates"> | boolean
    requiresCompletionBeforeNext?: BoolFilter<"task_templates"> | boolean
    autoAssignToRole?: StringNullableFilter<"task_templates"> | string | null
    notes?: StringNullableFilter<"task_templates"> | string | null
    isActive?: BoolFilter<"task_templates"> | boolean
    createdAt?: DateTimeFilter<"task_templates"> | Date | string
    updatedAt?: DateTimeFilter<"task_templates"> | Date | string
    category?: StringNullableFilter<"task_templates"> | string | null
    Product?: XOR<ProductScalarRelationFilter, ProductWhereInput>
    tasks?: TasksListRelationFilter
  }, "id">

  export type task_templatesOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    estimatedDuration?: SortOrder
    leadTimeHours?: SortOrder
    sequenceOrder?: SortOrder
    requiredRole?: SortOrderInput | SortOrder
    triggerCondition?: SortOrder
    isMandatory?: SortOrder
    requiresCompletionBeforeNext?: SortOrder
    autoAssignToRole?: SortOrderInput | SortOrder
    notes?: SortOrderInput | SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    category?: SortOrderInput | SortOrder
    _count?: task_templatesCountOrderByAggregateInput
    _avg?: task_templatesAvgOrderByAggregateInput
    _max?: task_templatesMaxOrderByAggregateInput
    _min?: task_templatesMinOrderByAggregateInput
    _sum?: task_templatesSumOrderByAggregateInput
  }

  export type task_templatesScalarWhereWithAggregatesInput = {
    AND?: task_templatesScalarWhereWithAggregatesInput | task_templatesScalarWhereWithAggregatesInput[]
    OR?: task_templatesScalarWhereWithAggregatesInput[]
    NOT?: task_templatesScalarWhereWithAggregatesInput | task_templatesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"task_templates"> | string
    productId?: StringWithAggregatesFilter<"task_templates"> | string
    name?: StringWithAggregatesFilter<"task_templates"> | string
    description?: StringNullableWithAggregatesFilter<"task_templates"> | string | null
    estimatedDuration?: IntWithAggregatesFilter<"task_templates"> | number
    leadTimeHours?: IntWithAggregatesFilter<"task_templates"> | number
    sequenceOrder?: IntWithAggregatesFilter<"task_templates"> | number
    requiredRole?: StringNullableWithAggregatesFilter<"task_templates"> | string | null
    triggerCondition?: EnumTaskTriggerConditionWithAggregatesFilter<"task_templates"> | $Enums.TaskTriggerCondition
    isMandatory?: BoolWithAggregatesFilter<"task_templates"> | boolean
    requiresCompletionBeforeNext?: BoolWithAggregatesFilter<"task_templates"> | boolean
    autoAssignToRole?: StringNullableWithAggregatesFilter<"task_templates"> | string | null
    notes?: StringNullableWithAggregatesFilter<"task_templates"> | string | null
    isActive?: BoolWithAggregatesFilter<"task_templates"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"task_templates"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"task_templates"> | Date | string
    category?: StringNullableWithAggregatesFilter<"task_templates"> | string | null
  }

  export type tasksWhereInput = {
    AND?: tasksWhereInput | tasksWhereInput[]
    OR?: tasksWhereInput[]
    NOT?: tasksWhereInput | tasksWhereInput[]
    id?: StringFilter<"tasks"> | string
    templateId?: StringNullableFilter<"tasks"> | string | null
    eventId?: StringNullableFilter<"tasks"> | string | null
    orderId?: StringNullableFilter<"tasks"> | string | null
    productId?: StringNullableFilter<"tasks"> | string | null
    assignedUserId?: StringNullableFilter<"tasks"> | string | null
    name?: StringFilter<"tasks"> | string
    description?: StringNullableFilter<"tasks"> | string | null
    category?: StringNullableFilter<"tasks"> | string | null
    status?: EnumTaskStatusFilter<"tasks"> | $Enums.TaskStatus
    priority?: EnumTaskPriorityFilter<"tasks"> | $Enums.TaskPriority
    dueDate?: DateTimeNullableFilter<"tasks"> | Date | string | null
    startTime?: DateTimeNullableFilter<"tasks"> | Date | string | null
    endTime?: DateTimeNullableFilter<"tasks"> | Date | string | null
    estimatedDuration?: IntNullableFilter<"tasks"> | number | null
    actualDuration?: IntNullableFilter<"tasks"> | number | null
    actualStartTime?: DateTimeNullableFilter<"tasks"> | Date | string | null
    actualEndTime?: DateTimeNullableFilter<"tasks"> | Date | string | null
    completionNotes?: StringNullableFilter<"tasks"> | string | null
    requiresCustomerApproval?: BoolFilter<"tasks"> | boolean
    customerApprovedAt?: DateTimeNullableFilter<"tasks"> | Date | string | null
    blockedReason?: StringNullableFilter<"tasks"> | string | null
    createdAt?: DateTimeFilter<"tasks"> | Date | string
    updatedAt?: DateTimeFilter<"tasks"> | Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: Task_dependenciesListRelationFilter
    task_dependencies_task_dependencies_taskIdTotasks?: Task_dependenciesListRelationFilter
    User?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    Event?: XOR<EventNullableScalarRelationFilter, EventWhereInput> | null
    Order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
    Product?: XOR<ProductNullableScalarRelationFilter, ProductWhereInput> | null
    task_templates?: XOR<Task_templatesNullableScalarRelationFilter, task_templatesWhereInput> | null
  }

  export type tasksOrderByWithRelationInput = {
    id?: SortOrder
    templateId?: SortOrderInput | SortOrder
    eventId?: SortOrderInput | SortOrder
    orderId?: SortOrderInput | SortOrder
    productId?: SortOrderInput | SortOrder
    assignedUserId?: SortOrderInput | SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    status?: SortOrder
    priority?: SortOrder
    dueDate?: SortOrderInput | SortOrder
    startTime?: SortOrderInput | SortOrder
    endTime?: SortOrderInput | SortOrder
    estimatedDuration?: SortOrderInput | SortOrder
    actualDuration?: SortOrderInput | SortOrder
    actualStartTime?: SortOrderInput | SortOrder
    actualEndTime?: SortOrderInput | SortOrder
    completionNotes?: SortOrderInput | SortOrder
    requiresCustomerApproval?: SortOrder
    customerApprovedAt?: SortOrderInput | SortOrder
    blockedReason?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesOrderByRelationAggregateInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesOrderByRelationAggregateInput
    User?: UserOrderByWithRelationInput
    Event?: EventOrderByWithRelationInput
    Order?: OrderOrderByWithRelationInput
    Product?: ProductOrderByWithRelationInput
    task_templates?: task_templatesOrderByWithRelationInput
  }

  export type tasksWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: tasksWhereInput | tasksWhereInput[]
    OR?: tasksWhereInput[]
    NOT?: tasksWhereInput | tasksWhereInput[]
    templateId?: StringNullableFilter<"tasks"> | string | null
    eventId?: StringNullableFilter<"tasks"> | string | null
    orderId?: StringNullableFilter<"tasks"> | string | null
    productId?: StringNullableFilter<"tasks"> | string | null
    assignedUserId?: StringNullableFilter<"tasks"> | string | null
    name?: StringFilter<"tasks"> | string
    description?: StringNullableFilter<"tasks"> | string | null
    category?: StringNullableFilter<"tasks"> | string | null
    status?: EnumTaskStatusFilter<"tasks"> | $Enums.TaskStatus
    priority?: EnumTaskPriorityFilter<"tasks"> | $Enums.TaskPriority
    dueDate?: DateTimeNullableFilter<"tasks"> | Date | string | null
    startTime?: DateTimeNullableFilter<"tasks"> | Date | string | null
    endTime?: DateTimeNullableFilter<"tasks"> | Date | string | null
    estimatedDuration?: IntNullableFilter<"tasks"> | number | null
    actualDuration?: IntNullableFilter<"tasks"> | number | null
    actualStartTime?: DateTimeNullableFilter<"tasks"> | Date | string | null
    actualEndTime?: DateTimeNullableFilter<"tasks"> | Date | string | null
    completionNotes?: StringNullableFilter<"tasks"> | string | null
    requiresCustomerApproval?: BoolFilter<"tasks"> | boolean
    customerApprovedAt?: DateTimeNullableFilter<"tasks"> | Date | string | null
    blockedReason?: StringNullableFilter<"tasks"> | string | null
    createdAt?: DateTimeFilter<"tasks"> | Date | string
    updatedAt?: DateTimeFilter<"tasks"> | Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: Task_dependenciesListRelationFilter
    task_dependencies_task_dependencies_taskIdTotasks?: Task_dependenciesListRelationFilter
    User?: XOR<UserNullableScalarRelationFilter, UserWhereInput> | null
    Event?: XOR<EventNullableScalarRelationFilter, EventWhereInput> | null
    Order?: XOR<OrderNullableScalarRelationFilter, OrderWhereInput> | null
    Product?: XOR<ProductNullableScalarRelationFilter, ProductWhereInput> | null
    task_templates?: XOR<Task_templatesNullableScalarRelationFilter, task_templatesWhereInput> | null
  }, "id">

  export type tasksOrderByWithAggregationInput = {
    id?: SortOrder
    templateId?: SortOrderInput | SortOrder
    eventId?: SortOrderInput | SortOrder
    orderId?: SortOrderInput | SortOrder
    productId?: SortOrderInput | SortOrder
    assignedUserId?: SortOrderInput | SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    status?: SortOrder
    priority?: SortOrder
    dueDate?: SortOrderInput | SortOrder
    startTime?: SortOrderInput | SortOrder
    endTime?: SortOrderInput | SortOrder
    estimatedDuration?: SortOrderInput | SortOrder
    actualDuration?: SortOrderInput | SortOrder
    actualStartTime?: SortOrderInput | SortOrder
    actualEndTime?: SortOrderInput | SortOrder
    completionNotes?: SortOrderInput | SortOrder
    requiresCustomerApproval?: SortOrder
    customerApprovedAt?: SortOrderInput | SortOrder
    blockedReason?: SortOrderInput | SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: tasksCountOrderByAggregateInput
    _avg?: tasksAvgOrderByAggregateInput
    _max?: tasksMaxOrderByAggregateInput
    _min?: tasksMinOrderByAggregateInput
    _sum?: tasksSumOrderByAggregateInput
  }

  export type tasksScalarWhereWithAggregatesInput = {
    AND?: tasksScalarWhereWithAggregatesInput | tasksScalarWhereWithAggregatesInput[]
    OR?: tasksScalarWhereWithAggregatesInput[]
    NOT?: tasksScalarWhereWithAggregatesInput | tasksScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"tasks"> | string
    templateId?: StringNullableWithAggregatesFilter<"tasks"> | string | null
    eventId?: StringNullableWithAggregatesFilter<"tasks"> | string | null
    orderId?: StringNullableWithAggregatesFilter<"tasks"> | string | null
    productId?: StringNullableWithAggregatesFilter<"tasks"> | string | null
    assignedUserId?: StringNullableWithAggregatesFilter<"tasks"> | string | null
    name?: StringWithAggregatesFilter<"tasks"> | string
    description?: StringNullableWithAggregatesFilter<"tasks"> | string | null
    category?: StringNullableWithAggregatesFilter<"tasks"> | string | null
    status?: EnumTaskStatusWithAggregatesFilter<"tasks"> | $Enums.TaskStatus
    priority?: EnumTaskPriorityWithAggregatesFilter<"tasks"> | $Enums.TaskPriority
    dueDate?: DateTimeNullableWithAggregatesFilter<"tasks"> | Date | string | null
    startTime?: DateTimeNullableWithAggregatesFilter<"tasks"> | Date | string | null
    endTime?: DateTimeNullableWithAggregatesFilter<"tasks"> | Date | string | null
    estimatedDuration?: IntNullableWithAggregatesFilter<"tasks"> | number | null
    actualDuration?: IntNullableWithAggregatesFilter<"tasks"> | number | null
    actualStartTime?: DateTimeNullableWithAggregatesFilter<"tasks"> | Date | string | null
    actualEndTime?: DateTimeNullableWithAggregatesFilter<"tasks"> | Date | string | null
    completionNotes?: StringNullableWithAggregatesFilter<"tasks"> | string | null
    requiresCustomerApproval?: BoolWithAggregatesFilter<"tasks"> | boolean
    customerApprovedAt?: DateTimeNullableWithAggregatesFilter<"tasks"> | Date | string | null
    blockedReason?: StringNullableWithAggregatesFilter<"tasks"> | string | null
    createdAt?: DateTimeWithAggregatesFilter<"tasks"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"tasks"> | Date | string
  }

  export type user_rolesWhereInput = {
    AND?: user_rolesWhereInput | user_rolesWhereInput[]
    OR?: user_rolesWhereInput[]
    NOT?: user_rolesWhereInput | user_rolesWhereInput[]
    id?: StringFilter<"user_roles"> | string
    userId?: StringFilter<"user_roles"> | string
    role?: StringFilter<"user_roles"> | string
    department?: StringNullableFilter<"user_roles"> | string | null
    isPrimary?: BoolFilter<"user_roles"> | boolean
    createdAt?: DateTimeFilter<"user_roles"> | Date | string
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }

  export type user_rolesOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    department?: SortOrderInput | SortOrder
    isPrimary?: SortOrder
    createdAt?: SortOrder
    User?: UserOrderByWithRelationInput
  }

  export type user_rolesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: user_rolesWhereInput | user_rolesWhereInput[]
    OR?: user_rolesWhereInput[]
    NOT?: user_rolesWhereInput | user_rolesWhereInput[]
    userId?: StringFilter<"user_roles"> | string
    role?: StringFilter<"user_roles"> | string
    department?: StringNullableFilter<"user_roles"> | string | null
    isPrimary?: BoolFilter<"user_roles"> | boolean
    createdAt?: DateTimeFilter<"user_roles"> | Date | string
    User?: XOR<UserScalarRelationFilter, UserWhereInput>
  }, "id">

  export type user_rolesOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    department?: SortOrderInput | SortOrder
    isPrimary?: SortOrder
    createdAt?: SortOrder
    _count?: user_rolesCountOrderByAggregateInput
    _max?: user_rolesMaxOrderByAggregateInput
    _min?: user_rolesMinOrderByAggregateInput
  }

  export type user_rolesScalarWhereWithAggregatesInput = {
    AND?: user_rolesScalarWhereWithAggregatesInput | user_rolesScalarWhereWithAggregatesInput[]
    OR?: user_rolesScalarWhereWithAggregatesInput[]
    NOT?: user_rolesScalarWhereWithAggregatesInput | user_rolesScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"user_roles"> | string
    userId?: StringWithAggregatesFilter<"user_roles"> | string
    role?: StringWithAggregatesFilter<"user_roles"> | string
    department?: StringNullableWithAggregatesFilter<"user_roles"> | string | null
    isPrimary?: BoolWithAggregatesFilter<"user_roles"> | boolean
    createdAt?: DateTimeWithAggregatesFilter<"user_roles"> | Date | string
  }

  export type AccountCreateInput = {
    id: string
    email: string
    firstName: string
    lastName: string
    password: string
    role: string
    accessLevel: string
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type AccountUncheckedCreateInput = {
    id: string
    email: string
    firstName: string
    lastName: string
    password: string
    role: string
    accessLevel: string
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type AccountUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    accessLevel?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    accessLevel?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountCreateManyInput = {
    id: string
    email: string
    firstName: string
    lastName: string
    password: string
    role: string
    accessLevel: string
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type AccountUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    accessLevel?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AccountUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    accessLevel?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomerCreateInput = {
    id: string
    email: string
    firstName: string
    lastName: string
    phone?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Event?: EventCreateNestedManyWithoutCustomerInput
    Order?: OrderCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateInput = {
    id: string
    email: string
    firstName: string
    lastName: string
    phone?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Event?: EventUncheckedCreateNestedManyWithoutCustomerInput
    Order?: OrderUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Event?: EventUpdateManyWithoutCustomerNestedInput
    Order?: OrderUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Event?: EventUncheckedUpdateManyWithoutCustomerNestedInput
    Order?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerCreateManyInput = {
    id: string
    email: string
    firstName: string
    lastName: string
    phone?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type CustomerUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CustomerUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventCreateInput = {
    id: string
    title: string
    description?: string | null
    location: string
    startDate: Date | string
    endDate?: Date | string | null
    status?: string
    staffNotes?: string | null
    assignedStaffId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    customerNotes?: string | null
    depositAmount?: number | null
    depositPaid?: boolean
    endTime?: string | null
    finalPaymentPaid?: boolean
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    stage?: string
    startTime: string
    totalAmount?: number | null
    Customer?: CustomerCreateNestedOneWithoutEventInput
    EventItem?: EventItemCreateNestedManyWithoutEventInput
    EventStatusHistory?: EventStatusHistoryCreateNestedManyWithoutEventInput
    tasks?: tasksCreateNestedManyWithoutEventInput
  }

  export type EventUncheckedCreateInput = {
    id: string
    title: string
    description?: string | null
    location: string
    startDate: Date | string
    endDate?: Date | string | null
    customerId?: string | null
    status?: string
    staffNotes?: string | null
    assignedStaffId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    customerNotes?: string | null
    depositAmount?: number | null
    depositPaid?: boolean
    endTime?: string | null
    finalPaymentPaid?: boolean
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    stage?: string
    startTime: string
    totalAmount?: number | null
    EventItem?: EventItemUncheckedCreateNestedManyWithoutEventInput
    EventStatusHistory?: EventStatusHistoryUncheckedCreateNestedManyWithoutEventInput
    tasks?: tasksUncheckedCreateNestedManyWithoutEventInput
  }

  export type EventUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    depositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    depositPaid?: BoolFieldUpdateOperationsInput | boolean
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    finalPaymentPaid?: BoolFieldUpdateOperationsInput | boolean
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    startTime?: StringFieldUpdateOperationsInput | string
    totalAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    Customer?: CustomerUpdateOneWithoutEventNestedInput
    EventItem?: EventItemUpdateManyWithoutEventNestedInput
    EventStatusHistory?: EventStatusHistoryUpdateManyWithoutEventNestedInput
    tasks?: tasksUpdateManyWithoutEventNestedInput
  }

  export type EventUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    depositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    depositPaid?: BoolFieldUpdateOperationsInput | boolean
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    finalPaymentPaid?: BoolFieldUpdateOperationsInput | boolean
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    startTime?: StringFieldUpdateOperationsInput | string
    totalAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    EventItem?: EventItemUncheckedUpdateManyWithoutEventNestedInput
    EventStatusHistory?: EventStatusHistoryUncheckedUpdateManyWithoutEventNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutEventNestedInput
  }

  export type EventCreateManyInput = {
    id: string
    title: string
    description?: string | null
    location: string
    startDate: Date | string
    endDate?: Date | string | null
    customerId?: string | null
    status?: string
    staffNotes?: string | null
    assignedStaffId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    customerNotes?: string | null
    depositAmount?: number | null
    depositPaid?: boolean
    endTime?: string | null
    finalPaymentPaid?: boolean
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    stage?: string
    startTime: string
    totalAmount?: number | null
  }

  export type EventUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    depositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    depositPaid?: BoolFieldUpdateOperationsInput | boolean
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    finalPaymentPaid?: BoolFieldUpdateOperationsInput | boolean
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    startTime?: StringFieldUpdateOperationsInput | string
    totalAmount?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type EventUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    depositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    depositPaid?: BoolFieldUpdateOperationsInput | boolean
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    finalPaymentPaid?: BoolFieldUpdateOperationsInput | boolean
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    startTime?: StringFieldUpdateOperationsInput | string
    totalAmount?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type HeroSettingCreateInput = {
    id: string
    imageUrl: string
    title: string
    description: string
    buttonText?: string
    buttonLink?: string
    textPosition?: string
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type HeroSettingUncheckedCreateInput = {
    id: string
    imageUrl: string
    title: string
    description: string
    buttonText?: string
    buttonLink?: string
    textPosition?: string
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type HeroSettingUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    buttonText?: StringFieldUpdateOperationsInput | string
    buttonLink?: StringFieldUpdateOperationsInput | string
    textPosition?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HeroSettingUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    buttonText?: StringFieldUpdateOperationsInput | string
    buttonLink?: StringFieldUpdateOperationsInput | string
    textPosition?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HeroSettingCreateManyInput = {
    id: string
    imageUrl: string
    title: string
    description: string
    buttonText?: string
    buttonLink?: string
    textPosition?: string
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type HeroSettingUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    buttonText?: StringFieldUpdateOperationsInput | string
    buttonLink?: StringFieldUpdateOperationsInput | string
    textPosition?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type HeroSettingUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    imageUrl?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    buttonText?: StringFieldUpdateOperationsInput | string
    buttonLink?: StringFieldUpdateOperationsInput | string
    textPosition?: StringFieldUpdateOperationsInput | string
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderCreateInput = {
    id: string
    totalAmount: number
    status?: string
    createdAt?: Date | string
    updatedAt: Date | string
    assignedStaffId?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: string | null
    deliveredAt?: Date | string | null
    discountAmount?: number | null
    finalAmount: number
    orderNumber: string
    paymentStatus?: string
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    shippedAt?: Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: number | null
    staffNotes?: string | null
    stage?: string
    taxAmount?: number | null
    Customer: CustomerCreateNestedOneWithoutOrderInput
    OrderItem?: OrderItemCreateNestedManyWithoutOrderInput
    OrderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutOrderInput
    tasks?: tasksCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateInput = {
    id: string
    customerId: string
    totalAmount: number
    status?: string
    createdAt?: Date | string
    updatedAt: Date | string
    assignedStaffId?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: string | null
    deliveredAt?: Date | string | null
    discountAmount?: number | null
    finalAmount: number
    orderNumber: string
    paymentStatus?: string
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    shippedAt?: Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: number | null
    staffNotes?: string | null
    stage?: string
    taxAmount?: number | null
    OrderItem?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
    OrderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutOrderInput
    tasks?: tasksUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalAmount?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discountAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    finalAmount?: FloatFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    taxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    Customer?: CustomerUpdateOneRequiredWithoutOrderNestedInput
    OrderItem?: OrderItemUpdateManyWithoutOrderNestedInput
    OrderStatusHistory?: OrderStatusHistoryUpdateManyWithoutOrderNestedInput
    tasks?: tasksUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    totalAmount?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discountAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    finalAmount?: FloatFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    taxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    OrderItem?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
    OrderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutOrderNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderCreateManyInput = {
    id: string
    customerId: string
    totalAmount: number
    status?: string
    createdAt?: Date | string
    updatedAt: Date | string
    assignedStaffId?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: string | null
    deliveredAt?: Date | string | null
    discountAmount?: number | null
    finalAmount: number
    orderNumber: string
    paymentStatus?: string
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    shippedAt?: Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: number | null
    staffNotes?: string | null
    stage?: string
    taxAmount?: number | null
  }

  export type OrderUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalAmount?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discountAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    finalAmount?: FloatFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    taxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type OrderUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    totalAmount?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discountAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    finalAmount?: FloatFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    taxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type ProductCreateInput = {
    id: string
    name: string
    description?: string | null
    price: number
    imageUrl?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    canBuy?: boolean
    canHire?: boolean
    hasRangePrice?: boolean
    hasUnitPrice?: boolean
    maxPrice?: number | null
    minPrice?: number | null
    minQuantity?: number | null
    unitPrice?: number | null
    unitType?: string | null
    EventItem?: EventItemCreateNestedManyWithoutProductInput
    OrderItem?: OrderItemCreateNestedManyWithoutProductInput
    ProductCategory?: ProductCategoryCreateNestedOneWithoutProductInput
    ProductOption?: ProductOptionCreateNestedManyWithoutProductInput
    task_templates?: task_templatesCreateNestedManyWithoutProductInput
    tasks?: tasksCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateInput = {
    id: string
    name: string
    description?: string | null
    price: number
    imageUrl?: string | null
    active?: boolean
    categoryId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    canBuy?: boolean
    canHire?: boolean
    hasRangePrice?: boolean
    hasUnitPrice?: boolean
    maxPrice?: number | null
    minPrice?: number | null
    minQuantity?: number | null
    unitPrice?: number | null
    unitType?: string | null
    EventItem?: EventItemUncheckedCreateNestedManyWithoutProductInput
    OrderItem?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    ProductOption?: ProductOptionUncheckedCreateNestedManyWithoutProductInput
    task_templates?: task_templatesUncheckedCreateNestedManyWithoutProductInput
    tasks?: tasksUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    canBuy?: BoolFieldUpdateOperationsInput | boolean
    canHire?: BoolFieldUpdateOperationsInput | boolean
    hasRangePrice?: BoolFieldUpdateOperationsInput | boolean
    hasUnitPrice?: BoolFieldUpdateOperationsInput | boolean
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    unitType?: NullableStringFieldUpdateOperationsInput | string | null
    EventItem?: EventItemUpdateManyWithoutProductNestedInput
    OrderItem?: OrderItemUpdateManyWithoutProductNestedInput
    ProductCategory?: ProductCategoryUpdateOneWithoutProductNestedInput
    ProductOption?: ProductOptionUpdateManyWithoutProductNestedInput
    task_templates?: task_templatesUpdateManyWithoutProductNestedInput
    tasks?: tasksUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    canBuy?: BoolFieldUpdateOperationsInput | boolean
    canHire?: BoolFieldUpdateOperationsInput | boolean
    hasRangePrice?: BoolFieldUpdateOperationsInput | boolean
    hasUnitPrice?: BoolFieldUpdateOperationsInput | boolean
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    unitType?: NullableStringFieldUpdateOperationsInput | string | null
    EventItem?: EventItemUncheckedUpdateManyWithoutProductNestedInput
    OrderItem?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    ProductOption?: ProductOptionUncheckedUpdateManyWithoutProductNestedInput
    task_templates?: task_templatesUncheckedUpdateManyWithoutProductNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductCreateManyInput = {
    id: string
    name: string
    description?: string | null
    price: number
    imageUrl?: string | null
    active?: boolean
    categoryId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    canBuy?: boolean
    canHire?: boolean
    hasRangePrice?: boolean
    hasUnitPrice?: boolean
    maxPrice?: number | null
    minPrice?: number | null
    minQuantity?: number | null
    unitPrice?: number | null
    unitType?: string | null
  }

  export type ProductUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    canBuy?: BoolFieldUpdateOperationsInput | boolean
    canHire?: BoolFieldUpdateOperationsInput | boolean
    hasRangePrice?: BoolFieldUpdateOperationsInput | boolean
    hasUnitPrice?: BoolFieldUpdateOperationsInput | boolean
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    unitType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    canBuy?: BoolFieldUpdateOperationsInput | boolean
    canHire?: BoolFieldUpdateOperationsInput | boolean
    hasRangePrice?: BoolFieldUpdateOperationsInput | boolean
    hasUnitPrice?: BoolFieldUpdateOperationsInput | boolean
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    unitType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type StaffInvitationCreateInput = {
    id: string
    email: string
    firstName: string
    lastName: string
    role: string
    accessLevel: string
    token: string
    used?: boolean
    usedAt?: Date | string | null
    createdAt?: Date | string
    expiresAt: Date | string
  }

  export type StaffInvitationUncheckedCreateInput = {
    id: string
    email: string
    firstName: string
    lastName: string
    role: string
    accessLevel: string
    token: string
    used?: boolean
    usedAt?: Date | string | null
    createdAt?: Date | string
    expiresAt: Date | string
  }

  export type StaffInvitationUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    accessLevel?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    used?: BoolFieldUpdateOperationsInput | boolean
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StaffInvitationUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    accessLevel?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    used?: BoolFieldUpdateOperationsInput | boolean
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StaffInvitationCreateManyInput = {
    id: string
    email: string
    firstName: string
    lastName: string
    role: string
    accessLevel: string
    token: string
    used?: boolean
    usedAt?: Date | string | null
    createdAt?: Date | string
    expiresAt: Date | string
  }

  export type StaffInvitationUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    accessLevel?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    used?: BoolFieldUpdateOperationsInput | boolean
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StaffInvitationUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    accessLevel?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    used?: BoolFieldUpdateOperationsInput | boolean
    usedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductCategoryCreateInput = {
    id: string
    name: string
    description?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    Product?: ProductCreateNestedManyWithoutProductCategoryInput
  }

  export type ProductCategoryUncheckedCreateInput = {
    id: string
    name: string
    description?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    Product?: ProductUncheckedCreateNestedManyWithoutProductCategoryInput
  }

  export type ProductCategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Product?: ProductUpdateManyWithoutProductCategoryNestedInput
  }

  export type ProductCategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Product?: ProductUncheckedUpdateManyWithoutProductCategoryNestedInput
  }

  export type ProductCategoryCreateManyInput = {
    id: string
    name: string
    description?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ProductCategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductCategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventItemCreateInput = {
    id: string
    quantity?: number
    unitPrice?: number | null
    totalPrice?: number | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Event: EventCreateNestedOneWithoutEventItemInput
    Product: ProductCreateNestedOneWithoutEventItemInput
    EventItemOption?: EventItemOptionCreateNestedManyWithoutEventItemInput
  }

  export type EventItemUncheckedCreateInput = {
    id: string
    eventId: string
    productId: string
    quantity?: number
    unitPrice?: number | null
    totalPrice?: number | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    EventItemOption?: EventItemOptionUncheckedCreateNestedManyWithoutEventItemInput
  }

  export type EventItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Event?: EventUpdateOneRequiredWithoutEventItemNestedInput
    Product?: ProductUpdateOneRequiredWithoutEventItemNestedInput
    EventItemOption?: EventItemOptionUpdateManyWithoutEventItemNestedInput
  }

  export type EventItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventItemOption?: EventItemOptionUncheckedUpdateManyWithoutEventItemNestedInput
  }

  export type EventItemCreateManyInput = {
    id: string
    eventId: string
    productId: string
    quantity?: number
    unitPrice?: number | null
    totalPrice?: number | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type EventItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventItemOptionCreateInput = {
    id: string
    optionName: string
    value: string
    label?: string | null
    priceAdjustment?: number
    createdAt?: Date | string
    EventItem: EventItemCreateNestedOneWithoutEventItemOptionInput
    ProductOption: ProductOptionCreateNestedOneWithoutEventItemOptionInput
  }

  export type EventItemOptionUncheckedCreateInput = {
    id: string
    eventItemId: string
    optionId: string
    optionName: string
    value: string
    label?: string | null
    priceAdjustment?: number
    createdAt?: Date | string
  }

  export type EventItemOptionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    optionName?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventItem?: EventItemUpdateOneRequiredWithoutEventItemOptionNestedInput
    ProductOption?: ProductOptionUpdateOneRequiredWithoutEventItemOptionNestedInput
  }

  export type EventItemOptionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventItemId?: StringFieldUpdateOperationsInput | string
    optionId?: StringFieldUpdateOperationsInput | string
    optionName?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventItemOptionCreateManyInput = {
    id: string
    eventItemId: string
    optionId: string
    optionName: string
    value: string
    label?: string | null
    priceAdjustment?: number
    createdAt?: Date | string
  }

  export type EventItemOptionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    optionName?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventItemOptionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventItemId?: StringFieldUpdateOperationsInput | string
    optionId?: StringFieldUpdateOperationsInput | string
    optionName?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventStatusHistoryCreateInput = {
    id: string
    fromStatus?: string | null
    toStatus: string
    fromStage?: string | null
    toStage: string
    notes?: string | null
    changedBy?: string | null
    changedAt?: Date | string
    Event: EventCreateNestedOneWithoutEventStatusHistoryInput
  }

  export type EventStatusHistoryUncheckedCreateInput = {
    id: string
    eventId: string
    fromStatus?: string | null
    toStatus: string
    fromStage?: string | null
    toStage: string
    notes?: string | null
    changedBy?: string | null
    changedAt?: Date | string
  }

  export type EventStatusHistoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fromStatus?: NullableStringFieldUpdateOperationsInput | string | null
    toStatus?: StringFieldUpdateOperationsInput | string
    fromStage?: NullableStringFieldUpdateOperationsInput | string | null
    toStage?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Event?: EventUpdateOneRequiredWithoutEventStatusHistoryNestedInput
  }

  export type EventStatusHistoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventId?: StringFieldUpdateOperationsInput | string
    fromStatus?: NullableStringFieldUpdateOperationsInput | string | null
    toStatus?: StringFieldUpdateOperationsInput | string
    fromStage?: NullableStringFieldUpdateOperationsInput | string | null
    toStage?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventStatusHistoryCreateManyInput = {
    id: string
    eventId: string
    fromStatus?: string | null
    toStatus: string
    fromStage?: string | null
    toStage: string
    notes?: string | null
    changedBy?: string | null
    changedAt?: Date | string
  }

  export type EventStatusHistoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    fromStatus?: NullableStringFieldUpdateOperationsInput | string | null
    toStatus?: StringFieldUpdateOperationsInput | string
    fromStage?: NullableStringFieldUpdateOperationsInput | string | null
    toStage?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventStatusHistoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventId?: StringFieldUpdateOperationsInput | string
    fromStatus?: NullableStringFieldUpdateOperationsInput | string | null
    toStatus?: StringFieldUpdateOperationsInput | string
    fromStage?: NullableStringFieldUpdateOperationsInput | string | null
    toStage?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemCreateInput = {
    id: string
    quantity?: number
    unitPrice: number
    totalPrice: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Order: OrderCreateNestedOneWithoutOrderItemInput
    Product: ProductCreateNestedOneWithoutOrderItemInput
    OrderItemOption?: OrderItemOptionCreateNestedManyWithoutOrderItemInput
  }

  export type OrderItemUncheckedCreateInput = {
    id: string
    orderId: string
    productId: string
    quantity?: number
    unitPrice: number
    totalPrice: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    OrderItemOption?: OrderItemOptionUncheckedCreateNestedManyWithoutOrderItemInput
  }

  export type OrderItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Order?: OrderUpdateOneRequiredWithoutOrderItemNestedInput
    Product?: ProductUpdateOneRequiredWithoutOrderItemNestedInput
    OrderItemOption?: OrderItemOptionUpdateManyWithoutOrderItemNestedInput
  }

  export type OrderItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    OrderItemOption?: OrderItemOptionUncheckedUpdateManyWithoutOrderItemNestedInput
  }

  export type OrderItemCreateManyInput = {
    id: string
    orderId: string
    productId: string
    quantity?: number
    unitPrice: number
    totalPrice: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type OrderItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemOptionCreateInput = {
    id: string
    optionName: string
    value: string
    label?: string | null
    priceAdjustment?: number
    createdAt?: Date | string
    ProductOption: ProductOptionCreateNestedOneWithoutOrderItemOptionInput
    OrderItem: OrderItemCreateNestedOneWithoutOrderItemOptionInput
  }

  export type OrderItemOptionUncheckedCreateInput = {
    id: string
    orderItemId: string
    optionId: string
    optionName: string
    value: string
    label?: string | null
    priceAdjustment?: number
    createdAt?: Date | string
  }

  export type OrderItemOptionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    optionName?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ProductOption?: ProductOptionUpdateOneRequiredWithoutOrderItemOptionNestedInput
    OrderItem?: OrderItemUpdateOneRequiredWithoutOrderItemOptionNestedInput
  }

  export type OrderItemOptionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderItemId?: StringFieldUpdateOperationsInput | string
    optionId?: StringFieldUpdateOperationsInput | string
    optionName?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemOptionCreateManyInput = {
    id: string
    orderItemId: string
    optionId: string
    optionName: string
    value: string
    label?: string | null
    priceAdjustment?: number
    createdAt?: Date | string
  }

  export type OrderItemOptionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    optionName?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemOptionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderItemId?: StringFieldUpdateOperationsInput | string
    optionId?: StringFieldUpdateOperationsInput | string
    optionName?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderStatusHistoryCreateInput = {
    id: string
    fromStatus?: string | null
    toStatus: string
    fromStage?: string | null
    toStage: string
    notes?: string | null
    changedBy?: string | null
    changedAt?: Date | string
    Order: OrderCreateNestedOneWithoutOrderStatusHistoryInput
  }

  export type OrderStatusHistoryUncheckedCreateInput = {
    id: string
    orderId: string
    fromStatus?: string | null
    toStatus: string
    fromStage?: string | null
    toStage: string
    notes?: string | null
    changedBy?: string | null
    changedAt?: Date | string
  }

  export type OrderStatusHistoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fromStatus?: NullableStringFieldUpdateOperationsInput | string | null
    toStatus?: StringFieldUpdateOperationsInput | string
    fromStage?: NullableStringFieldUpdateOperationsInput | string | null
    toStage?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Order?: OrderUpdateOneRequiredWithoutOrderStatusHistoryNestedInput
  }

  export type OrderStatusHistoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    fromStatus?: NullableStringFieldUpdateOperationsInput | string | null
    toStatus?: StringFieldUpdateOperationsInput | string
    fromStage?: NullableStringFieldUpdateOperationsInput | string | null
    toStage?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderStatusHistoryCreateManyInput = {
    id: string
    orderId: string
    fromStatus?: string | null
    toStatus: string
    fromStage?: string | null
    toStage: string
    notes?: string | null
    changedBy?: string | null
    changedAt?: Date | string
  }

  export type OrderStatusHistoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    fromStatus?: NullableStringFieldUpdateOperationsInput | string | null
    toStatus?: StringFieldUpdateOperationsInput | string
    fromStage?: NullableStringFieldUpdateOperationsInput | string | null
    toStage?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderStatusHistoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    fromStatus?: NullableStringFieldUpdateOperationsInput | string | null
    toStatus?: StringFieldUpdateOperationsInput | string
    fromStage?: NullableStringFieldUpdateOperationsInput | string | null
    toStage?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductOptionCreateInput = {
    id: string
    name: string
    type: string
    required?: boolean
    sortOrder?: number
    createdAt?: Date | string
    updatedAt: Date | string
    EventItemOption?: EventItemOptionCreateNestedManyWithoutProductOptionInput
    OrderItemOption?: OrderItemOptionCreateNestedManyWithoutProductOptionInput
    Product: ProductCreateNestedOneWithoutProductOptionInput
    ProductOptionValue?: ProductOptionValueCreateNestedManyWithoutProductOptionInput
  }

  export type ProductOptionUncheckedCreateInput = {
    id: string
    productId: string
    name: string
    type: string
    required?: boolean
    sortOrder?: number
    createdAt?: Date | string
    updatedAt: Date | string
    EventItemOption?: EventItemOptionUncheckedCreateNestedManyWithoutProductOptionInput
    OrderItemOption?: OrderItemOptionUncheckedCreateNestedManyWithoutProductOptionInput
    ProductOptionValue?: ProductOptionValueUncheckedCreateNestedManyWithoutProductOptionInput
  }

  export type ProductOptionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    required?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventItemOption?: EventItemOptionUpdateManyWithoutProductOptionNestedInput
    OrderItemOption?: OrderItemOptionUpdateManyWithoutProductOptionNestedInput
    Product?: ProductUpdateOneRequiredWithoutProductOptionNestedInput
    ProductOptionValue?: ProductOptionValueUpdateManyWithoutProductOptionNestedInput
  }

  export type ProductOptionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    required?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventItemOption?: EventItemOptionUncheckedUpdateManyWithoutProductOptionNestedInput
    OrderItemOption?: OrderItemOptionUncheckedUpdateManyWithoutProductOptionNestedInput
    ProductOptionValue?: ProductOptionValueUncheckedUpdateManyWithoutProductOptionNestedInput
  }

  export type ProductOptionCreateManyInput = {
    id: string
    productId: string
    name: string
    type: string
    required?: boolean
    sortOrder?: number
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ProductOptionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    required?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductOptionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    required?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductOptionValueCreateInput = {
    id: string
    value: string
    label?: string | null
    priceAdjustment?: number | null
    sortOrder?: number
    createdAt?: Date | string
    updatedAt: Date | string
    ProductOption: ProductOptionCreateNestedOneWithoutProductOptionValueInput
  }

  export type ProductOptionValueUncheckedCreateInput = {
    id: string
    optionId: string
    value: string
    label?: string | null
    priceAdjustment?: number | null
    sortOrder?: number
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ProductOptionValueUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: NullableFloatFieldUpdateOperationsInput | number | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ProductOption?: ProductOptionUpdateOneRequiredWithoutProductOptionValueNestedInput
  }

  export type ProductOptionValueUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    optionId?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: NullableFloatFieldUpdateOperationsInput | number | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductOptionValueCreateManyInput = {
    id: string
    optionId: string
    value: string
    label?: string | null
    priceAdjustment?: number | null
    sortOrder?: number
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ProductOptionValueUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: NullableFloatFieldUpdateOperationsInput | number | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductOptionValueUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    optionId?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: NullableFloatFieldUpdateOperationsInput | number | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserCreateInput = {
    id: string
    email: string
    firstName: string
    lastName: string
    password: string
    role?: string
    department?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    tasks?: tasksCreateNestedManyWithoutUserInput
    user_roles?: user_rolesCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id: string
    email: string
    firstName: string
    lastName: string
    password: string
    role?: string
    department?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    tasks?: tasksUncheckedCreateNestedManyWithoutUserInput
    user_roles?: user_rolesUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tasks?: tasksUpdateManyWithoutUserNestedInput
    user_roles?: user_rolesUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tasks?: tasksUncheckedUpdateManyWithoutUserNestedInput
    user_roles?: user_rolesUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id: string
    email: string
    firstName: string
    lastName: string
    password: string
    role?: string
    department?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type task_dependenciesCreateInput = {
    id: string
    createdAt?: Date | string
    tasks_task_dependencies_dependsOnTaskIdTotasks: tasksCreateNestedOneWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput
    tasks_task_dependencies_taskIdTotasks: tasksCreateNestedOneWithoutTask_dependencies_task_dependencies_taskIdTotasksInput
  }

  export type task_dependenciesUncheckedCreateInput = {
    id: string
    taskId: string
    dependsOnTaskId: string
    createdAt?: Date | string
  }

  export type task_dependenciesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tasks_task_dependencies_dependsOnTaskIdTotasks?: tasksUpdateOneRequiredWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksNestedInput
    tasks_task_dependencies_taskIdTotasks?: tasksUpdateOneRequiredWithoutTask_dependencies_task_dependencies_taskIdTotasksNestedInput
  }

  export type task_dependenciesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    taskId?: StringFieldUpdateOperationsInput | string
    dependsOnTaskId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type task_dependenciesCreateManyInput = {
    id: string
    taskId: string
    dependsOnTaskId: string
    createdAt?: Date | string
  }

  export type task_dependenciesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type task_dependenciesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    taskId?: StringFieldUpdateOperationsInput | string
    dependsOnTaskId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type task_templatesCreateInput = {
    id: string
    name: string
    description?: string | null
    estimatedDuration: number
    leadTimeHours?: number
    sequenceOrder?: number
    requiredRole?: string | null
    triggerCondition: $Enums.TaskTriggerCondition
    isMandatory?: boolean
    requiresCompletionBeforeNext?: boolean
    autoAssignToRole?: string | null
    notes?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    category?: string | null
    Product: ProductCreateNestedOneWithoutTask_templatesInput
    tasks?: tasksCreateNestedManyWithoutTask_templatesInput
  }

  export type task_templatesUncheckedCreateInput = {
    id: string
    productId: string
    name: string
    description?: string | null
    estimatedDuration: number
    leadTimeHours?: number
    sequenceOrder?: number
    requiredRole?: string | null
    triggerCondition: $Enums.TaskTriggerCondition
    isMandatory?: boolean
    requiresCompletionBeforeNext?: boolean
    autoAssignToRole?: string | null
    notes?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    category?: string | null
    tasks?: tasksUncheckedCreateNestedManyWithoutTask_templatesInput
  }

  export type task_templatesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDuration?: IntFieldUpdateOperationsInput | number
    leadTimeHours?: IntFieldUpdateOperationsInput | number
    sequenceOrder?: IntFieldUpdateOperationsInput | number
    requiredRole?: NullableStringFieldUpdateOperationsInput | string | null
    triggerCondition?: EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    requiresCompletionBeforeNext?: BoolFieldUpdateOperationsInput | boolean
    autoAssignToRole?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    Product?: ProductUpdateOneRequiredWithoutTask_templatesNestedInput
    tasks?: tasksUpdateManyWithoutTask_templatesNestedInput
  }

  export type task_templatesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDuration?: IntFieldUpdateOperationsInput | number
    leadTimeHours?: IntFieldUpdateOperationsInput | number
    sequenceOrder?: IntFieldUpdateOperationsInput | number
    requiredRole?: NullableStringFieldUpdateOperationsInput | string | null
    triggerCondition?: EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    requiresCompletionBeforeNext?: BoolFieldUpdateOperationsInput | boolean
    autoAssignToRole?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    tasks?: tasksUncheckedUpdateManyWithoutTask_templatesNestedInput
  }

  export type task_templatesCreateManyInput = {
    id: string
    productId: string
    name: string
    description?: string | null
    estimatedDuration: number
    leadTimeHours?: number
    sequenceOrder?: number
    requiredRole?: string | null
    triggerCondition: $Enums.TaskTriggerCondition
    isMandatory?: boolean
    requiresCompletionBeforeNext?: boolean
    autoAssignToRole?: string | null
    notes?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    category?: string | null
  }

  export type task_templatesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDuration?: IntFieldUpdateOperationsInput | number
    leadTimeHours?: IntFieldUpdateOperationsInput | number
    sequenceOrder?: IntFieldUpdateOperationsInput | number
    requiredRole?: NullableStringFieldUpdateOperationsInput | string | null
    triggerCondition?: EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    requiresCompletionBeforeNext?: BoolFieldUpdateOperationsInput | boolean
    autoAssignToRole?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type task_templatesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDuration?: IntFieldUpdateOperationsInput | number
    leadTimeHours?: IntFieldUpdateOperationsInput | number
    sequenceOrder?: IntFieldUpdateOperationsInput | number
    requiredRole?: NullableStringFieldUpdateOperationsInput | string | null
    triggerCondition?: EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    requiresCompletionBeforeNext?: BoolFieldUpdateOperationsInput | boolean
    autoAssignToRole?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tasksCreateInput = {
    id: string
    name: string
    description?: string | null
    category?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    dueDate?: Date | string | null
    startTime?: Date | string | null
    endTime?: Date | string | null
    estimatedDuration?: number | null
    actualDuration?: number | null
    actualStartTime?: Date | string | null
    actualEndTime?: Date | string | null
    completionNotes?: string | null
    requiresCustomerApproval?: boolean
    customerApprovedAt?: Date | string | null
    blockedReason?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesCreateNestedManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesCreateNestedManyWithoutTasks_task_dependencies_taskIdTotasksInput
    User?: UserCreateNestedOneWithoutTasksInput
    Event?: EventCreateNestedOneWithoutTasksInput
    Order?: OrderCreateNestedOneWithoutTasksInput
    Product?: ProductCreateNestedOneWithoutTasksInput
    task_templates?: task_templatesCreateNestedOneWithoutTasksInput
  }

  export type tasksUncheckedCreateInput = {
    id: string
    templateId?: string | null
    eventId?: string | null
    orderId?: string | null
    productId?: string | null
    assignedUserId?: string | null
    name: string
    description?: string | null
    category?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    dueDate?: Date | string | null
    startTime?: Date | string | null
    endTime?: Date | string | null
    estimatedDuration?: number | null
    actualDuration?: number | null
    actualStartTime?: Date | string | null
    actualEndTime?: Date | string | null
    completionNotes?: string | null
    requiresCustomerApproval?: boolean
    customerApprovedAt?: Date | string | null
    blockedReason?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesUncheckedCreateNestedManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesUncheckedCreateNestedManyWithoutTasks_task_dependencies_taskIdTotasksInput
  }

  export type tasksUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesUpdateManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksNestedInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesUpdateManyWithoutTasks_task_dependencies_taskIdTotasksNestedInput
    User?: UserUpdateOneWithoutTasksNestedInput
    Event?: EventUpdateOneWithoutTasksNestedInput
    Order?: OrderUpdateOneWithoutTasksNestedInput
    Product?: ProductUpdateOneWithoutTasksNestedInput
    task_templates?: task_templatesUpdateOneWithoutTasksNestedInput
  }

  export type tasksUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesUncheckedUpdateManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksNestedInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesUncheckedUpdateManyWithoutTasks_task_dependencies_taskIdTotasksNestedInput
  }

  export type tasksCreateManyInput = {
    id: string
    templateId?: string | null
    eventId?: string | null
    orderId?: string | null
    productId?: string | null
    assignedUserId?: string | null
    name: string
    description?: string | null
    category?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    dueDate?: Date | string | null
    startTime?: Date | string | null
    endTime?: Date | string | null
    estimatedDuration?: number | null
    actualDuration?: number | null
    actualStartTime?: Date | string | null
    actualEndTime?: Date | string | null
    completionNotes?: string | null
    requiresCustomerApproval?: boolean
    customerApprovedAt?: Date | string | null
    blockedReason?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type tasksUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tasksUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_rolesCreateInput = {
    id: string
    role: string
    department?: string | null
    isPrimary?: boolean
    createdAt?: Date | string
    User: UserCreateNestedOneWithoutUser_rolesInput
  }

  export type user_rolesUncheckedCreateInput = {
    id: string
    userId: string
    role: string
    department?: string | null
    isPrimary?: boolean
    createdAt?: Date | string
  }

  export type user_rolesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    User?: UserUpdateOneRequiredWithoutUser_rolesNestedInput
  }

  export type user_rolesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_rolesCreateManyInput = {
    id: string
    userId: string
    role: string
    department?: string | null
    isPrimary?: boolean
    createdAt?: Date | string
  }

  export type user_rolesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_rolesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type AccountCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    password?: SortOrder
    role?: SortOrder
    accessLevel?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AccountMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    password?: SortOrder
    role?: SortOrder
    accessLevel?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type AccountMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    password?: SortOrder
    role?: SortOrder
    accessLevel?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type EventListRelationFilter = {
    every?: EventWhereInput
    some?: EventWhereInput
    none?: EventWhereInput
  }

  export type OrderListRelationFilter = {
    every?: OrderWhereInput
    some?: OrderWhereInput
    none?: OrderWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type EventOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CustomerCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomerMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type CustomerMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type CustomerNullableScalarRelationFilter = {
    is?: CustomerWhereInput | null
    isNot?: CustomerWhereInput | null
  }

  export type EventItemListRelationFilter = {
    every?: EventItemWhereInput
    some?: EventItemWhereInput
    none?: EventItemWhereInput
  }

  export type EventStatusHistoryListRelationFilter = {
    every?: EventStatusHistoryWhereInput
    some?: EventStatusHistoryWhereInput
    none?: EventStatusHistoryWhereInput
  }

  export type TasksListRelationFilter = {
    every?: tasksWhereInput
    some?: tasksWhereInput
    none?: tasksWhereInput
  }

  export type EventItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EventStatusHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tasksOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EventCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    location?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    customerId?: SortOrder
    status?: SortOrder
    staffNotes?: SortOrder
    assignedStaffId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    customerNotes?: SortOrder
    depositAmount?: SortOrder
    depositPaid?: SortOrder
    endTime?: SortOrder
    finalPaymentPaid?: SortOrder
    reviewedAt?: SortOrder
    reviewedBy?: SortOrder
    stage?: SortOrder
    startTime?: SortOrder
    totalAmount?: SortOrder
  }

  export type EventAvgOrderByAggregateInput = {
    depositAmount?: SortOrder
    totalAmount?: SortOrder
  }

  export type EventMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    location?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    customerId?: SortOrder
    status?: SortOrder
    staffNotes?: SortOrder
    assignedStaffId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    customerNotes?: SortOrder
    depositAmount?: SortOrder
    depositPaid?: SortOrder
    endTime?: SortOrder
    finalPaymentPaid?: SortOrder
    reviewedAt?: SortOrder
    reviewedBy?: SortOrder
    stage?: SortOrder
    startTime?: SortOrder
    totalAmount?: SortOrder
  }

  export type EventMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    description?: SortOrder
    location?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    customerId?: SortOrder
    status?: SortOrder
    staffNotes?: SortOrder
    assignedStaffId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    customerNotes?: SortOrder
    depositAmount?: SortOrder
    depositPaid?: SortOrder
    endTime?: SortOrder
    finalPaymentPaid?: SortOrder
    reviewedAt?: SortOrder
    reviewedBy?: SortOrder
    stage?: SortOrder
    startTime?: SortOrder
    totalAmount?: SortOrder
  }

  export type EventSumOrderByAggregateInput = {
    depositAmount?: SortOrder
    totalAmount?: SortOrder
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type HeroSettingCountOrderByAggregateInput = {
    id?: SortOrder
    imageUrl?: SortOrder
    title?: SortOrder
    description?: SortOrder
    buttonText?: SortOrder
    buttonLink?: SortOrder
    textPosition?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HeroSettingMaxOrderByAggregateInput = {
    id?: SortOrder
    imageUrl?: SortOrder
    title?: SortOrder
    description?: SortOrder
    buttonText?: SortOrder
    buttonLink?: SortOrder
    textPosition?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type HeroSettingMinOrderByAggregateInput = {
    id?: SortOrder
    imageUrl?: SortOrder
    title?: SortOrder
    description?: SortOrder
    buttonText?: SortOrder
    buttonLink?: SortOrder
    textPosition?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type CustomerScalarRelationFilter = {
    is?: CustomerWhereInput
    isNot?: CustomerWhereInput
  }

  export type OrderItemListRelationFilter = {
    every?: OrderItemWhereInput
    some?: OrderItemWhereInput
    none?: OrderItemWhereInput
  }

  export type OrderStatusHistoryListRelationFilter = {
    every?: OrderStatusHistoryWhereInput
    some?: OrderStatusHistoryWhereInput
    none?: OrderStatusHistoryWhereInput
  }

  export type OrderItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderStatusHistoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderCountOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    totalAmount?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    assignedStaffId?: SortOrder
    billingAddress?: SortOrder
    customerNotes?: SortOrder
    deliveredAt?: SortOrder
    discountAmount?: SortOrder
    finalAmount?: SortOrder
    orderNumber?: SortOrder
    paymentStatus?: SortOrder
    reviewedAt?: SortOrder
    reviewedBy?: SortOrder
    shippedAt?: SortOrder
    shippingAddress?: SortOrder
    shippingAmount?: SortOrder
    staffNotes?: SortOrder
    stage?: SortOrder
    taxAmount?: SortOrder
  }

  export type OrderAvgOrderByAggregateInput = {
    totalAmount?: SortOrder
    discountAmount?: SortOrder
    finalAmount?: SortOrder
    shippingAmount?: SortOrder
    taxAmount?: SortOrder
  }

  export type OrderMaxOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    totalAmount?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    assignedStaffId?: SortOrder
    customerNotes?: SortOrder
    deliveredAt?: SortOrder
    discountAmount?: SortOrder
    finalAmount?: SortOrder
    orderNumber?: SortOrder
    paymentStatus?: SortOrder
    reviewedAt?: SortOrder
    reviewedBy?: SortOrder
    shippedAt?: SortOrder
    shippingAmount?: SortOrder
    staffNotes?: SortOrder
    stage?: SortOrder
    taxAmount?: SortOrder
  }

  export type OrderMinOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    totalAmount?: SortOrder
    status?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    assignedStaffId?: SortOrder
    customerNotes?: SortOrder
    deliveredAt?: SortOrder
    discountAmount?: SortOrder
    finalAmount?: SortOrder
    orderNumber?: SortOrder
    paymentStatus?: SortOrder
    reviewedAt?: SortOrder
    reviewedBy?: SortOrder
    shippedAt?: SortOrder
    shippingAmount?: SortOrder
    staffNotes?: SortOrder
    stage?: SortOrder
    taxAmount?: SortOrder
  }

  export type OrderSumOrderByAggregateInput = {
    totalAmount?: SortOrder
    discountAmount?: SortOrder
    finalAmount?: SortOrder
    shippingAmount?: SortOrder
    taxAmount?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type ProductCategoryNullableScalarRelationFilter = {
    is?: ProductCategoryWhereInput | null
    isNot?: ProductCategoryWhereInput | null
  }

  export type ProductOptionListRelationFilter = {
    every?: ProductOptionWhereInput
    some?: ProductOptionWhereInput
    none?: ProductOptionWhereInput
  }

  export type Task_templatesListRelationFilter = {
    every?: task_templatesWhereInput
    some?: task_templatesWhereInput
    none?: task_templatesWhereInput
  }

  export type ProductOptionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type task_templatesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    price?: SortOrder
    imageUrl?: SortOrder
    active?: SortOrder
    categoryId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    canBuy?: SortOrder
    canHire?: SortOrder
    hasRangePrice?: SortOrder
    hasUnitPrice?: SortOrder
    maxPrice?: SortOrder
    minPrice?: SortOrder
    minQuantity?: SortOrder
    unitPrice?: SortOrder
    unitType?: SortOrder
  }

  export type ProductAvgOrderByAggregateInput = {
    price?: SortOrder
    maxPrice?: SortOrder
    minPrice?: SortOrder
    minQuantity?: SortOrder
    unitPrice?: SortOrder
  }

  export type ProductMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    price?: SortOrder
    imageUrl?: SortOrder
    active?: SortOrder
    categoryId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    canBuy?: SortOrder
    canHire?: SortOrder
    hasRangePrice?: SortOrder
    hasUnitPrice?: SortOrder
    maxPrice?: SortOrder
    minPrice?: SortOrder
    minQuantity?: SortOrder
    unitPrice?: SortOrder
    unitType?: SortOrder
  }

  export type ProductMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    price?: SortOrder
    imageUrl?: SortOrder
    active?: SortOrder
    categoryId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    canBuy?: SortOrder
    canHire?: SortOrder
    hasRangePrice?: SortOrder
    hasUnitPrice?: SortOrder
    maxPrice?: SortOrder
    minPrice?: SortOrder
    minQuantity?: SortOrder
    unitPrice?: SortOrder
    unitType?: SortOrder
  }

  export type ProductSumOrderByAggregateInput = {
    price?: SortOrder
    maxPrice?: SortOrder
    minPrice?: SortOrder
    minQuantity?: SortOrder
    unitPrice?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type StaffInvitationCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    role?: SortOrder
    accessLevel?: SortOrder
    token?: SortOrder
    used?: SortOrder
    usedAt?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
  }

  export type StaffInvitationMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    role?: SortOrder
    accessLevel?: SortOrder
    token?: SortOrder
    used?: SortOrder
    usedAt?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
  }

  export type StaffInvitationMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    role?: SortOrder
    accessLevel?: SortOrder
    token?: SortOrder
    used?: SortOrder
    usedAt?: SortOrder
    createdAt?: SortOrder
    expiresAt?: SortOrder
  }

  export type ProductListRelationFilter = {
    every?: ProductWhereInput
    some?: ProductWhereInput
    none?: ProductWhereInput
  }

  export type ProductOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductCategoryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductCategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductCategoryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type EventScalarRelationFilter = {
    is?: EventWhereInput
    isNot?: EventWhereInput
  }

  export type ProductScalarRelationFilter = {
    is?: ProductWhereInput
    isNot?: ProductWhereInput
  }

  export type EventItemOptionListRelationFilter = {
    every?: EventItemOptionWhereInput
    some?: EventItemOptionWhereInput
    none?: EventItemOptionWhereInput
  }

  export type EventItemOptionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type EventItemCountOrderByAggregateInput = {
    id?: SortOrder
    eventId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EventItemAvgOrderByAggregateInput = {
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
  }

  export type EventItemMaxOrderByAggregateInput = {
    id?: SortOrder
    eventId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EventItemMinOrderByAggregateInput = {
    id?: SortOrder
    eventId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type EventItemSumOrderByAggregateInput = {
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type EventItemScalarRelationFilter = {
    is?: EventItemWhereInput
    isNot?: EventItemWhereInput
  }

  export type ProductOptionScalarRelationFilter = {
    is?: ProductOptionWhereInput
    isNot?: ProductOptionWhereInput
  }

  export type EventItemOptionCountOrderByAggregateInput = {
    id?: SortOrder
    eventItemId?: SortOrder
    optionId?: SortOrder
    optionName?: SortOrder
    value?: SortOrder
    label?: SortOrder
    priceAdjustment?: SortOrder
    createdAt?: SortOrder
  }

  export type EventItemOptionAvgOrderByAggregateInput = {
    priceAdjustment?: SortOrder
  }

  export type EventItemOptionMaxOrderByAggregateInput = {
    id?: SortOrder
    eventItemId?: SortOrder
    optionId?: SortOrder
    optionName?: SortOrder
    value?: SortOrder
    label?: SortOrder
    priceAdjustment?: SortOrder
    createdAt?: SortOrder
  }

  export type EventItemOptionMinOrderByAggregateInput = {
    id?: SortOrder
    eventItemId?: SortOrder
    optionId?: SortOrder
    optionName?: SortOrder
    value?: SortOrder
    label?: SortOrder
    priceAdjustment?: SortOrder
    createdAt?: SortOrder
  }

  export type EventItemOptionSumOrderByAggregateInput = {
    priceAdjustment?: SortOrder
  }

  export type EventStatusHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    eventId?: SortOrder
    fromStatus?: SortOrder
    toStatus?: SortOrder
    fromStage?: SortOrder
    toStage?: SortOrder
    notes?: SortOrder
    changedBy?: SortOrder
    changedAt?: SortOrder
  }

  export type EventStatusHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    eventId?: SortOrder
    fromStatus?: SortOrder
    toStatus?: SortOrder
    fromStage?: SortOrder
    toStage?: SortOrder
    notes?: SortOrder
    changedBy?: SortOrder
    changedAt?: SortOrder
  }

  export type EventStatusHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    eventId?: SortOrder
    fromStatus?: SortOrder
    toStatus?: SortOrder
    fromStage?: SortOrder
    toStage?: SortOrder
    notes?: SortOrder
    changedBy?: SortOrder
    changedAt?: SortOrder
  }

  export type OrderScalarRelationFilter = {
    is?: OrderWhereInput
    isNot?: OrderWhereInput
  }

  export type OrderItemOptionListRelationFilter = {
    every?: OrderItemOptionWhereInput
    some?: OrderItemOptionWhereInput
    none?: OrderItemOptionWhereInput
  }

  export type OrderItemOptionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderItemCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderItemAvgOrderByAggregateInput = {
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
  }

  export type OrderItemMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderItemMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    notes?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type OrderItemSumOrderByAggregateInput = {
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
  }

  export type OrderItemScalarRelationFilter = {
    is?: OrderItemWhereInput
    isNot?: OrderItemWhereInput
  }

  export type OrderItemOptionCountOrderByAggregateInput = {
    id?: SortOrder
    orderItemId?: SortOrder
    optionId?: SortOrder
    optionName?: SortOrder
    value?: SortOrder
    label?: SortOrder
    priceAdjustment?: SortOrder
    createdAt?: SortOrder
  }

  export type OrderItemOptionAvgOrderByAggregateInput = {
    priceAdjustment?: SortOrder
  }

  export type OrderItemOptionMaxOrderByAggregateInput = {
    id?: SortOrder
    orderItemId?: SortOrder
    optionId?: SortOrder
    optionName?: SortOrder
    value?: SortOrder
    label?: SortOrder
    priceAdjustment?: SortOrder
    createdAt?: SortOrder
  }

  export type OrderItemOptionMinOrderByAggregateInput = {
    id?: SortOrder
    orderItemId?: SortOrder
    optionId?: SortOrder
    optionName?: SortOrder
    value?: SortOrder
    label?: SortOrder
    priceAdjustment?: SortOrder
    createdAt?: SortOrder
  }

  export type OrderItemOptionSumOrderByAggregateInput = {
    priceAdjustment?: SortOrder
  }

  export type OrderStatusHistoryCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    fromStatus?: SortOrder
    toStatus?: SortOrder
    fromStage?: SortOrder
    toStage?: SortOrder
    notes?: SortOrder
    changedBy?: SortOrder
    changedAt?: SortOrder
  }

  export type OrderStatusHistoryMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    fromStatus?: SortOrder
    toStatus?: SortOrder
    fromStage?: SortOrder
    toStage?: SortOrder
    notes?: SortOrder
    changedBy?: SortOrder
    changedAt?: SortOrder
  }

  export type OrderStatusHistoryMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    fromStatus?: SortOrder
    toStatus?: SortOrder
    fromStage?: SortOrder
    toStage?: SortOrder
    notes?: SortOrder
    changedBy?: SortOrder
    changedAt?: SortOrder
  }

  export type ProductOptionValueListRelationFilter = {
    every?: ProductOptionValueWhereInput
    some?: ProductOptionValueWhereInput
    none?: ProductOptionValueWhereInput
  }

  export type ProductOptionValueOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductOptionCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    name?: SortOrder
    type?: SortOrder
    required?: SortOrder
    sortOrder?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductOptionAvgOrderByAggregateInput = {
    sortOrder?: SortOrder
  }

  export type ProductOptionMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    name?: SortOrder
    type?: SortOrder
    required?: SortOrder
    sortOrder?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductOptionMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    name?: SortOrder
    type?: SortOrder
    required?: SortOrder
    sortOrder?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductOptionSumOrderByAggregateInput = {
    sortOrder?: SortOrder
  }

  export type ProductOptionValueCountOrderByAggregateInput = {
    id?: SortOrder
    optionId?: SortOrder
    value?: SortOrder
    label?: SortOrder
    priceAdjustment?: SortOrder
    sortOrder?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductOptionValueAvgOrderByAggregateInput = {
    priceAdjustment?: SortOrder
    sortOrder?: SortOrder
  }

  export type ProductOptionValueMaxOrderByAggregateInput = {
    id?: SortOrder
    optionId?: SortOrder
    value?: SortOrder
    label?: SortOrder
    priceAdjustment?: SortOrder
    sortOrder?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductOptionValueMinOrderByAggregateInput = {
    id?: SortOrder
    optionId?: SortOrder
    value?: SortOrder
    label?: SortOrder
    priceAdjustment?: SortOrder
    sortOrder?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductOptionValueSumOrderByAggregateInput = {
    priceAdjustment?: SortOrder
    sortOrder?: SortOrder
  }

  export type User_rolesListRelationFilter = {
    every?: user_rolesWhereInput
    some?: user_rolesWhereInput
    none?: user_rolesWhereInput
  }

  export type user_rolesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    password?: SortOrder
    role?: SortOrder
    department?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    password?: SortOrder
    role?: SortOrder
    department?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    email?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    password?: SortOrder
    role?: SortOrder
    department?: SortOrder
    active?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type TasksScalarRelationFilter = {
    is?: tasksWhereInput
    isNot?: tasksWhereInput
  }

  export type task_dependenciesCountOrderByAggregateInput = {
    id?: SortOrder
    taskId?: SortOrder
    dependsOnTaskId?: SortOrder
    createdAt?: SortOrder
  }

  export type task_dependenciesMaxOrderByAggregateInput = {
    id?: SortOrder
    taskId?: SortOrder
    dependsOnTaskId?: SortOrder
    createdAt?: SortOrder
  }

  export type task_dependenciesMinOrderByAggregateInput = {
    id?: SortOrder
    taskId?: SortOrder
    dependsOnTaskId?: SortOrder
    createdAt?: SortOrder
  }

  export type EnumTaskTriggerConditionFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskTriggerCondition | EnumTaskTriggerConditionFieldRefInput<$PrismaModel>
    in?: $Enums.TaskTriggerCondition[] | ListEnumTaskTriggerConditionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskTriggerCondition[] | ListEnumTaskTriggerConditionFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskTriggerConditionFilter<$PrismaModel> | $Enums.TaskTriggerCondition
  }

  export type task_templatesCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    estimatedDuration?: SortOrder
    leadTimeHours?: SortOrder
    sequenceOrder?: SortOrder
    requiredRole?: SortOrder
    triggerCondition?: SortOrder
    isMandatory?: SortOrder
    requiresCompletionBeforeNext?: SortOrder
    autoAssignToRole?: SortOrder
    notes?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    category?: SortOrder
  }

  export type task_templatesAvgOrderByAggregateInput = {
    estimatedDuration?: SortOrder
    leadTimeHours?: SortOrder
    sequenceOrder?: SortOrder
  }

  export type task_templatesMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    estimatedDuration?: SortOrder
    leadTimeHours?: SortOrder
    sequenceOrder?: SortOrder
    requiredRole?: SortOrder
    triggerCondition?: SortOrder
    isMandatory?: SortOrder
    requiresCompletionBeforeNext?: SortOrder
    autoAssignToRole?: SortOrder
    notes?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    category?: SortOrder
  }

  export type task_templatesMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    estimatedDuration?: SortOrder
    leadTimeHours?: SortOrder
    sequenceOrder?: SortOrder
    requiredRole?: SortOrder
    triggerCondition?: SortOrder
    isMandatory?: SortOrder
    requiresCompletionBeforeNext?: SortOrder
    autoAssignToRole?: SortOrder
    notes?: SortOrder
    isActive?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    category?: SortOrder
  }

  export type task_templatesSumOrderByAggregateInput = {
    estimatedDuration?: SortOrder
    leadTimeHours?: SortOrder
    sequenceOrder?: SortOrder
  }

  export type EnumTaskTriggerConditionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskTriggerCondition | EnumTaskTriggerConditionFieldRefInput<$PrismaModel>
    in?: $Enums.TaskTriggerCondition[] | ListEnumTaskTriggerConditionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskTriggerCondition[] | ListEnumTaskTriggerConditionFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskTriggerConditionWithAggregatesFilter<$PrismaModel> | $Enums.TaskTriggerCondition
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTaskTriggerConditionFilter<$PrismaModel>
    _max?: NestedEnumTaskTriggerConditionFilter<$PrismaModel>
  }

  export type EnumTaskStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskStatus | EnumTaskStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskStatusFilter<$PrismaModel> | $Enums.TaskStatus
  }

  export type EnumTaskPriorityFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskPriority | EnumTaskPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.TaskPriority[] | ListEnumTaskPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskPriority[] | ListEnumTaskPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskPriorityFilter<$PrismaModel> | $Enums.TaskPriority
  }

  export type Task_dependenciesListRelationFilter = {
    every?: task_dependenciesWhereInput
    some?: task_dependenciesWhereInput
    none?: task_dependenciesWhereInput
  }

  export type UserNullableScalarRelationFilter = {
    is?: UserWhereInput | null
    isNot?: UserWhereInput | null
  }

  export type EventNullableScalarRelationFilter = {
    is?: EventWhereInput | null
    isNot?: EventWhereInput | null
  }

  export type OrderNullableScalarRelationFilter = {
    is?: OrderWhereInput | null
    isNot?: OrderWhereInput | null
  }

  export type ProductNullableScalarRelationFilter = {
    is?: ProductWhereInput | null
    isNot?: ProductWhereInput | null
  }

  export type Task_templatesNullableScalarRelationFilter = {
    is?: task_templatesWhereInput | null
    isNot?: task_templatesWhereInput | null
  }

  export type task_dependenciesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type tasksCountOrderByAggregateInput = {
    id?: SortOrder
    templateId?: SortOrder
    eventId?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    assignedUserId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    category?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    dueDate?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
    estimatedDuration?: SortOrder
    actualDuration?: SortOrder
    actualStartTime?: SortOrder
    actualEndTime?: SortOrder
    completionNotes?: SortOrder
    requiresCustomerApproval?: SortOrder
    customerApprovedAt?: SortOrder
    blockedReason?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type tasksAvgOrderByAggregateInput = {
    estimatedDuration?: SortOrder
    actualDuration?: SortOrder
  }

  export type tasksMaxOrderByAggregateInput = {
    id?: SortOrder
    templateId?: SortOrder
    eventId?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    assignedUserId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    category?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    dueDate?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
    estimatedDuration?: SortOrder
    actualDuration?: SortOrder
    actualStartTime?: SortOrder
    actualEndTime?: SortOrder
    completionNotes?: SortOrder
    requiresCustomerApproval?: SortOrder
    customerApprovedAt?: SortOrder
    blockedReason?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type tasksMinOrderByAggregateInput = {
    id?: SortOrder
    templateId?: SortOrder
    eventId?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    assignedUserId?: SortOrder
    name?: SortOrder
    description?: SortOrder
    category?: SortOrder
    status?: SortOrder
    priority?: SortOrder
    dueDate?: SortOrder
    startTime?: SortOrder
    endTime?: SortOrder
    estimatedDuration?: SortOrder
    actualDuration?: SortOrder
    actualStartTime?: SortOrder
    actualEndTime?: SortOrder
    completionNotes?: SortOrder
    requiresCustomerApproval?: SortOrder
    customerApprovedAt?: SortOrder
    blockedReason?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type tasksSumOrderByAggregateInput = {
    estimatedDuration?: SortOrder
    actualDuration?: SortOrder
  }

  export type EnumTaskStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskStatus | EnumTaskStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskStatusWithAggregatesFilter<$PrismaModel> | $Enums.TaskStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTaskStatusFilter<$PrismaModel>
    _max?: NestedEnumTaskStatusFilter<$PrismaModel>
  }

  export type EnumTaskPriorityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskPriority | EnumTaskPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.TaskPriority[] | ListEnumTaskPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskPriority[] | ListEnumTaskPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskPriorityWithAggregatesFilter<$PrismaModel> | $Enums.TaskPriority
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTaskPriorityFilter<$PrismaModel>
    _max?: NestedEnumTaskPriorityFilter<$PrismaModel>
  }

  export type UserScalarRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type user_rolesCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    department?: SortOrder
    isPrimary?: SortOrder
    createdAt?: SortOrder
  }

  export type user_rolesMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    department?: SortOrder
    isPrimary?: SortOrder
    createdAt?: SortOrder
  }

  export type user_rolesMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    role?: SortOrder
    department?: SortOrder
    isPrimary?: SortOrder
    createdAt?: SortOrder
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type EventCreateNestedManyWithoutCustomerInput = {
    create?: XOR<EventCreateWithoutCustomerInput, EventUncheckedCreateWithoutCustomerInput> | EventCreateWithoutCustomerInput[] | EventUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: EventCreateOrConnectWithoutCustomerInput | EventCreateOrConnectWithoutCustomerInput[]
    createMany?: EventCreateManyCustomerInputEnvelope
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
  }

  export type OrderCreateNestedManyWithoutCustomerInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type EventUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<EventCreateWithoutCustomerInput, EventUncheckedCreateWithoutCustomerInput> | EventCreateWithoutCustomerInput[] | EventUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: EventCreateOrConnectWithoutCustomerInput | EventCreateOrConnectWithoutCustomerInput[]
    createMany?: EventCreateManyCustomerInputEnvelope
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type EventUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<EventCreateWithoutCustomerInput, EventUncheckedCreateWithoutCustomerInput> | EventCreateWithoutCustomerInput[] | EventUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: EventCreateOrConnectWithoutCustomerInput | EventCreateOrConnectWithoutCustomerInput[]
    upsert?: EventUpsertWithWhereUniqueWithoutCustomerInput | EventUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: EventCreateManyCustomerInputEnvelope
    set?: EventWhereUniqueInput | EventWhereUniqueInput[]
    disconnect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    delete?: EventWhereUniqueInput | EventWhereUniqueInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    update?: EventUpdateWithWhereUniqueWithoutCustomerInput | EventUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: EventUpdateManyWithWhereWithoutCustomerInput | EventUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: EventScalarWhereInput | EventScalarWhereInput[]
  }

  export type OrderUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCustomerInput | OrderUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCustomerInput | OrderUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCustomerInput | OrderUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type EventUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<EventCreateWithoutCustomerInput, EventUncheckedCreateWithoutCustomerInput> | EventCreateWithoutCustomerInput[] | EventUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: EventCreateOrConnectWithoutCustomerInput | EventCreateOrConnectWithoutCustomerInput[]
    upsert?: EventUpsertWithWhereUniqueWithoutCustomerInput | EventUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: EventCreateManyCustomerInputEnvelope
    set?: EventWhereUniqueInput | EventWhereUniqueInput[]
    disconnect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    delete?: EventWhereUniqueInput | EventWhereUniqueInput[]
    connect?: EventWhereUniqueInput | EventWhereUniqueInput[]
    update?: EventUpdateWithWhereUniqueWithoutCustomerInput | EventUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: EventUpdateManyWithWhereWithoutCustomerInput | EventUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: EventScalarWhereInput | EventScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCustomerInput | OrderUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCustomerInput | OrderUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCustomerInput | OrderUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type CustomerCreateNestedOneWithoutEventInput = {
    create?: XOR<CustomerCreateWithoutEventInput, CustomerUncheckedCreateWithoutEventInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutEventInput
    connect?: CustomerWhereUniqueInput
  }

  export type EventItemCreateNestedManyWithoutEventInput = {
    create?: XOR<EventItemCreateWithoutEventInput, EventItemUncheckedCreateWithoutEventInput> | EventItemCreateWithoutEventInput[] | EventItemUncheckedCreateWithoutEventInput[]
    connectOrCreate?: EventItemCreateOrConnectWithoutEventInput | EventItemCreateOrConnectWithoutEventInput[]
    createMany?: EventItemCreateManyEventInputEnvelope
    connect?: EventItemWhereUniqueInput | EventItemWhereUniqueInput[]
  }

  export type EventStatusHistoryCreateNestedManyWithoutEventInput = {
    create?: XOR<EventStatusHistoryCreateWithoutEventInput, EventStatusHistoryUncheckedCreateWithoutEventInput> | EventStatusHistoryCreateWithoutEventInput[] | EventStatusHistoryUncheckedCreateWithoutEventInput[]
    connectOrCreate?: EventStatusHistoryCreateOrConnectWithoutEventInput | EventStatusHistoryCreateOrConnectWithoutEventInput[]
    createMany?: EventStatusHistoryCreateManyEventInputEnvelope
    connect?: EventStatusHistoryWhereUniqueInput | EventStatusHistoryWhereUniqueInput[]
  }

  export type tasksCreateNestedManyWithoutEventInput = {
    create?: XOR<tasksCreateWithoutEventInput, tasksUncheckedCreateWithoutEventInput> | tasksCreateWithoutEventInput[] | tasksUncheckedCreateWithoutEventInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutEventInput | tasksCreateOrConnectWithoutEventInput[]
    createMany?: tasksCreateManyEventInputEnvelope
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
  }

  export type EventItemUncheckedCreateNestedManyWithoutEventInput = {
    create?: XOR<EventItemCreateWithoutEventInput, EventItemUncheckedCreateWithoutEventInput> | EventItemCreateWithoutEventInput[] | EventItemUncheckedCreateWithoutEventInput[]
    connectOrCreate?: EventItemCreateOrConnectWithoutEventInput | EventItemCreateOrConnectWithoutEventInput[]
    createMany?: EventItemCreateManyEventInputEnvelope
    connect?: EventItemWhereUniqueInput | EventItemWhereUniqueInput[]
  }

  export type EventStatusHistoryUncheckedCreateNestedManyWithoutEventInput = {
    create?: XOR<EventStatusHistoryCreateWithoutEventInput, EventStatusHistoryUncheckedCreateWithoutEventInput> | EventStatusHistoryCreateWithoutEventInput[] | EventStatusHistoryUncheckedCreateWithoutEventInput[]
    connectOrCreate?: EventStatusHistoryCreateOrConnectWithoutEventInput | EventStatusHistoryCreateOrConnectWithoutEventInput[]
    createMany?: EventStatusHistoryCreateManyEventInputEnvelope
    connect?: EventStatusHistoryWhereUniqueInput | EventStatusHistoryWhereUniqueInput[]
  }

  export type tasksUncheckedCreateNestedManyWithoutEventInput = {
    create?: XOR<tasksCreateWithoutEventInput, tasksUncheckedCreateWithoutEventInput> | tasksCreateWithoutEventInput[] | tasksUncheckedCreateWithoutEventInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutEventInput | tasksCreateOrConnectWithoutEventInput[]
    createMany?: tasksCreateManyEventInputEnvelope
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CustomerUpdateOneWithoutEventNestedInput = {
    create?: XOR<CustomerCreateWithoutEventInput, CustomerUncheckedCreateWithoutEventInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutEventInput
    upsert?: CustomerUpsertWithoutEventInput
    disconnect?: CustomerWhereInput | boolean
    delete?: CustomerWhereInput | boolean
    connect?: CustomerWhereUniqueInput
    update?: XOR<XOR<CustomerUpdateToOneWithWhereWithoutEventInput, CustomerUpdateWithoutEventInput>, CustomerUncheckedUpdateWithoutEventInput>
  }

  export type EventItemUpdateManyWithoutEventNestedInput = {
    create?: XOR<EventItemCreateWithoutEventInput, EventItemUncheckedCreateWithoutEventInput> | EventItemCreateWithoutEventInput[] | EventItemUncheckedCreateWithoutEventInput[]
    connectOrCreate?: EventItemCreateOrConnectWithoutEventInput | EventItemCreateOrConnectWithoutEventInput[]
    upsert?: EventItemUpsertWithWhereUniqueWithoutEventInput | EventItemUpsertWithWhereUniqueWithoutEventInput[]
    createMany?: EventItemCreateManyEventInputEnvelope
    set?: EventItemWhereUniqueInput | EventItemWhereUniqueInput[]
    disconnect?: EventItemWhereUniqueInput | EventItemWhereUniqueInput[]
    delete?: EventItemWhereUniqueInput | EventItemWhereUniqueInput[]
    connect?: EventItemWhereUniqueInput | EventItemWhereUniqueInput[]
    update?: EventItemUpdateWithWhereUniqueWithoutEventInput | EventItemUpdateWithWhereUniqueWithoutEventInput[]
    updateMany?: EventItemUpdateManyWithWhereWithoutEventInput | EventItemUpdateManyWithWhereWithoutEventInput[]
    deleteMany?: EventItemScalarWhereInput | EventItemScalarWhereInput[]
  }

  export type EventStatusHistoryUpdateManyWithoutEventNestedInput = {
    create?: XOR<EventStatusHistoryCreateWithoutEventInput, EventStatusHistoryUncheckedCreateWithoutEventInput> | EventStatusHistoryCreateWithoutEventInput[] | EventStatusHistoryUncheckedCreateWithoutEventInput[]
    connectOrCreate?: EventStatusHistoryCreateOrConnectWithoutEventInput | EventStatusHistoryCreateOrConnectWithoutEventInput[]
    upsert?: EventStatusHistoryUpsertWithWhereUniqueWithoutEventInput | EventStatusHistoryUpsertWithWhereUniqueWithoutEventInput[]
    createMany?: EventStatusHistoryCreateManyEventInputEnvelope
    set?: EventStatusHistoryWhereUniqueInput | EventStatusHistoryWhereUniqueInput[]
    disconnect?: EventStatusHistoryWhereUniqueInput | EventStatusHistoryWhereUniqueInput[]
    delete?: EventStatusHistoryWhereUniqueInput | EventStatusHistoryWhereUniqueInput[]
    connect?: EventStatusHistoryWhereUniqueInput | EventStatusHistoryWhereUniqueInput[]
    update?: EventStatusHistoryUpdateWithWhereUniqueWithoutEventInput | EventStatusHistoryUpdateWithWhereUniqueWithoutEventInput[]
    updateMany?: EventStatusHistoryUpdateManyWithWhereWithoutEventInput | EventStatusHistoryUpdateManyWithWhereWithoutEventInput[]
    deleteMany?: EventStatusHistoryScalarWhereInput | EventStatusHistoryScalarWhereInput[]
  }

  export type tasksUpdateManyWithoutEventNestedInput = {
    create?: XOR<tasksCreateWithoutEventInput, tasksUncheckedCreateWithoutEventInput> | tasksCreateWithoutEventInput[] | tasksUncheckedCreateWithoutEventInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutEventInput | tasksCreateOrConnectWithoutEventInput[]
    upsert?: tasksUpsertWithWhereUniqueWithoutEventInput | tasksUpsertWithWhereUniqueWithoutEventInput[]
    createMany?: tasksCreateManyEventInputEnvelope
    set?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    disconnect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    delete?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    update?: tasksUpdateWithWhereUniqueWithoutEventInput | tasksUpdateWithWhereUniqueWithoutEventInput[]
    updateMany?: tasksUpdateManyWithWhereWithoutEventInput | tasksUpdateManyWithWhereWithoutEventInput[]
    deleteMany?: tasksScalarWhereInput | tasksScalarWhereInput[]
  }

  export type EventItemUncheckedUpdateManyWithoutEventNestedInput = {
    create?: XOR<EventItemCreateWithoutEventInput, EventItemUncheckedCreateWithoutEventInput> | EventItemCreateWithoutEventInput[] | EventItemUncheckedCreateWithoutEventInput[]
    connectOrCreate?: EventItemCreateOrConnectWithoutEventInput | EventItemCreateOrConnectWithoutEventInput[]
    upsert?: EventItemUpsertWithWhereUniqueWithoutEventInput | EventItemUpsertWithWhereUniqueWithoutEventInput[]
    createMany?: EventItemCreateManyEventInputEnvelope
    set?: EventItemWhereUniqueInput | EventItemWhereUniqueInput[]
    disconnect?: EventItemWhereUniqueInput | EventItemWhereUniqueInput[]
    delete?: EventItemWhereUniqueInput | EventItemWhereUniqueInput[]
    connect?: EventItemWhereUniqueInput | EventItemWhereUniqueInput[]
    update?: EventItemUpdateWithWhereUniqueWithoutEventInput | EventItemUpdateWithWhereUniqueWithoutEventInput[]
    updateMany?: EventItemUpdateManyWithWhereWithoutEventInput | EventItemUpdateManyWithWhereWithoutEventInput[]
    deleteMany?: EventItemScalarWhereInput | EventItemScalarWhereInput[]
  }

  export type EventStatusHistoryUncheckedUpdateManyWithoutEventNestedInput = {
    create?: XOR<EventStatusHistoryCreateWithoutEventInput, EventStatusHistoryUncheckedCreateWithoutEventInput> | EventStatusHistoryCreateWithoutEventInput[] | EventStatusHistoryUncheckedCreateWithoutEventInput[]
    connectOrCreate?: EventStatusHistoryCreateOrConnectWithoutEventInput | EventStatusHistoryCreateOrConnectWithoutEventInput[]
    upsert?: EventStatusHistoryUpsertWithWhereUniqueWithoutEventInput | EventStatusHistoryUpsertWithWhereUniqueWithoutEventInput[]
    createMany?: EventStatusHistoryCreateManyEventInputEnvelope
    set?: EventStatusHistoryWhereUniqueInput | EventStatusHistoryWhereUniqueInput[]
    disconnect?: EventStatusHistoryWhereUniqueInput | EventStatusHistoryWhereUniqueInput[]
    delete?: EventStatusHistoryWhereUniqueInput | EventStatusHistoryWhereUniqueInput[]
    connect?: EventStatusHistoryWhereUniqueInput | EventStatusHistoryWhereUniqueInput[]
    update?: EventStatusHistoryUpdateWithWhereUniqueWithoutEventInput | EventStatusHistoryUpdateWithWhereUniqueWithoutEventInput[]
    updateMany?: EventStatusHistoryUpdateManyWithWhereWithoutEventInput | EventStatusHistoryUpdateManyWithWhereWithoutEventInput[]
    deleteMany?: EventStatusHistoryScalarWhereInput | EventStatusHistoryScalarWhereInput[]
  }

  export type tasksUncheckedUpdateManyWithoutEventNestedInput = {
    create?: XOR<tasksCreateWithoutEventInput, tasksUncheckedCreateWithoutEventInput> | tasksCreateWithoutEventInput[] | tasksUncheckedCreateWithoutEventInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutEventInput | tasksCreateOrConnectWithoutEventInput[]
    upsert?: tasksUpsertWithWhereUniqueWithoutEventInput | tasksUpsertWithWhereUniqueWithoutEventInput[]
    createMany?: tasksCreateManyEventInputEnvelope
    set?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    disconnect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    delete?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    update?: tasksUpdateWithWhereUniqueWithoutEventInput | tasksUpdateWithWhereUniqueWithoutEventInput[]
    updateMany?: tasksUpdateManyWithWhereWithoutEventInput | tasksUpdateManyWithWhereWithoutEventInput[]
    deleteMany?: tasksScalarWhereInput | tasksScalarWhereInput[]
  }

  export type CustomerCreateNestedOneWithoutOrderInput = {
    create?: XOR<CustomerCreateWithoutOrderInput, CustomerUncheckedCreateWithoutOrderInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutOrderInput
    connect?: CustomerWhereUniqueInput
  }

  export type OrderItemCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type OrderStatusHistoryCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderStatusHistoryCreateWithoutOrderInput, OrderStatusHistoryUncheckedCreateWithoutOrderInput> | OrderStatusHistoryCreateWithoutOrderInput[] | OrderStatusHistoryUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderStatusHistoryCreateOrConnectWithoutOrderInput | OrderStatusHistoryCreateOrConnectWithoutOrderInput[]
    createMany?: OrderStatusHistoryCreateManyOrderInputEnvelope
    connect?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
  }

  export type tasksCreateNestedManyWithoutOrderInput = {
    create?: XOR<tasksCreateWithoutOrderInput, tasksUncheckedCreateWithoutOrderInput> | tasksCreateWithoutOrderInput[] | tasksUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutOrderInput | tasksCreateOrConnectWithoutOrderInput[]
    createMany?: tasksCreateManyOrderInputEnvelope
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
  }

  export type OrderItemUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type OrderStatusHistoryUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderStatusHistoryCreateWithoutOrderInput, OrderStatusHistoryUncheckedCreateWithoutOrderInput> | OrderStatusHistoryCreateWithoutOrderInput[] | OrderStatusHistoryUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderStatusHistoryCreateOrConnectWithoutOrderInput | OrderStatusHistoryCreateOrConnectWithoutOrderInput[]
    createMany?: OrderStatusHistoryCreateManyOrderInputEnvelope
    connect?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
  }

  export type tasksUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<tasksCreateWithoutOrderInput, tasksUncheckedCreateWithoutOrderInput> | tasksCreateWithoutOrderInput[] | tasksUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutOrderInput | tasksCreateOrConnectWithoutOrderInput[]
    createMany?: tasksCreateManyOrderInputEnvelope
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type CustomerUpdateOneRequiredWithoutOrderNestedInput = {
    create?: XOR<CustomerCreateWithoutOrderInput, CustomerUncheckedCreateWithoutOrderInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutOrderInput
    upsert?: CustomerUpsertWithoutOrderInput
    connect?: CustomerWhereUniqueInput
    update?: XOR<XOR<CustomerUpdateToOneWithWhereWithoutOrderInput, CustomerUpdateWithoutOrderInput>, CustomerUncheckedUpdateWithoutOrderInput>
  }

  export type OrderItemUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutOrderInput | OrderItemUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutOrderInput | OrderItemUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutOrderInput | OrderItemUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type OrderStatusHistoryUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderStatusHistoryCreateWithoutOrderInput, OrderStatusHistoryUncheckedCreateWithoutOrderInput> | OrderStatusHistoryCreateWithoutOrderInput[] | OrderStatusHistoryUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderStatusHistoryCreateOrConnectWithoutOrderInput | OrderStatusHistoryCreateOrConnectWithoutOrderInput[]
    upsert?: OrderStatusHistoryUpsertWithWhereUniqueWithoutOrderInput | OrderStatusHistoryUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderStatusHistoryCreateManyOrderInputEnvelope
    set?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    disconnect?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    delete?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    connect?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    update?: OrderStatusHistoryUpdateWithWhereUniqueWithoutOrderInput | OrderStatusHistoryUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderStatusHistoryUpdateManyWithWhereWithoutOrderInput | OrderStatusHistoryUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderStatusHistoryScalarWhereInput | OrderStatusHistoryScalarWhereInput[]
  }

  export type tasksUpdateManyWithoutOrderNestedInput = {
    create?: XOR<tasksCreateWithoutOrderInput, tasksUncheckedCreateWithoutOrderInput> | tasksCreateWithoutOrderInput[] | tasksUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutOrderInput | tasksCreateOrConnectWithoutOrderInput[]
    upsert?: tasksUpsertWithWhereUniqueWithoutOrderInput | tasksUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: tasksCreateManyOrderInputEnvelope
    set?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    disconnect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    delete?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    update?: tasksUpdateWithWhereUniqueWithoutOrderInput | tasksUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: tasksUpdateManyWithWhereWithoutOrderInput | tasksUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: tasksScalarWhereInput | tasksScalarWhereInput[]
  }

  export type OrderItemUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutOrderInput | OrderItemUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutOrderInput | OrderItemUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutOrderInput | OrderItemUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type OrderStatusHistoryUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderStatusHistoryCreateWithoutOrderInput, OrderStatusHistoryUncheckedCreateWithoutOrderInput> | OrderStatusHistoryCreateWithoutOrderInput[] | OrderStatusHistoryUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderStatusHistoryCreateOrConnectWithoutOrderInput | OrderStatusHistoryCreateOrConnectWithoutOrderInput[]
    upsert?: OrderStatusHistoryUpsertWithWhereUniqueWithoutOrderInput | OrderStatusHistoryUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderStatusHistoryCreateManyOrderInputEnvelope
    set?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    disconnect?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    delete?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    connect?: OrderStatusHistoryWhereUniqueInput | OrderStatusHistoryWhereUniqueInput[]
    update?: OrderStatusHistoryUpdateWithWhereUniqueWithoutOrderInput | OrderStatusHistoryUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderStatusHistoryUpdateManyWithWhereWithoutOrderInput | OrderStatusHistoryUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderStatusHistoryScalarWhereInput | OrderStatusHistoryScalarWhereInput[]
  }

  export type tasksUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<tasksCreateWithoutOrderInput, tasksUncheckedCreateWithoutOrderInput> | tasksCreateWithoutOrderInput[] | tasksUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutOrderInput | tasksCreateOrConnectWithoutOrderInput[]
    upsert?: tasksUpsertWithWhereUniqueWithoutOrderInput | tasksUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: tasksCreateManyOrderInputEnvelope
    set?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    disconnect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    delete?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    update?: tasksUpdateWithWhereUniqueWithoutOrderInput | tasksUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: tasksUpdateManyWithWhereWithoutOrderInput | tasksUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: tasksScalarWhereInput | tasksScalarWhereInput[]
  }

  export type EventItemCreateNestedManyWithoutProductInput = {
    create?: XOR<EventItemCreateWithoutProductInput, EventItemUncheckedCreateWithoutProductInput> | EventItemCreateWithoutProductInput[] | EventItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: EventItemCreateOrConnectWithoutProductInput | EventItemCreateOrConnectWithoutProductInput[]
    createMany?: EventItemCreateManyProductInputEnvelope
    connect?: EventItemWhereUniqueInput | EventItemWhereUniqueInput[]
  }

  export type OrderItemCreateNestedManyWithoutProductInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type ProductCategoryCreateNestedOneWithoutProductInput = {
    create?: XOR<ProductCategoryCreateWithoutProductInput, ProductCategoryUncheckedCreateWithoutProductInput>
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutProductInput
    connect?: ProductCategoryWhereUniqueInput
  }

  export type ProductOptionCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductOptionCreateWithoutProductInput, ProductOptionUncheckedCreateWithoutProductInput> | ProductOptionCreateWithoutProductInput[] | ProductOptionUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductOptionCreateOrConnectWithoutProductInput | ProductOptionCreateOrConnectWithoutProductInput[]
    createMany?: ProductOptionCreateManyProductInputEnvelope
    connect?: ProductOptionWhereUniqueInput | ProductOptionWhereUniqueInput[]
  }

  export type task_templatesCreateNestedManyWithoutProductInput = {
    create?: XOR<task_templatesCreateWithoutProductInput, task_templatesUncheckedCreateWithoutProductInput> | task_templatesCreateWithoutProductInput[] | task_templatesUncheckedCreateWithoutProductInput[]
    connectOrCreate?: task_templatesCreateOrConnectWithoutProductInput | task_templatesCreateOrConnectWithoutProductInput[]
    createMany?: task_templatesCreateManyProductInputEnvelope
    connect?: task_templatesWhereUniqueInput | task_templatesWhereUniqueInput[]
  }

  export type tasksCreateNestedManyWithoutProductInput = {
    create?: XOR<tasksCreateWithoutProductInput, tasksUncheckedCreateWithoutProductInput> | tasksCreateWithoutProductInput[] | tasksUncheckedCreateWithoutProductInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutProductInput | tasksCreateOrConnectWithoutProductInput[]
    createMany?: tasksCreateManyProductInputEnvelope
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
  }

  export type EventItemUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<EventItemCreateWithoutProductInput, EventItemUncheckedCreateWithoutProductInput> | EventItemCreateWithoutProductInput[] | EventItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: EventItemCreateOrConnectWithoutProductInput | EventItemCreateOrConnectWithoutProductInput[]
    createMany?: EventItemCreateManyProductInputEnvelope
    connect?: EventItemWhereUniqueInput | EventItemWhereUniqueInput[]
  }

  export type OrderItemUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type ProductOptionUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductOptionCreateWithoutProductInput, ProductOptionUncheckedCreateWithoutProductInput> | ProductOptionCreateWithoutProductInput[] | ProductOptionUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductOptionCreateOrConnectWithoutProductInput | ProductOptionCreateOrConnectWithoutProductInput[]
    createMany?: ProductOptionCreateManyProductInputEnvelope
    connect?: ProductOptionWhereUniqueInput | ProductOptionWhereUniqueInput[]
  }

  export type task_templatesUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<task_templatesCreateWithoutProductInput, task_templatesUncheckedCreateWithoutProductInput> | task_templatesCreateWithoutProductInput[] | task_templatesUncheckedCreateWithoutProductInput[]
    connectOrCreate?: task_templatesCreateOrConnectWithoutProductInput | task_templatesCreateOrConnectWithoutProductInput[]
    createMany?: task_templatesCreateManyProductInputEnvelope
    connect?: task_templatesWhereUniqueInput | task_templatesWhereUniqueInput[]
  }

  export type tasksUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<tasksCreateWithoutProductInput, tasksUncheckedCreateWithoutProductInput> | tasksCreateWithoutProductInput[] | tasksUncheckedCreateWithoutProductInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutProductInput | tasksCreateOrConnectWithoutProductInput[]
    createMany?: tasksCreateManyProductInputEnvelope
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EventItemUpdateManyWithoutProductNestedInput = {
    create?: XOR<EventItemCreateWithoutProductInput, EventItemUncheckedCreateWithoutProductInput> | EventItemCreateWithoutProductInput[] | EventItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: EventItemCreateOrConnectWithoutProductInput | EventItemCreateOrConnectWithoutProductInput[]
    upsert?: EventItemUpsertWithWhereUniqueWithoutProductInput | EventItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: EventItemCreateManyProductInputEnvelope
    set?: EventItemWhereUniqueInput | EventItemWhereUniqueInput[]
    disconnect?: EventItemWhereUniqueInput | EventItemWhereUniqueInput[]
    delete?: EventItemWhereUniqueInput | EventItemWhereUniqueInput[]
    connect?: EventItemWhereUniqueInput | EventItemWhereUniqueInput[]
    update?: EventItemUpdateWithWhereUniqueWithoutProductInput | EventItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: EventItemUpdateManyWithWhereWithoutProductInput | EventItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: EventItemScalarWhereInput | EventItemScalarWhereInput[]
  }

  export type OrderItemUpdateManyWithoutProductNestedInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutProductInput | OrderItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutProductInput | OrderItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutProductInput | OrderItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type ProductCategoryUpdateOneWithoutProductNestedInput = {
    create?: XOR<ProductCategoryCreateWithoutProductInput, ProductCategoryUncheckedCreateWithoutProductInput>
    connectOrCreate?: ProductCategoryCreateOrConnectWithoutProductInput
    upsert?: ProductCategoryUpsertWithoutProductInput
    disconnect?: ProductCategoryWhereInput | boolean
    delete?: ProductCategoryWhereInput | boolean
    connect?: ProductCategoryWhereUniqueInput
    update?: XOR<XOR<ProductCategoryUpdateToOneWithWhereWithoutProductInput, ProductCategoryUpdateWithoutProductInput>, ProductCategoryUncheckedUpdateWithoutProductInput>
  }

  export type ProductOptionUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductOptionCreateWithoutProductInput, ProductOptionUncheckedCreateWithoutProductInput> | ProductOptionCreateWithoutProductInput[] | ProductOptionUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductOptionCreateOrConnectWithoutProductInput | ProductOptionCreateOrConnectWithoutProductInput[]
    upsert?: ProductOptionUpsertWithWhereUniqueWithoutProductInput | ProductOptionUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductOptionCreateManyProductInputEnvelope
    set?: ProductOptionWhereUniqueInput | ProductOptionWhereUniqueInput[]
    disconnect?: ProductOptionWhereUniqueInput | ProductOptionWhereUniqueInput[]
    delete?: ProductOptionWhereUniqueInput | ProductOptionWhereUniqueInput[]
    connect?: ProductOptionWhereUniqueInput | ProductOptionWhereUniqueInput[]
    update?: ProductOptionUpdateWithWhereUniqueWithoutProductInput | ProductOptionUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductOptionUpdateManyWithWhereWithoutProductInput | ProductOptionUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductOptionScalarWhereInput | ProductOptionScalarWhereInput[]
  }

  export type task_templatesUpdateManyWithoutProductNestedInput = {
    create?: XOR<task_templatesCreateWithoutProductInput, task_templatesUncheckedCreateWithoutProductInput> | task_templatesCreateWithoutProductInput[] | task_templatesUncheckedCreateWithoutProductInput[]
    connectOrCreate?: task_templatesCreateOrConnectWithoutProductInput | task_templatesCreateOrConnectWithoutProductInput[]
    upsert?: task_templatesUpsertWithWhereUniqueWithoutProductInput | task_templatesUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: task_templatesCreateManyProductInputEnvelope
    set?: task_templatesWhereUniqueInput | task_templatesWhereUniqueInput[]
    disconnect?: task_templatesWhereUniqueInput | task_templatesWhereUniqueInput[]
    delete?: task_templatesWhereUniqueInput | task_templatesWhereUniqueInput[]
    connect?: task_templatesWhereUniqueInput | task_templatesWhereUniqueInput[]
    update?: task_templatesUpdateWithWhereUniqueWithoutProductInput | task_templatesUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: task_templatesUpdateManyWithWhereWithoutProductInput | task_templatesUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: task_templatesScalarWhereInput | task_templatesScalarWhereInput[]
  }

  export type tasksUpdateManyWithoutProductNestedInput = {
    create?: XOR<tasksCreateWithoutProductInput, tasksUncheckedCreateWithoutProductInput> | tasksCreateWithoutProductInput[] | tasksUncheckedCreateWithoutProductInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutProductInput | tasksCreateOrConnectWithoutProductInput[]
    upsert?: tasksUpsertWithWhereUniqueWithoutProductInput | tasksUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: tasksCreateManyProductInputEnvelope
    set?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    disconnect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    delete?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    update?: tasksUpdateWithWhereUniqueWithoutProductInput | tasksUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: tasksUpdateManyWithWhereWithoutProductInput | tasksUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: tasksScalarWhereInput | tasksScalarWhereInput[]
  }

  export type EventItemUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<EventItemCreateWithoutProductInput, EventItemUncheckedCreateWithoutProductInput> | EventItemCreateWithoutProductInput[] | EventItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: EventItemCreateOrConnectWithoutProductInput | EventItemCreateOrConnectWithoutProductInput[]
    upsert?: EventItemUpsertWithWhereUniqueWithoutProductInput | EventItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: EventItemCreateManyProductInputEnvelope
    set?: EventItemWhereUniqueInput | EventItemWhereUniqueInput[]
    disconnect?: EventItemWhereUniqueInput | EventItemWhereUniqueInput[]
    delete?: EventItemWhereUniqueInput | EventItemWhereUniqueInput[]
    connect?: EventItemWhereUniqueInput | EventItemWhereUniqueInput[]
    update?: EventItemUpdateWithWhereUniqueWithoutProductInput | EventItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: EventItemUpdateManyWithWhereWithoutProductInput | EventItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: EventItemScalarWhereInput | EventItemScalarWhereInput[]
  }

  export type OrderItemUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput> | OrderItemCreateWithoutProductInput[] | OrderItemUncheckedCreateWithoutProductInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutProductInput | OrderItemCreateOrConnectWithoutProductInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutProductInput | OrderItemUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: OrderItemCreateManyProductInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutProductInput | OrderItemUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutProductInput | OrderItemUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type ProductOptionUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductOptionCreateWithoutProductInput, ProductOptionUncheckedCreateWithoutProductInput> | ProductOptionCreateWithoutProductInput[] | ProductOptionUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductOptionCreateOrConnectWithoutProductInput | ProductOptionCreateOrConnectWithoutProductInput[]
    upsert?: ProductOptionUpsertWithWhereUniqueWithoutProductInput | ProductOptionUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductOptionCreateManyProductInputEnvelope
    set?: ProductOptionWhereUniqueInput | ProductOptionWhereUniqueInput[]
    disconnect?: ProductOptionWhereUniqueInput | ProductOptionWhereUniqueInput[]
    delete?: ProductOptionWhereUniqueInput | ProductOptionWhereUniqueInput[]
    connect?: ProductOptionWhereUniqueInput | ProductOptionWhereUniqueInput[]
    update?: ProductOptionUpdateWithWhereUniqueWithoutProductInput | ProductOptionUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductOptionUpdateManyWithWhereWithoutProductInput | ProductOptionUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductOptionScalarWhereInput | ProductOptionScalarWhereInput[]
  }

  export type task_templatesUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<task_templatesCreateWithoutProductInput, task_templatesUncheckedCreateWithoutProductInput> | task_templatesCreateWithoutProductInput[] | task_templatesUncheckedCreateWithoutProductInput[]
    connectOrCreate?: task_templatesCreateOrConnectWithoutProductInput | task_templatesCreateOrConnectWithoutProductInput[]
    upsert?: task_templatesUpsertWithWhereUniqueWithoutProductInput | task_templatesUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: task_templatesCreateManyProductInputEnvelope
    set?: task_templatesWhereUniqueInput | task_templatesWhereUniqueInput[]
    disconnect?: task_templatesWhereUniqueInput | task_templatesWhereUniqueInput[]
    delete?: task_templatesWhereUniqueInput | task_templatesWhereUniqueInput[]
    connect?: task_templatesWhereUniqueInput | task_templatesWhereUniqueInput[]
    update?: task_templatesUpdateWithWhereUniqueWithoutProductInput | task_templatesUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: task_templatesUpdateManyWithWhereWithoutProductInput | task_templatesUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: task_templatesScalarWhereInput | task_templatesScalarWhereInput[]
  }

  export type tasksUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<tasksCreateWithoutProductInput, tasksUncheckedCreateWithoutProductInput> | tasksCreateWithoutProductInput[] | tasksUncheckedCreateWithoutProductInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutProductInput | tasksCreateOrConnectWithoutProductInput[]
    upsert?: tasksUpsertWithWhereUniqueWithoutProductInput | tasksUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: tasksCreateManyProductInputEnvelope
    set?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    disconnect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    delete?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    update?: tasksUpdateWithWhereUniqueWithoutProductInput | tasksUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: tasksUpdateManyWithWhereWithoutProductInput | tasksUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: tasksScalarWhereInput | tasksScalarWhereInput[]
  }

  export type ProductCreateNestedManyWithoutProductCategoryInput = {
    create?: XOR<ProductCreateWithoutProductCategoryInput, ProductUncheckedCreateWithoutProductCategoryInput> | ProductCreateWithoutProductCategoryInput[] | ProductUncheckedCreateWithoutProductCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutProductCategoryInput | ProductCreateOrConnectWithoutProductCategoryInput[]
    createMany?: ProductCreateManyProductCategoryInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutProductCategoryInput = {
    create?: XOR<ProductCreateWithoutProductCategoryInput, ProductUncheckedCreateWithoutProductCategoryInput> | ProductCreateWithoutProductCategoryInput[] | ProductUncheckedCreateWithoutProductCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutProductCategoryInput | ProductCreateOrConnectWithoutProductCategoryInput[]
    createMany?: ProductCreateManyProductCategoryInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUpdateManyWithoutProductCategoryNestedInput = {
    create?: XOR<ProductCreateWithoutProductCategoryInput, ProductUncheckedCreateWithoutProductCategoryInput> | ProductCreateWithoutProductCategoryInput[] | ProductUncheckedCreateWithoutProductCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutProductCategoryInput | ProductCreateOrConnectWithoutProductCategoryInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutProductCategoryInput | ProductUpsertWithWhereUniqueWithoutProductCategoryInput[]
    createMany?: ProductCreateManyProductCategoryInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutProductCategoryInput | ProductUpdateWithWhereUniqueWithoutProductCategoryInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutProductCategoryInput | ProductUpdateManyWithWhereWithoutProductCategoryInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutProductCategoryNestedInput = {
    create?: XOR<ProductCreateWithoutProductCategoryInput, ProductUncheckedCreateWithoutProductCategoryInput> | ProductCreateWithoutProductCategoryInput[] | ProductUncheckedCreateWithoutProductCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutProductCategoryInput | ProductCreateOrConnectWithoutProductCategoryInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutProductCategoryInput | ProductUpsertWithWhereUniqueWithoutProductCategoryInput[]
    createMany?: ProductCreateManyProductCategoryInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutProductCategoryInput | ProductUpdateWithWhereUniqueWithoutProductCategoryInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutProductCategoryInput | ProductUpdateManyWithWhereWithoutProductCategoryInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type EventCreateNestedOneWithoutEventItemInput = {
    create?: XOR<EventCreateWithoutEventItemInput, EventUncheckedCreateWithoutEventItemInput>
    connectOrCreate?: EventCreateOrConnectWithoutEventItemInput
    connect?: EventWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutEventItemInput = {
    create?: XOR<ProductCreateWithoutEventItemInput, ProductUncheckedCreateWithoutEventItemInput>
    connectOrCreate?: ProductCreateOrConnectWithoutEventItemInput
    connect?: ProductWhereUniqueInput
  }

  export type EventItemOptionCreateNestedManyWithoutEventItemInput = {
    create?: XOR<EventItemOptionCreateWithoutEventItemInput, EventItemOptionUncheckedCreateWithoutEventItemInput> | EventItemOptionCreateWithoutEventItemInput[] | EventItemOptionUncheckedCreateWithoutEventItemInput[]
    connectOrCreate?: EventItemOptionCreateOrConnectWithoutEventItemInput | EventItemOptionCreateOrConnectWithoutEventItemInput[]
    createMany?: EventItemOptionCreateManyEventItemInputEnvelope
    connect?: EventItemOptionWhereUniqueInput | EventItemOptionWhereUniqueInput[]
  }

  export type EventItemOptionUncheckedCreateNestedManyWithoutEventItemInput = {
    create?: XOR<EventItemOptionCreateWithoutEventItemInput, EventItemOptionUncheckedCreateWithoutEventItemInput> | EventItemOptionCreateWithoutEventItemInput[] | EventItemOptionUncheckedCreateWithoutEventItemInput[]
    connectOrCreate?: EventItemOptionCreateOrConnectWithoutEventItemInput | EventItemOptionCreateOrConnectWithoutEventItemInput[]
    createMany?: EventItemOptionCreateManyEventItemInputEnvelope
    connect?: EventItemOptionWhereUniqueInput | EventItemOptionWhereUniqueInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type EventUpdateOneRequiredWithoutEventItemNestedInput = {
    create?: XOR<EventCreateWithoutEventItemInput, EventUncheckedCreateWithoutEventItemInput>
    connectOrCreate?: EventCreateOrConnectWithoutEventItemInput
    upsert?: EventUpsertWithoutEventItemInput
    connect?: EventWhereUniqueInput
    update?: XOR<XOR<EventUpdateToOneWithWhereWithoutEventItemInput, EventUpdateWithoutEventItemInput>, EventUncheckedUpdateWithoutEventItemInput>
  }

  export type ProductUpdateOneRequiredWithoutEventItemNestedInput = {
    create?: XOR<ProductCreateWithoutEventItemInput, ProductUncheckedCreateWithoutEventItemInput>
    connectOrCreate?: ProductCreateOrConnectWithoutEventItemInput
    upsert?: ProductUpsertWithoutEventItemInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutEventItemInput, ProductUpdateWithoutEventItemInput>, ProductUncheckedUpdateWithoutEventItemInput>
  }

  export type EventItemOptionUpdateManyWithoutEventItemNestedInput = {
    create?: XOR<EventItemOptionCreateWithoutEventItemInput, EventItemOptionUncheckedCreateWithoutEventItemInput> | EventItemOptionCreateWithoutEventItemInput[] | EventItemOptionUncheckedCreateWithoutEventItemInput[]
    connectOrCreate?: EventItemOptionCreateOrConnectWithoutEventItemInput | EventItemOptionCreateOrConnectWithoutEventItemInput[]
    upsert?: EventItemOptionUpsertWithWhereUniqueWithoutEventItemInput | EventItemOptionUpsertWithWhereUniqueWithoutEventItemInput[]
    createMany?: EventItemOptionCreateManyEventItemInputEnvelope
    set?: EventItemOptionWhereUniqueInput | EventItemOptionWhereUniqueInput[]
    disconnect?: EventItemOptionWhereUniqueInput | EventItemOptionWhereUniqueInput[]
    delete?: EventItemOptionWhereUniqueInput | EventItemOptionWhereUniqueInput[]
    connect?: EventItemOptionWhereUniqueInput | EventItemOptionWhereUniqueInput[]
    update?: EventItemOptionUpdateWithWhereUniqueWithoutEventItemInput | EventItemOptionUpdateWithWhereUniqueWithoutEventItemInput[]
    updateMany?: EventItemOptionUpdateManyWithWhereWithoutEventItemInput | EventItemOptionUpdateManyWithWhereWithoutEventItemInput[]
    deleteMany?: EventItemOptionScalarWhereInput | EventItemOptionScalarWhereInput[]
  }

  export type EventItemOptionUncheckedUpdateManyWithoutEventItemNestedInput = {
    create?: XOR<EventItemOptionCreateWithoutEventItemInput, EventItemOptionUncheckedCreateWithoutEventItemInput> | EventItemOptionCreateWithoutEventItemInput[] | EventItemOptionUncheckedCreateWithoutEventItemInput[]
    connectOrCreate?: EventItemOptionCreateOrConnectWithoutEventItemInput | EventItemOptionCreateOrConnectWithoutEventItemInput[]
    upsert?: EventItemOptionUpsertWithWhereUniqueWithoutEventItemInput | EventItemOptionUpsertWithWhereUniqueWithoutEventItemInput[]
    createMany?: EventItemOptionCreateManyEventItemInputEnvelope
    set?: EventItemOptionWhereUniqueInput | EventItemOptionWhereUniqueInput[]
    disconnect?: EventItemOptionWhereUniqueInput | EventItemOptionWhereUniqueInput[]
    delete?: EventItemOptionWhereUniqueInput | EventItemOptionWhereUniqueInput[]
    connect?: EventItemOptionWhereUniqueInput | EventItemOptionWhereUniqueInput[]
    update?: EventItemOptionUpdateWithWhereUniqueWithoutEventItemInput | EventItemOptionUpdateWithWhereUniqueWithoutEventItemInput[]
    updateMany?: EventItemOptionUpdateManyWithWhereWithoutEventItemInput | EventItemOptionUpdateManyWithWhereWithoutEventItemInput[]
    deleteMany?: EventItemOptionScalarWhereInput | EventItemOptionScalarWhereInput[]
  }

  export type EventItemCreateNestedOneWithoutEventItemOptionInput = {
    create?: XOR<EventItemCreateWithoutEventItemOptionInput, EventItemUncheckedCreateWithoutEventItemOptionInput>
    connectOrCreate?: EventItemCreateOrConnectWithoutEventItemOptionInput
    connect?: EventItemWhereUniqueInput
  }

  export type ProductOptionCreateNestedOneWithoutEventItemOptionInput = {
    create?: XOR<ProductOptionCreateWithoutEventItemOptionInput, ProductOptionUncheckedCreateWithoutEventItemOptionInput>
    connectOrCreate?: ProductOptionCreateOrConnectWithoutEventItemOptionInput
    connect?: ProductOptionWhereUniqueInput
  }

  export type EventItemUpdateOneRequiredWithoutEventItemOptionNestedInput = {
    create?: XOR<EventItemCreateWithoutEventItemOptionInput, EventItemUncheckedCreateWithoutEventItemOptionInput>
    connectOrCreate?: EventItemCreateOrConnectWithoutEventItemOptionInput
    upsert?: EventItemUpsertWithoutEventItemOptionInput
    connect?: EventItemWhereUniqueInput
    update?: XOR<XOR<EventItemUpdateToOneWithWhereWithoutEventItemOptionInput, EventItemUpdateWithoutEventItemOptionInput>, EventItemUncheckedUpdateWithoutEventItemOptionInput>
  }

  export type ProductOptionUpdateOneRequiredWithoutEventItemOptionNestedInput = {
    create?: XOR<ProductOptionCreateWithoutEventItemOptionInput, ProductOptionUncheckedCreateWithoutEventItemOptionInput>
    connectOrCreate?: ProductOptionCreateOrConnectWithoutEventItemOptionInput
    upsert?: ProductOptionUpsertWithoutEventItemOptionInput
    connect?: ProductOptionWhereUniqueInput
    update?: XOR<XOR<ProductOptionUpdateToOneWithWhereWithoutEventItemOptionInput, ProductOptionUpdateWithoutEventItemOptionInput>, ProductOptionUncheckedUpdateWithoutEventItemOptionInput>
  }

  export type EventCreateNestedOneWithoutEventStatusHistoryInput = {
    create?: XOR<EventCreateWithoutEventStatusHistoryInput, EventUncheckedCreateWithoutEventStatusHistoryInput>
    connectOrCreate?: EventCreateOrConnectWithoutEventStatusHistoryInput
    connect?: EventWhereUniqueInput
  }

  export type EventUpdateOneRequiredWithoutEventStatusHistoryNestedInput = {
    create?: XOR<EventCreateWithoutEventStatusHistoryInput, EventUncheckedCreateWithoutEventStatusHistoryInput>
    connectOrCreate?: EventCreateOrConnectWithoutEventStatusHistoryInput
    upsert?: EventUpsertWithoutEventStatusHistoryInput
    connect?: EventWhereUniqueInput
    update?: XOR<XOR<EventUpdateToOneWithWhereWithoutEventStatusHistoryInput, EventUpdateWithoutEventStatusHistoryInput>, EventUncheckedUpdateWithoutEventStatusHistoryInput>
  }

  export type OrderCreateNestedOneWithoutOrderItemInput = {
    create?: XOR<OrderCreateWithoutOrderItemInput, OrderUncheckedCreateWithoutOrderItemInput>
    connectOrCreate?: OrderCreateOrConnectWithoutOrderItemInput
    connect?: OrderWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutOrderItemInput = {
    create?: XOR<ProductCreateWithoutOrderItemInput, ProductUncheckedCreateWithoutOrderItemInput>
    connectOrCreate?: ProductCreateOrConnectWithoutOrderItemInput
    connect?: ProductWhereUniqueInput
  }

  export type OrderItemOptionCreateNestedManyWithoutOrderItemInput = {
    create?: XOR<OrderItemOptionCreateWithoutOrderItemInput, OrderItemOptionUncheckedCreateWithoutOrderItemInput> | OrderItemOptionCreateWithoutOrderItemInput[] | OrderItemOptionUncheckedCreateWithoutOrderItemInput[]
    connectOrCreate?: OrderItemOptionCreateOrConnectWithoutOrderItemInput | OrderItemOptionCreateOrConnectWithoutOrderItemInput[]
    createMany?: OrderItemOptionCreateManyOrderItemInputEnvelope
    connect?: OrderItemOptionWhereUniqueInput | OrderItemOptionWhereUniqueInput[]
  }

  export type OrderItemOptionUncheckedCreateNestedManyWithoutOrderItemInput = {
    create?: XOR<OrderItemOptionCreateWithoutOrderItemInput, OrderItemOptionUncheckedCreateWithoutOrderItemInput> | OrderItemOptionCreateWithoutOrderItemInput[] | OrderItemOptionUncheckedCreateWithoutOrderItemInput[]
    connectOrCreate?: OrderItemOptionCreateOrConnectWithoutOrderItemInput | OrderItemOptionCreateOrConnectWithoutOrderItemInput[]
    createMany?: OrderItemOptionCreateManyOrderItemInputEnvelope
    connect?: OrderItemOptionWhereUniqueInput | OrderItemOptionWhereUniqueInput[]
  }

  export type OrderUpdateOneRequiredWithoutOrderItemNestedInput = {
    create?: XOR<OrderCreateWithoutOrderItemInput, OrderUncheckedCreateWithoutOrderItemInput>
    connectOrCreate?: OrderCreateOrConnectWithoutOrderItemInput
    upsert?: OrderUpsertWithoutOrderItemInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutOrderItemInput, OrderUpdateWithoutOrderItemInput>, OrderUncheckedUpdateWithoutOrderItemInput>
  }

  export type ProductUpdateOneRequiredWithoutOrderItemNestedInput = {
    create?: XOR<ProductCreateWithoutOrderItemInput, ProductUncheckedCreateWithoutOrderItemInput>
    connectOrCreate?: ProductCreateOrConnectWithoutOrderItemInput
    upsert?: ProductUpsertWithoutOrderItemInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutOrderItemInput, ProductUpdateWithoutOrderItemInput>, ProductUncheckedUpdateWithoutOrderItemInput>
  }

  export type OrderItemOptionUpdateManyWithoutOrderItemNestedInput = {
    create?: XOR<OrderItemOptionCreateWithoutOrderItemInput, OrderItemOptionUncheckedCreateWithoutOrderItemInput> | OrderItemOptionCreateWithoutOrderItemInput[] | OrderItemOptionUncheckedCreateWithoutOrderItemInput[]
    connectOrCreate?: OrderItemOptionCreateOrConnectWithoutOrderItemInput | OrderItemOptionCreateOrConnectWithoutOrderItemInput[]
    upsert?: OrderItemOptionUpsertWithWhereUniqueWithoutOrderItemInput | OrderItemOptionUpsertWithWhereUniqueWithoutOrderItemInput[]
    createMany?: OrderItemOptionCreateManyOrderItemInputEnvelope
    set?: OrderItemOptionWhereUniqueInput | OrderItemOptionWhereUniqueInput[]
    disconnect?: OrderItemOptionWhereUniqueInput | OrderItemOptionWhereUniqueInput[]
    delete?: OrderItemOptionWhereUniqueInput | OrderItemOptionWhereUniqueInput[]
    connect?: OrderItemOptionWhereUniqueInput | OrderItemOptionWhereUniqueInput[]
    update?: OrderItemOptionUpdateWithWhereUniqueWithoutOrderItemInput | OrderItemOptionUpdateWithWhereUniqueWithoutOrderItemInput[]
    updateMany?: OrderItemOptionUpdateManyWithWhereWithoutOrderItemInput | OrderItemOptionUpdateManyWithWhereWithoutOrderItemInput[]
    deleteMany?: OrderItemOptionScalarWhereInput | OrderItemOptionScalarWhereInput[]
  }

  export type OrderItemOptionUncheckedUpdateManyWithoutOrderItemNestedInput = {
    create?: XOR<OrderItemOptionCreateWithoutOrderItemInput, OrderItemOptionUncheckedCreateWithoutOrderItemInput> | OrderItemOptionCreateWithoutOrderItemInput[] | OrderItemOptionUncheckedCreateWithoutOrderItemInput[]
    connectOrCreate?: OrderItemOptionCreateOrConnectWithoutOrderItemInput | OrderItemOptionCreateOrConnectWithoutOrderItemInput[]
    upsert?: OrderItemOptionUpsertWithWhereUniqueWithoutOrderItemInput | OrderItemOptionUpsertWithWhereUniqueWithoutOrderItemInput[]
    createMany?: OrderItemOptionCreateManyOrderItemInputEnvelope
    set?: OrderItemOptionWhereUniqueInput | OrderItemOptionWhereUniqueInput[]
    disconnect?: OrderItemOptionWhereUniqueInput | OrderItemOptionWhereUniqueInput[]
    delete?: OrderItemOptionWhereUniqueInput | OrderItemOptionWhereUniqueInput[]
    connect?: OrderItemOptionWhereUniqueInput | OrderItemOptionWhereUniqueInput[]
    update?: OrderItemOptionUpdateWithWhereUniqueWithoutOrderItemInput | OrderItemOptionUpdateWithWhereUniqueWithoutOrderItemInput[]
    updateMany?: OrderItemOptionUpdateManyWithWhereWithoutOrderItemInput | OrderItemOptionUpdateManyWithWhereWithoutOrderItemInput[]
    deleteMany?: OrderItemOptionScalarWhereInput | OrderItemOptionScalarWhereInput[]
  }

  export type ProductOptionCreateNestedOneWithoutOrderItemOptionInput = {
    create?: XOR<ProductOptionCreateWithoutOrderItemOptionInput, ProductOptionUncheckedCreateWithoutOrderItemOptionInput>
    connectOrCreate?: ProductOptionCreateOrConnectWithoutOrderItemOptionInput
    connect?: ProductOptionWhereUniqueInput
  }

  export type OrderItemCreateNestedOneWithoutOrderItemOptionInput = {
    create?: XOR<OrderItemCreateWithoutOrderItemOptionInput, OrderItemUncheckedCreateWithoutOrderItemOptionInput>
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderItemOptionInput
    connect?: OrderItemWhereUniqueInput
  }

  export type ProductOptionUpdateOneRequiredWithoutOrderItemOptionNestedInput = {
    create?: XOR<ProductOptionCreateWithoutOrderItemOptionInput, ProductOptionUncheckedCreateWithoutOrderItemOptionInput>
    connectOrCreate?: ProductOptionCreateOrConnectWithoutOrderItemOptionInput
    upsert?: ProductOptionUpsertWithoutOrderItemOptionInput
    connect?: ProductOptionWhereUniqueInput
    update?: XOR<XOR<ProductOptionUpdateToOneWithWhereWithoutOrderItemOptionInput, ProductOptionUpdateWithoutOrderItemOptionInput>, ProductOptionUncheckedUpdateWithoutOrderItemOptionInput>
  }

  export type OrderItemUpdateOneRequiredWithoutOrderItemOptionNestedInput = {
    create?: XOR<OrderItemCreateWithoutOrderItemOptionInput, OrderItemUncheckedCreateWithoutOrderItemOptionInput>
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderItemOptionInput
    upsert?: OrderItemUpsertWithoutOrderItemOptionInput
    connect?: OrderItemWhereUniqueInput
    update?: XOR<XOR<OrderItemUpdateToOneWithWhereWithoutOrderItemOptionInput, OrderItemUpdateWithoutOrderItemOptionInput>, OrderItemUncheckedUpdateWithoutOrderItemOptionInput>
  }

  export type OrderCreateNestedOneWithoutOrderStatusHistoryInput = {
    create?: XOR<OrderCreateWithoutOrderStatusHistoryInput, OrderUncheckedCreateWithoutOrderStatusHistoryInput>
    connectOrCreate?: OrderCreateOrConnectWithoutOrderStatusHistoryInput
    connect?: OrderWhereUniqueInput
  }

  export type OrderUpdateOneRequiredWithoutOrderStatusHistoryNestedInput = {
    create?: XOR<OrderCreateWithoutOrderStatusHistoryInput, OrderUncheckedCreateWithoutOrderStatusHistoryInput>
    connectOrCreate?: OrderCreateOrConnectWithoutOrderStatusHistoryInput
    upsert?: OrderUpsertWithoutOrderStatusHistoryInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutOrderStatusHistoryInput, OrderUpdateWithoutOrderStatusHistoryInput>, OrderUncheckedUpdateWithoutOrderStatusHistoryInput>
  }

  export type EventItemOptionCreateNestedManyWithoutProductOptionInput = {
    create?: XOR<EventItemOptionCreateWithoutProductOptionInput, EventItemOptionUncheckedCreateWithoutProductOptionInput> | EventItemOptionCreateWithoutProductOptionInput[] | EventItemOptionUncheckedCreateWithoutProductOptionInput[]
    connectOrCreate?: EventItemOptionCreateOrConnectWithoutProductOptionInput | EventItemOptionCreateOrConnectWithoutProductOptionInput[]
    createMany?: EventItemOptionCreateManyProductOptionInputEnvelope
    connect?: EventItemOptionWhereUniqueInput | EventItemOptionWhereUniqueInput[]
  }

  export type OrderItemOptionCreateNestedManyWithoutProductOptionInput = {
    create?: XOR<OrderItemOptionCreateWithoutProductOptionInput, OrderItemOptionUncheckedCreateWithoutProductOptionInput> | OrderItemOptionCreateWithoutProductOptionInput[] | OrderItemOptionUncheckedCreateWithoutProductOptionInput[]
    connectOrCreate?: OrderItemOptionCreateOrConnectWithoutProductOptionInput | OrderItemOptionCreateOrConnectWithoutProductOptionInput[]
    createMany?: OrderItemOptionCreateManyProductOptionInputEnvelope
    connect?: OrderItemOptionWhereUniqueInput | OrderItemOptionWhereUniqueInput[]
  }

  export type ProductCreateNestedOneWithoutProductOptionInput = {
    create?: XOR<ProductCreateWithoutProductOptionInput, ProductUncheckedCreateWithoutProductOptionInput>
    connectOrCreate?: ProductCreateOrConnectWithoutProductOptionInput
    connect?: ProductWhereUniqueInput
  }

  export type ProductOptionValueCreateNestedManyWithoutProductOptionInput = {
    create?: XOR<ProductOptionValueCreateWithoutProductOptionInput, ProductOptionValueUncheckedCreateWithoutProductOptionInput> | ProductOptionValueCreateWithoutProductOptionInput[] | ProductOptionValueUncheckedCreateWithoutProductOptionInput[]
    connectOrCreate?: ProductOptionValueCreateOrConnectWithoutProductOptionInput | ProductOptionValueCreateOrConnectWithoutProductOptionInput[]
    createMany?: ProductOptionValueCreateManyProductOptionInputEnvelope
    connect?: ProductOptionValueWhereUniqueInput | ProductOptionValueWhereUniqueInput[]
  }

  export type EventItemOptionUncheckedCreateNestedManyWithoutProductOptionInput = {
    create?: XOR<EventItemOptionCreateWithoutProductOptionInput, EventItemOptionUncheckedCreateWithoutProductOptionInput> | EventItemOptionCreateWithoutProductOptionInput[] | EventItemOptionUncheckedCreateWithoutProductOptionInput[]
    connectOrCreate?: EventItemOptionCreateOrConnectWithoutProductOptionInput | EventItemOptionCreateOrConnectWithoutProductOptionInput[]
    createMany?: EventItemOptionCreateManyProductOptionInputEnvelope
    connect?: EventItemOptionWhereUniqueInput | EventItemOptionWhereUniqueInput[]
  }

  export type OrderItemOptionUncheckedCreateNestedManyWithoutProductOptionInput = {
    create?: XOR<OrderItemOptionCreateWithoutProductOptionInput, OrderItemOptionUncheckedCreateWithoutProductOptionInput> | OrderItemOptionCreateWithoutProductOptionInput[] | OrderItemOptionUncheckedCreateWithoutProductOptionInput[]
    connectOrCreate?: OrderItemOptionCreateOrConnectWithoutProductOptionInput | OrderItemOptionCreateOrConnectWithoutProductOptionInput[]
    createMany?: OrderItemOptionCreateManyProductOptionInputEnvelope
    connect?: OrderItemOptionWhereUniqueInput | OrderItemOptionWhereUniqueInput[]
  }

  export type ProductOptionValueUncheckedCreateNestedManyWithoutProductOptionInput = {
    create?: XOR<ProductOptionValueCreateWithoutProductOptionInput, ProductOptionValueUncheckedCreateWithoutProductOptionInput> | ProductOptionValueCreateWithoutProductOptionInput[] | ProductOptionValueUncheckedCreateWithoutProductOptionInput[]
    connectOrCreate?: ProductOptionValueCreateOrConnectWithoutProductOptionInput | ProductOptionValueCreateOrConnectWithoutProductOptionInput[]
    createMany?: ProductOptionValueCreateManyProductOptionInputEnvelope
    connect?: ProductOptionValueWhereUniqueInput | ProductOptionValueWhereUniqueInput[]
  }

  export type EventItemOptionUpdateManyWithoutProductOptionNestedInput = {
    create?: XOR<EventItemOptionCreateWithoutProductOptionInput, EventItemOptionUncheckedCreateWithoutProductOptionInput> | EventItemOptionCreateWithoutProductOptionInput[] | EventItemOptionUncheckedCreateWithoutProductOptionInput[]
    connectOrCreate?: EventItemOptionCreateOrConnectWithoutProductOptionInput | EventItemOptionCreateOrConnectWithoutProductOptionInput[]
    upsert?: EventItemOptionUpsertWithWhereUniqueWithoutProductOptionInput | EventItemOptionUpsertWithWhereUniqueWithoutProductOptionInput[]
    createMany?: EventItemOptionCreateManyProductOptionInputEnvelope
    set?: EventItemOptionWhereUniqueInput | EventItemOptionWhereUniqueInput[]
    disconnect?: EventItemOptionWhereUniqueInput | EventItemOptionWhereUniqueInput[]
    delete?: EventItemOptionWhereUniqueInput | EventItemOptionWhereUniqueInput[]
    connect?: EventItemOptionWhereUniqueInput | EventItemOptionWhereUniqueInput[]
    update?: EventItemOptionUpdateWithWhereUniqueWithoutProductOptionInput | EventItemOptionUpdateWithWhereUniqueWithoutProductOptionInput[]
    updateMany?: EventItemOptionUpdateManyWithWhereWithoutProductOptionInput | EventItemOptionUpdateManyWithWhereWithoutProductOptionInput[]
    deleteMany?: EventItemOptionScalarWhereInput | EventItemOptionScalarWhereInput[]
  }

  export type OrderItemOptionUpdateManyWithoutProductOptionNestedInput = {
    create?: XOR<OrderItemOptionCreateWithoutProductOptionInput, OrderItemOptionUncheckedCreateWithoutProductOptionInput> | OrderItemOptionCreateWithoutProductOptionInput[] | OrderItemOptionUncheckedCreateWithoutProductOptionInput[]
    connectOrCreate?: OrderItemOptionCreateOrConnectWithoutProductOptionInput | OrderItemOptionCreateOrConnectWithoutProductOptionInput[]
    upsert?: OrderItemOptionUpsertWithWhereUniqueWithoutProductOptionInput | OrderItemOptionUpsertWithWhereUniqueWithoutProductOptionInput[]
    createMany?: OrderItemOptionCreateManyProductOptionInputEnvelope
    set?: OrderItemOptionWhereUniqueInput | OrderItemOptionWhereUniqueInput[]
    disconnect?: OrderItemOptionWhereUniqueInput | OrderItemOptionWhereUniqueInput[]
    delete?: OrderItemOptionWhereUniqueInput | OrderItemOptionWhereUniqueInput[]
    connect?: OrderItemOptionWhereUniqueInput | OrderItemOptionWhereUniqueInput[]
    update?: OrderItemOptionUpdateWithWhereUniqueWithoutProductOptionInput | OrderItemOptionUpdateWithWhereUniqueWithoutProductOptionInput[]
    updateMany?: OrderItemOptionUpdateManyWithWhereWithoutProductOptionInput | OrderItemOptionUpdateManyWithWhereWithoutProductOptionInput[]
    deleteMany?: OrderItemOptionScalarWhereInput | OrderItemOptionScalarWhereInput[]
  }

  export type ProductUpdateOneRequiredWithoutProductOptionNestedInput = {
    create?: XOR<ProductCreateWithoutProductOptionInput, ProductUncheckedCreateWithoutProductOptionInput>
    connectOrCreate?: ProductCreateOrConnectWithoutProductOptionInput
    upsert?: ProductUpsertWithoutProductOptionInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutProductOptionInput, ProductUpdateWithoutProductOptionInput>, ProductUncheckedUpdateWithoutProductOptionInput>
  }

  export type ProductOptionValueUpdateManyWithoutProductOptionNestedInput = {
    create?: XOR<ProductOptionValueCreateWithoutProductOptionInput, ProductOptionValueUncheckedCreateWithoutProductOptionInput> | ProductOptionValueCreateWithoutProductOptionInput[] | ProductOptionValueUncheckedCreateWithoutProductOptionInput[]
    connectOrCreate?: ProductOptionValueCreateOrConnectWithoutProductOptionInput | ProductOptionValueCreateOrConnectWithoutProductOptionInput[]
    upsert?: ProductOptionValueUpsertWithWhereUniqueWithoutProductOptionInput | ProductOptionValueUpsertWithWhereUniqueWithoutProductOptionInput[]
    createMany?: ProductOptionValueCreateManyProductOptionInputEnvelope
    set?: ProductOptionValueWhereUniqueInput | ProductOptionValueWhereUniqueInput[]
    disconnect?: ProductOptionValueWhereUniqueInput | ProductOptionValueWhereUniqueInput[]
    delete?: ProductOptionValueWhereUniqueInput | ProductOptionValueWhereUniqueInput[]
    connect?: ProductOptionValueWhereUniqueInput | ProductOptionValueWhereUniqueInput[]
    update?: ProductOptionValueUpdateWithWhereUniqueWithoutProductOptionInput | ProductOptionValueUpdateWithWhereUniqueWithoutProductOptionInput[]
    updateMany?: ProductOptionValueUpdateManyWithWhereWithoutProductOptionInput | ProductOptionValueUpdateManyWithWhereWithoutProductOptionInput[]
    deleteMany?: ProductOptionValueScalarWhereInput | ProductOptionValueScalarWhereInput[]
  }

  export type EventItemOptionUncheckedUpdateManyWithoutProductOptionNestedInput = {
    create?: XOR<EventItemOptionCreateWithoutProductOptionInput, EventItemOptionUncheckedCreateWithoutProductOptionInput> | EventItemOptionCreateWithoutProductOptionInput[] | EventItemOptionUncheckedCreateWithoutProductOptionInput[]
    connectOrCreate?: EventItemOptionCreateOrConnectWithoutProductOptionInput | EventItemOptionCreateOrConnectWithoutProductOptionInput[]
    upsert?: EventItemOptionUpsertWithWhereUniqueWithoutProductOptionInput | EventItemOptionUpsertWithWhereUniqueWithoutProductOptionInput[]
    createMany?: EventItemOptionCreateManyProductOptionInputEnvelope
    set?: EventItemOptionWhereUniqueInput | EventItemOptionWhereUniqueInput[]
    disconnect?: EventItemOptionWhereUniqueInput | EventItemOptionWhereUniqueInput[]
    delete?: EventItemOptionWhereUniqueInput | EventItemOptionWhereUniqueInput[]
    connect?: EventItemOptionWhereUniqueInput | EventItemOptionWhereUniqueInput[]
    update?: EventItemOptionUpdateWithWhereUniqueWithoutProductOptionInput | EventItemOptionUpdateWithWhereUniqueWithoutProductOptionInput[]
    updateMany?: EventItemOptionUpdateManyWithWhereWithoutProductOptionInput | EventItemOptionUpdateManyWithWhereWithoutProductOptionInput[]
    deleteMany?: EventItemOptionScalarWhereInput | EventItemOptionScalarWhereInput[]
  }

  export type OrderItemOptionUncheckedUpdateManyWithoutProductOptionNestedInput = {
    create?: XOR<OrderItemOptionCreateWithoutProductOptionInput, OrderItemOptionUncheckedCreateWithoutProductOptionInput> | OrderItemOptionCreateWithoutProductOptionInput[] | OrderItemOptionUncheckedCreateWithoutProductOptionInput[]
    connectOrCreate?: OrderItemOptionCreateOrConnectWithoutProductOptionInput | OrderItemOptionCreateOrConnectWithoutProductOptionInput[]
    upsert?: OrderItemOptionUpsertWithWhereUniqueWithoutProductOptionInput | OrderItemOptionUpsertWithWhereUniqueWithoutProductOptionInput[]
    createMany?: OrderItemOptionCreateManyProductOptionInputEnvelope
    set?: OrderItemOptionWhereUniqueInput | OrderItemOptionWhereUniqueInput[]
    disconnect?: OrderItemOptionWhereUniqueInput | OrderItemOptionWhereUniqueInput[]
    delete?: OrderItemOptionWhereUniqueInput | OrderItemOptionWhereUniqueInput[]
    connect?: OrderItemOptionWhereUniqueInput | OrderItemOptionWhereUniqueInput[]
    update?: OrderItemOptionUpdateWithWhereUniqueWithoutProductOptionInput | OrderItemOptionUpdateWithWhereUniqueWithoutProductOptionInput[]
    updateMany?: OrderItemOptionUpdateManyWithWhereWithoutProductOptionInput | OrderItemOptionUpdateManyWithWhereWithoutProductOptionInput[]
    deleteMany?: OrderItemOptionScalarWhereInput | OrderItemOptionScalarWhereInput[]
  }

  export type ProductOptionValueUncheckedUpdateManyWithoutProductOptionNestedInput = {
    create?: XOR<ProductOptionValueCreateWithoutProductOptionInput, ProductOptionValueUncheckedCreateWithoutProductOptionInput> | ProductOptionValueCreateWithoutProductOptionInput[] | ProductOptionValueUncheckedCreateWithoutProductOptionInput[]
    connectOrCreate?: ProductOptionValueCreateOrConnectWithoutProductOptionInput | ProductOptionValueCreateOrConnectWithoutProductOptionInput[]
    upsert?: ProductOptionValueUpsertWithWhereUniqueWithoutProductOptionInput | ProductOptionValueUpsertWithWhereUniqueWithoutProductOptionInput[]
    createMany?: ProductOptionValueCreateManyProductOptionInputEnvelope
    set?: ProductOptionValueWhereUniqueInput | ProductOptionValueWhereUniqueInput[]
    disconnect?: ProductOptionValueWhereUniqueInput | ProductOptionValueWhereUniqueInput[]
    delete?: ProductOptionValueWhereUniqueInput | ProductOptionValueWhereUniqueInput[]
    connect?: ProductOptionValueWhereUniqueInput | ProductOptionValueWhereUniqueInput[]
    update?: ProductOptionValueUpdateWithWhereUniqueWithoutProductOptionInput | ProductOptionValueUpdateWithWhereUniqueWithoutProductOptionInput[]
    updateMany?: ProductOptionValueUpdateManyWithWhereWithoutProductOptionInput | ProductOptionValueUpdateManyWithWhereWithoutProductOptionInput[]
    deleteMany?: ProductOptionValueScalarWhereInput | ProductOptionValueScalarWhereInput[]
  }

  export type ProductOptionCreateNestedOneWithoutProductOptionValueInput = {
    create?: XOR<ProductOptionCreateWithoutProductOptionValueInput, ProductOptionUncheckedCreateWithoutProductOptionValueInput>
    connectOrCreate?: ProductOptionCreateOrConnectWithoutProductOptionValueInput
    connect?: ProductOptionWhereUniqueInput
  }

  export type ProductOptionUpdateOneRequiredWithoutProductOptionValueNestedInput = {
    create?: XOR<ProductOptionCreateWithoutProductOptionValueInput, ProductOptionUncheckedCreateWithoutProductOptionValueInput>
    connectOrCreate?: ProductOptionCreateOrConnectWithoutProductOptionValueInput
    upsert?: ProductOptionUpsertWithoutProductOptionValueInput
    connect?: ProductOptionWhereUniqueInput
    update?: XOR<XOR<ProductOptionUpdateToOneWithWhereWithoutProductOptionValueInput, ProductOptionUpdateWithoutProductOptionValueInput>, ProductOptionUncheckedUpdateWithoutProductOptionValueInput>
  }

  export type tasksCreateNestedManyWithoutUserInput = {
    create?: XOR<tasksCreateWithoutUserInput, tasksUncheckedCreateWithoutUserInput> | tasksCreateWithoutUserInput[] | tasksUncheckedCreateWithoutUserInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutUserInput | tasksCreateOrConnectWithoutUserInput[]
    createMany?: tasksCreateManyUserInputEnvelope
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
  }

  export type user_rolesCreateNestedManyWithoutUserInput = {
    create?: XOR<user_rolesCreateWithoutUserInput, user_rolesUncheckedCreateWithoutUserInput> | user_rolesCreateWithoutUserInput[] | user_rolesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_rolesCreateOrConnectWithoutUserInput | user_rolesCreateOrConnectWithoutUserInput[]
    createMany?: user_rolesCreateManyUserInputEnvelope
    connect?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
  }

  export type tasksUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<tasksCreateWithoutUserInput, tasksUncheckedCreateWithoutUserInput> | tasksCreateWithoutUserInput[] | tasksUncheckedCreateWithoutUserInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutUserInput | tasksCreateOrConnectWithoutUserInput[]
    createMany?: tasksCreateManyUserInputEnvelope
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
  }

  export type user_rolesUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<user_rolesCreateWithoutUserInput, user_rolesUncheckedCreateWithoutUserInput> | user_rolesCreateWithoutUserInput[] | user_rolesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_rolesCreateOrConnectWithoutUserInput | user_rolesCreateOrConnectWithoutUserInput[]
    createMany?: user_rolesCreateManyUserInputEnvelope
    connect?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
  }

  export type tasksUpdateManyWithoutUserNestedInput = {
    create?: XOR<tasksCreateWithoutUserInput, tasksUncheckedCreateWithoutUserInput> | tasksCreateWithoutUserInput[] | tasksUncheckedCreateWithoutUserInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutUserInput | tasksCreateOrConnectWithoutUserInput[]
    upsert?: tasksUpsertWithWhereUniqueWithoutUserInput | tasksUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: tasksCreateManyUserInputEnvelope
    set?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    disconnect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    delete?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    update?: tasksUpdateWithWhereUniqueWithoutUserInput | tasksUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: tasksUpdateManyWithWhereWithoutUserInput | tasksUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: tasksScalarWhereInput | tasksScalarWhereInput[]
  }

  export type user_rolesUpdateManyWithoutUserNestedInput = {
    create?: XOR<user_rolesCreateWithoutUserInput, user_rolesUncheckedCreateWithoutUserInput> | user_rolesCreateWithoutUserInput[] | user_rolesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_rolesCreateOrConnectWithoutUserInput | user_rolesCreateOrConnectWithoutUserInput[]
    upsert?: user_rolesUpsertWithWhereUniqueWithoutUserInput | user_rolesUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: user_rolesCreateManyUserInputEnvelope
    set?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    disconnect?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    delete?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    connect?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    update?: user_rolesUpdateWithWhereUniqueWithoutUserInput | user_rolesUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: user_rolesUpdateManyWithWhereWithoutUserInput | user_rolesUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: user_rolesScalarWhereInput | user_rolesScalarWhereInput[]
  }

  export type tasksUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<tasksCreateWithoutUserInput, tasksUncheckedCreateWithoutUserInput> | tasksCreateWithoutUserInput[] | tasksUncheckedCreateWithoutUserInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutUserInput | tasksCreateOrConnectWithoutUserInput[]
    upsert?: tasksUpsertWithWhereUniqueWithoutUserInput | tasksUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: tasksCreateManyUserInputEnvelope
    set?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    disconnect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    delete?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    update?: tasksUpdateWithWhereUniqueWithoutUserInput | tasksUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: tasksUpdateManyWithWhereWithoutUserInput | tasksUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: tasksScalarWhereInput | tasksScalarWhereInput[]
  }

  export type user_rolesUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<user_rolesCreateWithoutUserInput, user_rolesUncheckedCreateWithoutUserInput> | user_rolesCreateWithoutUserInput[] | user_rolesUncheckedCreateWithoutUserInput[]
    connectOrCreate?: user_rolesCreateOrConnectWithoutUserInput | user_rolesCreateOrConnectWithoutUserInput[]
    upsert?: user_rolesUpsertWithWhereUniqueWithoutUserInput | user_rolesUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: user_rolesCreateManyUserInputEnvelope
    set?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    disconnect?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    delete?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    connect?: user_rolesWhereUniqueInput | user_rolesWhereUniqueInput[]
    update?: user_rolesUpdateWithWhereUniqueWithoutUserInput | user_rolesUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: user_rolesUpdateManyWithWhereWithoutUserInput | user_rolesUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: user_rolesScalarWhereInput | user_rolesScalarWhereInput[]
  }

  export type tasksCreateNestedOneWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput = {
    create?: XOR<tasksCreateWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput, tasksUncheckedCreateWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput>
    connectOrCreate?: tasksCreateOrConnectWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput
    connect?: tasksWhereUniqueInput
  }

  export type tasksCreateNestedOneWithoutTask_dependencies_task_dependencies_taskIdTotasksInput = {
    create?: XOR<tasksCreateWithoutTask_dependencies_task_dependencies_taskIdTotasksInput, tasksUncheckedCreateWithoutTask_dependencies_task_dependencies_taskIdTotasksInput>
    connectOrCreate?: tasksCreateOrConnectWithoutTask_dependencies_task_dependencies_taskIdTotasksInput
    connect?: tasksWhereUniqueInput
  }

  export type tasksUpdateOneRequiredWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksNestedInput = {
    create?: XOR<tasksCreateWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput, tasksUncheckedCreateWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput>
    connectOrCreate?: tasksCreateOrConnectWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput
    upsert?: tasksUpsertWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput
    connect?: tasksWhereUniqueInput
    update?: XOR<XOR<tasksUpdateToOneWithWhereWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput, tasksUpdateWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput>, tasksUncheckedUpdateWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput>
  }

  export type tasksUpdateOneRequiredWithoutTask_dependencies_task_dependencies_taskIdTotasksNestedInput = {
    create?: XOR<tasksCreateWithoutTask_dependencies_task_dependencies_taskIdTotasksInput, tasksUncheckedCreateWithoutTask_dependencies_task_dependencies_taskIdTotasksInput>
    connectOrCreate?: tasksCreateOrConnectWithoutTask_dependencies_task_dependencies_taskIdTotasksInput
    upsert?: tasksUpsertWithoutTask_dependencies_task_dependencies_taskIdTotasksInput
    connect?: tasksWhereUniqueInput
    update?: XOR<XOR<tasksUpdateToOneWithWhereWithoutTask_dependencies_task_dependencies_taskIdTotasksInput, tasksUpdateWithoutTask_dependencies_task_dependencies_taskIdTotasksInput>, tasksUncheckedUpdateWithoutTask_dependencies_task_dependencies_taskIdTotasksInput>
  }

  export type ProductCreateNestedOneWithoutTask_templatesInput = {
    create?: XOR<ProductCreateWithoutTask_templatesInput, ProductUncheckedCreateWithoutTask_templatesInput>
    connectOrCreate?: ProductCreateOrConnectWithoutTask_templatesInput
    connect?: ProductWhereUniqueInput
  }

  export type tasksCreateNestedManyWithoutTask_templatesInput = {
    create?: XOR<tasksCreateWithoutTask_templatesInput, tasksUncheckedCreateWithoutTask_templatesInput> | tasksCreateWithoutTask_templatesInput[] | tasksUncheckedCreateWithoutTask_templatesInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutTask_templatesInput | tasksCreateOrConnectWithoutTask_templatesInput[]
    createMany?: tasksCreateManyTask_templatesInputEnvelope
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
  }

  export type tasksUncheckedCreateNestedManyWithoutTask_templatesInput = {
    create?: XOR<tasksCreateWithoutTask_templatesInput, tasksUncheckedCreateWithoutTask_templatesInput> | tasksCreateWithoutTask_templatesInput[] | tasksUncheckedCreateWithoutTask_templatesInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutTask_templatesInput | tasksCreateOrConnectWithoutTask_templatesInput[]
    createMany?: tasksCreateManyTask_templatesInputEnvelope
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
  }

  export type EnumTaskTriggerConditionFieldUpdateOperationsInput = {
    set?: $Enums.TaskTriggerCondition
  }

  export type ProductUpdateOneRequiredWithoutTask_templatesNestedInput = {
    create?: XOR<ProductCreateWithoutTask_templatesInput, ProductUncheckedCreateWithoutTask_templatesInput>
    connectOrCreate?: ProductCreateOrConnectWithoutTask_templatesInput
    upsert?: ProductUpsertWithoutTask_templatesInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutTask_templatesInput, ProductUpdateWithoutTask_templatesInput>, ProductUncheckedUpdateWithoutTask_templatesInput>
  }

  export type tasksUpdateManyWithoutTask_templatesNestedInput = {
    create?: XOR<tasksCreateWithoutTask_templatesInput, tasksUncheckedCreateWithoutTask_templatesInput> | tasksCreateWithoutTask_templatesInput[] | tasksUncheckedCreateWithoutTask_templatesInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutTask_templatesInput | tasksCreateOrConnectWithoutTask_templatesInput[]
    upsert?: tasksUpsertWithWhereUniqueWithoutTask_templatesInput | tasksUpsertWithWhereUniqueWithoutTask_templatesInput[]
    createMany?: tasksCreateManyTask_templatesInputEnvelope
    set?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    disconnect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    delete?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    update?: tasksUpdateWithWhereUniqueWithoutTask_templatesInput | tasksUpdateWithWhereUniqueWithoutTask_templatesInput[]
    updateMany?: tasksUpdateManyWithWhereWithoutTask_templatesInput | tasksUpdateManyWithWhereWithoutTask_templatesInput[]
    deleteMany?: tasksScalarWhereInput | tasksScalarWhereInput[]
  }

  export type tasksUncheckedUpdateManyWithoutTask_templatesNestedInput = {
    create?: XOR<tasksCreateWithoutTask_templatesInput, tasksUncheckedCreateWithoutTask_templatesInput> | tasksCreateWithoutTask_templatesInput[] | tasksUncheckedCreateWithoutTask_templatesInput[]
    connectOrCreate?: tasksCreateOrConnectWithoutTask_templatesInput | tasksCreateOrConnectWithoutTask_templatesInput[]
    upsert?: tasksUpsertWithWhereUniqueWithoutTask_templatesInput | tasksUpsertWithWhereUniqueWithoutTask_templatesInput[]
    createMany?: tasksCreateManyTask_templatesInputEnvelope
    set?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    disconnect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    delete?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    connect?: tasksWhereUniqueInput | tasksWhereUniqueInput[]
    update?: tasksUpdateWithWhereUniqueWithoutTask_templatesInput | tasksUpdateWithWhereUniqueWithoutTask_templatesInput[]
    updateMany?: tasksUpdateManyWithWhereWithoutTask_templatesInput | tasksUpdateManyWithWhereWithoutTask_templatesInput[]
    deleteMany?: tasksScalarWhereInput | tasksScalarWhereInput[]
  }

  export type task_dependenciesCreateNestedManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput = {
    create?: XOR<task_dependenciesCreateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput, task_dependenciesUncheckedCreateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput> | task_dependenciesCreateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput[] | task_dependenciesUncheckedCreateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput[]
    connectOrCreate?: task_dependenciesCreateOrConnectWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput | task_dependenciesCreateOrConnectWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput[]
    createMany?: task_dependenciesCreateManyTasks_task_dependencies_dependsOnTaskIdTotasksInputEnvelope
    connect?: task_dependenciesWhereUniqueInput | task_dependenciesWhereUniqueInput[]
  }

  export type task_dependenciesCreateNestedManyWithoutTasks_task_dependencies_taskIdTotasksInput = {
    create?: XOR<task_dependenciesCreateWithoutTasks_task_dependencies_taskIdTotasksInput, task_dependenciesUncheckedCreateWithoutTasks_task_dependencies_taskIdTotasksInput> | task_dependenciesCreateWithoutTasks_task_dependencies_taskIdTotasksInput[] | task_dependenciesUncheckedCreateWithoutTasks_task_dependencies_taskIdTotasksInput[]
    connectOrCreate?: task_dependenciesCreateOrConnectWithoutTasks_task_dependencies_taskIdTotasksInput | task_dependenciesCreateOrConnectWithoutTasks_task_dependencies_taskIdTotasksInput[]
    createMany?: task_dependenciesCreateManyTasks_task_dependencies_taskIdTotasksInputEnvelope
    connect?: task_dependenciesWhereUniqueInput | task_dependenciesWhereUniqueInput[]
  }

  export type UserCreateNestedOneWithoutTasksInput = {
    create?: XOR<UserCreateWithoutTasksInput, UserUncheckedCreateWithoutTasksInput>
    connectOrCreate?: UserCreateOrConnectWithoutTasksInput
    connect?: UserWhereUniqueInput
  }

  export type EventCreateNestedOneWithoutTasksInput = {
    create?: XOR<EventCreateWithoutTasksInput, EventUncheckedCreateWithoutTasksInput>
    connectOrCreate?: EventCreateOrConnectWithoutTasksInput
    connect?: EventWhereUniqueInput
  }

  export type OrderCreateNestedOneWithoutTasksInput = {
    create?: XOR<OrderCreateWithoutTasksInput, OrderUncheckedCreateWithoutTasksInput>
    connectOrCreate?: OrderCreateOrConnectWithoutTasksInput
    connect?: OrderWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutTasksInput = {
    create?: XOR<ProductCreateWithoutTasksInput, ProductUncheckedCreateWithoutTasksInput>
    connectOrCreate?: ProductCreateOrConnectWithoutTasksInput
    connect?: ProductWhereUniqueInput
  }

  export type task_templatesCreateNestedOneWithoutTasksInput = {
    create?: XOR<task_templatesCreateWithoutTasksInput, task_templatesUncheckedCreateWithoutTasksInput>
    connectOrCreate?: task_templatesCreateOrConnectWithoutTasksInput
    connect?: task_templatesWhereUniqueInput
  }

  export type task_dependenciesUncheckedCreateNestedManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput = {
    create?: XOR<task_dependenciesCreateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput, task_dependenciesUncheckedCreateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput> | task_dependenciesCreateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput[] | task_dependenciesUncheckedCreateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput[]
    connectOrCreate?: task_dependenciesCreateOrConnectWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput | task_dependenciesCreateOrConnectWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput[]
    createMany?: task_dependenciesCreateManyTasks_task_dependencies_dependsOnTaskIdTotasksInputEnvelope
    connect?: task_dependenciesWhereUniqueInput | task_dependenciesWhereUniqueInput[]
  }

  export type task_dependenciesUncheckedCreateNestedManyWithoutTasks_task_dependencies_taskIdTotasksInput = {
    create?: XOR<task_dependenciesCreateWithoutTasks_task_dependencies_taskIdTotasksInput, task_dependenciesUncheckedCreateWithoutTasks_task_dependencies_taskIdTotasksInput> | task_dependenciesCreateWithoutTasks_task_dependencies_taskIdTotasksInput[] | task_dependenciesUncheckedCreateWithoutTasks_task_dependencies_taskIdTotasksInput[]
    connectOrCreate?: task_dependenciesCreateOrConnectWithoutTasks_task_dependencies_taskIdTotasksInput | task_dependenciesCreateOrConnectWithoutTasks_task_dependencies_taskIdTotasksInput[]
    createMany?: task_dependenciesCreateManyTasks_task_dependencies_taskIdTotasksInputEnvelope
    connect?: task_dependenciesWhereUniqueInput | task_dependenciesWhereUniqueInput[]
  }

  export type EnumTaskStatusFieldUpdateOperationsInput = {
    set?: $Enums.TaskStatus
  }

  export type EnumTaskPriorityFieldUpdateOperationsInput = {
    set?: $Enums.TaskPriority
  }

  export type task_dependenciesUpdateManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksNestedInput = {
    create?: XOR<task_dependenciesCreateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput, task_dependenciesUncheckedCreateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput> | task_dependenciesCreateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput[] | task_dependenciesUncheckedCreateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput[]
    connectOrCreate?: task_dependenciesCreateOrConnectWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput | task_dependenciesCreateOrConnectWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput[]
    upsert?: task_dependenciesUpsertWithWhereUniqueWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput | task_dependenciesUpsertWithWhereUniqueWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput[]
    createMany?: task_dependenciesCreateManyTasks_task_dependencies_dependsOnTaskIdTotasksInputEnvelope
    set?: task_dependenciesWhereUniqueInput | task_dependenciesWhereUniqueInput[]
    disconnect?: task_dependenciesWhereUniqueInput | task_dependenciesWhereUniqueInput[]
    delete?: task_dependenciesWhereUniqueInput | task_dependenciesWhereUniqueInput[]
    connect?: task_dependenciesWhereUniqueInput | task_dependenciesWhereUniqueInput[]
    update?: task_dependenciesUpdateWithWhereUniqueWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput | task_dependenciesUpdateWithWhereUniqueWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput[]
    updateMany?: task_dependenciesUpdateManyWithWhereWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput | task_dependenciesUpdateManyWithWhereWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput[]
    deleteMany?: task_dependenciesScalarWhereInput | task_dependenciesScalarWhereInput[]
  }

  export type task_dependenciesUpdateManyWithoutTasks_task_dependencies_taskIdTotasksNestedInput = {
    create?: XOR<task_dependenciesCreateWithoutTasks_task_dependencies_taskIdTotasksInput, task_dependenciesUncheckedCreateWithoutTasks_task_dependencies_taskIdTotasksInput> | task_dependenciesCreateWithoutTasks_task_dependencies_taskIdTotasksInput[] | task_dependenciesUncheckedCreateWithoutTasks_task_dependencies_taskIdTotasksInput[]
    connectOrCreate?: task_dependenciesCreateOrConnectWithoutTasks_task_dependencies_taskIdTotasksInput | task_dependenciesCreateOrConnectWithoutTasks_task_dependencies_taskIdTotasksInput[]
    upsert?: task_dependenciesUpsertWithWhereUniqueWithoutTasks_task_dependencies_taskIdTotasksInput | task_dependenciesUpsertWithWhereUniqueWithoutTasks_task_dependencies_taskIdTotasksInput[]
    createMany?: task_dependenciesCreateManyTasks_task_dependencies_taskIdTotasksInputEnvelope
    set?: task_dependenciesWhereUniqueInput | task_dependenciesWhereUniqueInput[]
    disconnect?: task_dependenciesWhereUniqueInput | task_dependenciesWhereUniqueInput[]
    delete?: task_dependenciesWhereUniqueInput | task_dependenciesWhereUniqueInput[]
    connect?: task_dependenciesWhereUniqueInput | task_dependenciesWhereUniqueInput[]
    update?: task_dependenciesUpdateWithWhereUniqueWithoutTasks_task_dependencies_taskIdTotasksInput | task_dependenciesUpdateWithWhereUniqueWithoutTasks_task_dependencies_taskIdTotasksInput[]
    updateMany?: task_dependenciesUpdateManyWithWhereWithoutTasks_task_dependencies_taskIdTotasksInput | task_dependenciesUpdateManyWithWhereWithoutTasks_task_dependencies_taskIdTotasksInput[]
    deleteMany?: task_dependenciesScalarWhereInput | task_dependenciesScalarWhereInput[]
  }

  export type UserUpdateOneWithoutTasksNestedInput = {
    create?: XOR<UserCreateWithoutTasksInput, UserUncheckedCreateWithoutTasksInput>
    connectOrCreate?: UserCreateOrConnectWithoutTasksInput
    upsert?: UserUpsertWithoutTasksInput
    disconnect?: UserWhereInput | boolean
    delete?: UserWhereInput | boolean
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutTasksInput, UserUpdateWithoutTasksInput>, UserUncheckedUpdateWithoutTasksInput>
  }

  export type EventUpdateOneWithoutTasksNestedInput = {
    create?: XOR<EventCreateWithoutTasksInput, EventUncheckedCreateWithoutTasksInput>
    connectOrCreate?: EventCreateOrConnectWithoutTasksInput
    upsert?: EventUpsertWithoutTasksInput
    disconnect?: EventWhereInput | boolean
    delete?: EventWhereInput | boolean
    connect?: EventWhereUniqueInput
    update?: XOR<XOR<EventUpdateToOneWithWhereWithoutTasksInput, EventUpdateWithoutTasksInput>, EventUncheckedUpdateWithoutTasksInput>
  }

  export type OrderUpdateOneWithoutTasksNestedInput = {
    create?: XOR<OrderCreateWithoutTasksInput, OrderUncheckedCreateWithoutTasksInput>
    connectOrCreate?: OrderCreateOrConnectWithoutTasksInput
    upsert?: OrderUpsertWithoutTasksInput
    disconnect?: OrderWhereInput | boolean
    delete?: OrderWhereInput | boolean
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutTasksInput, OrderUpdateWithoutTasksInput>, OrderUncheckedUpdateWithoutTasksInput>
  }

  export type ProductUpdateOneWithoutTasksNestedInput = {
    create?: XOR<ProductCreateWithoutTasksInput, ProductUncheckedCreateWithoutTasksInput>
    connectOrCreate?: ProductCreateOrConnectWithoutTasksInput
    upsert?: ProductUpsertWithoutTasksInput
    disconnect?: ProductWhereInput | boolean
    delete?: ProductWhereInput | boolean
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutTasksInput, ProductUpdateWithoutTasksInput>, ProductUncheckedUpdateWithoutTasksInput>
  }

  export type task_templatesUpdateOneWithoutTasksNestedInput = {
    create?: XOR<task_templatesCreateWithoutTasksInput, task_templatesUncheckedCreateWithoutTasksInput>
    connectOrCreate?: task_templatesCreateOrConnectWithoutTasksInput
    upsert?: task_templatesUpsertWithoutTasksInput
    disconnect?: task_templatesWhereInput | boolean
    delete?: task_templatesWhereInput | boolean
    connect?: task_templatesWhereUniqueInput
    update?: XOR<XOR<task_templatesUpdateToOneWithWhereWithoutTasksInput, task_templatesUpdateWithoutTasksInput>, task_templatesUncheckedUpdateWithoutTasksInput>
  }

  export type task_dependenciesUncheckedUpdateManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksNestedInput = {
    create?: XOR<task_dependenciesCreateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput, task_dependenciesUncheckedCreateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput> | task_dependenciesCreateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput[] | task_dependenciesUncheckedCreateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput[]
    connectOrCreate?: task_dependenciesCreateOrConnectWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput | task_dependenciesCreateOrConnectWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput[]
    upsert?: task_dependenciesUpsertWithWhereUniqueWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput | task_dependenciesUpsertWithWhereUniqueWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput[]
    createMany?: task_dependenciesCreateManyTasks_task_dependencies_dependsOnTaskIdTotasksInputEnvelope
    set?: task_dependenciesWhereUniqueInput | task_dependenciesWhereUniqueInput[]
    disconnect?: task_dependenciesWhereUniqueInput | task_dependenciesWhereUniqueInput[]
    delete?: task_dependenciesWhereUniqueInput | task_dependenciesWhereUniqueInput[]
    connect?: task_dependenciesWhereUniqueInput | task_dependenciesWhereUniqueInput[]
    update?: task_dependenciesUpdateWithWhereUniqueWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput | task_dependenciesUpdateWithWhereUniqueWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput[]
    updateMany?: task_dependenciesUpdateManyWithWhereWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput | task_dependenciesUpdateManyWithWhereWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput[]
    deleteMany?: task_dependenciesScalarWhereInput | task_dependenciesScalarWhereInput[]
  }

  export type task_dependenciesUncheckedUpdateManyWithoutTasks_task_dependencies_taskIdTotasksNestedInput = {
    create?: XOR<task_dependenciesCreateWithoutTasks_task_dependencies_taskIdTotasksInput, task_dependenciesUncheckedCreateWithoutTasks_task_dependencies_taskIdTotasksInput> | task_dependenciesCreateWithoutTasks_task_dependencies_taskIdTotasksInput[] | task_dependenciesUncheckedCreateWithoutTasks_task_dependencies_taskIdTotasksInput[]
    connectOrCreate?: task_dependenciesCreateOrConnectWithoutTasks_task_dependencies_taskIdTotasksInput | task_dependenciesCreateOrConnectWithoutTasks_task_dependencies_taskIdTotasksInput[]
    upsert?: task_dependenciesUpsertWithWhereUniqueWithoutTasks_task_dependencies_taskIdTotasksInput | task_dependenciesUpsertWithWhereUniqueWithoutTasks_task_dependencies_taskIdTotasksInput[]
    createMany?: task_dependenciesCreateManyTasks_task_dependencies_taskIdTotasksInputEnvelope
    set?: task_dependenciesWhereUniqueInput | task_dependenciesWhereUniqueInput[]
    disconnect?: task_dependenciesWhereUniqueInput | task_dependenciesWhereUniqueInput[]
    delete?: task_dependenciesWhereUniqueInput | task_dependenciesWhereUniqueInput[]
    connect?: task_dependenciesWhereUniqueInput | task_dependenciesWhereUniqueInput[]
    update?: task_dependenciesUpdateWithWhereUniqueWithoutTasks_task_dependencies_taskIdTotasksInput | task_dependenciesUpdateWithWhereUniqueWithoutTasks_task_dependencies_taskIdTotasksInput[]
    updateMany?: task_dependenciesUpdateManyWithWhereWithoutTasks_task_dependencies_taskIdTotasksInput | task_dependenciesUpdateManyWithWhereWithoutTasks_task_dependencies_taskIdTotasksInput[]
    deleteMany?: task_dependenciesScalarWhereInput | task_dependenciesScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutUser_rolesInput = {
    create?: XOR<UserCreateWithoutUser_rolesInput, UserUncheckedCreateWithoutUser_rolesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUser_rolesInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutUser_rolesNestedInput = {
    create?: XOR<UserCreateWithoutUser_rolesInput, UserUncheckedCreateWithoutUser_rolesInput>
    connectOrCreate?: UserCreateOrConnectWithoutUser_rolesInput
    upsert?: UserUpsertWithoutUser_rolesInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUser_rolesInput, UserUpdateWithoutUser_rolesInput>, UserUncheckedUpdateWithoutUser_rolesInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedEnumTaskTriggerConditionFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskTriggerCondition | EnumTaskTriggerConditionFieldRefInput<$PrismaModel>
    in?: $Enums.TaskTriggerCondition[] | ListEnumTaskTriggerConditionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskTriggerCondition[] | ListEnumTaskTriggerConditionFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskTriggerConditionFilter<$PrismaModel> | $Enums.TaskTriggerCondition
  }

  export type NestedEnumTaskTriggerConditionWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskTriggerCondition | EnumTaskTriggerConditionFieldRefInput<$PrismaModel>
    in?: $Enums.TaskTriggerCondition[] | ListEnumTaskTriggerConditionFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskTriggerCondition[] | ListEnumTaskTriggerConditionFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskTriggerConditionWithAggregatesFilter<$PrismaModel> | $Enums.TaskTriggerCondition
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTaskTriggerConditionFilter<$PrismaModel>
    _max?: NestedEnumTaskTriggerConditionFilter<$PrismaModel>
  }

  export type NestedEnumTaskStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskStatus | EnumTaskStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskStatusFilter<$PrismaModel> | $Enums.TaskStatus
  }

  export type NestedEnumTaskPriorityFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskPriority | EnumTaskPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.TaskPriority[] | ListEnumTaskPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskPriority[] | ListEnumTaskPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskPriorityFilter<$PrismaModel> | $Enums.TaskPriority
  }

  export type NestedEnumTaskStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskStatus | EnumTaskStatusFieldRefInput<$PrismaModel>
    in?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskStatus[] | ListEnumTaskStatusFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskStatusWithAggregatesFilter<$PrismaModel> | $Enums.TaskStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTaskStatusFilter<$PrismaModel>
    _max?: NestedEnumTaskStatusFilter<$PrismaModel>
  }

  export type NestedEnumTaskPriorityWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.TaskPriority | EnumTaskPriorityFieldRefInput<$PrismaModel>
    in?: $Enums.TaskPriority[] | ListEnumTaskPriorityFieldRefInput<$PrismaModel>
    notIn?: $Enums.TaskPriority[] | ListEnumTaskPriorityFieldRefInput<$PrismaModel>
    not?: NestedEnumTaskPriorityWithAggregatesFilter<$PrismaModel> | $Enums.TaskPriority
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumTaskPriorityFilter<$PrismaModel>
    _max?: NestedEnumTaskPriorityFilter<$PrismaModel>
  }

  export type EventCreateWithoutCustomerInput = {
    id: string
    title: string
    description?: string | null
    location: string
    startDate: Date | string
    endDate?: Date | string | null
    status?: string
    staffNotes?: string | null
    assignedStaffId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    customerNotes?: string | null
    depositAmount?: number | null
    depositPaid?: boolean
    endTime?: string | null
    finalPaymentPaid?: boolean
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    stage?: string
    startTime: string
    totalAmount?: number | null
    EventItem?: EventItemCreateNestedManyWithoutEventInput
    EventStatusHistory?: EventStatusHistoryCreateNestedManyWithoutEventInput
    tasks?: tasksCreateNestedManyWithoutEventInput
  }

  export type EventUncheckedCreateWithoutCustomerInput = {
    id: string
    title: string
    description?: string | null
    location: string
    startDate: Date | string
    endDate?: Date | string | null
    status?: string
    staffNotes?: string | null
    assignedStaffId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    customerNotes?: string | null
    depositAmount?: number | null
    depositPaid?: boolean
    endTime?: string | null
    finalPaymentPaid?: boolean
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    stage?: string
    startTime: string
    totalAmount?: number | null
    EventItem?: EventItemUncheckedCreateNestedManyWithoutEventInput
    EventStatusHistory?: EventStatusHistoryUncheckedCreateNestedManyWithoutEventInput
    tasks?: tasksUncheckedCreateNestedManyWithoutEventInput
  }

  export type EventCreateOrConnectWithoutCustomerInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutCustomerInput, EventUncheckedCreateWithoutCustomerInput>
  }

  export type EventCreateManyCustomerInputEnvelope = {
    data: EventCreateManyCustomerInput | EventCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type OrderCreateWithoutCustomerInput = {
    id: string
    totalAmount: number
    status?: string
    createdAt?: Date | string
    updatedAt: Date | string
    assignedStaffId?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: string | null
    deliveredAt?: Date | string | null
    discountAmount?: number | null
    finalAmount: number
    orderNumber: string
    paymentStatus?: string
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    shippedAt?: Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: number | null
    staffNotes?: string | null
    stage?: string
    taxAmount?: number | null
    OrderItem?: OrderItemCreateNestedManyWithoutOrderInput
    OrderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutOrderInput
    tasks?: tasksCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutCustomerInput = {
    id: string
    totalAmount: number
    status?: string
    createdAt?: Date | string
    updatedAt: Date | string
    assignedStaffId?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: string | null
    deliveredAt?: Date | string | null
    discountAmount?: number | null
    finalAmount: number
    orderNumber: string
    paymentStatus?: string
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    shippedAt?: Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: number | null
    staffNotes?: string | null
    stage?: string
    taxAmount?: number | null
    OrderItem?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
    OrderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutOrderInput
    tasks?: tasksUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutCustomerInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput>
  }

  export type OrderCreateManyCustomerInputEnvelope = {
    data: OrderCreateManyCustomerInput | OrderCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type EventUpsertWithWhereUniqueWithoutCustomerInput = {
    where: EventWhereUniqueInput
    update: XOR<EventUpdateWithoutCustomerInput, EventUncheckedUpdateWithoutCustomerInput>
    create: XOR<EventCreateWithoutCustomerInput, EventUncheckedCreateWithoutCustomerInput>
  }

  export type EventUpdateWithWhereUniqueWithoutCustomerInput = {
    where: EventWhereUniqueInput
    data: XOR<EventUpdateWithoutCustomerInput, EventUncheckedUpdateWithoutCustomerInput>
  }

  export type EventUpdateManyWithWhereWithoutCustomerInput = {
    where: EventScalarWhereInput
    data: XOR<EventUpdateManyMutationInput, EventUncheckedUpdateManyWithoutCustomerInput>
  }

  export type EventScalarWhereInput = {
    AND?: EventScalarWhereInput | EventScalarWhereInput[]
    OR?: EventScalarWhereInput[]
    NOT?: EventScalarWhereInput | EventScalarWhereInput[]
    id?: StringFilter<"Event"> | string
    title?: StringFilter<"Event"> | string
    description?: StringNullableFilter<"Event"> | string | null
    location?: StringFilter<"Event"> | string
    startDate?: DateTimeFilter<"Event"> | Date | string
    endDate?: DateTimeNullableFilter<"Event"> | Date | string | null
    customerId?: StringNullableFilter<"Event"> | string | null
    status?: StringFilter<"Event"> | string
    staffNotes?: StringNullableFilter<"Event"> | string | null
    assignedStaffId?: StringNullableFilter<"Event"> | string | null
    createdAt?: DateTimeFilter<"Event"> | Date | string
    updatedAt?: DateTimeFilter<"Event"> | Date | string
    customerNotes?: StringNullableFilter<"Event"> | string | null
    depositAmount?: FloatNullableFilter<"Event"> | number | null
    depositPaid?: BoolFilter<"Event"> | boolean
    endTime?: StringNullableFilter<"Event"> | string | null
    finalPaymentPaid?: BoolFilter<"Event"> | boolean
    reviewedAt?: DateTimeNullableFilter<"Event"> | Date | string | null
    reviewedBy?: StringNullableFilter<"Event"> | string | null
    stage?: StringFilter<"Event"> | string
    startTime?: StringFilter<"Event"> | string
    totalAmount?: FloatNullableFilter<"Event"> | number | null
  }

  export type OrderUpsertWithWhereUniqueWithoutCustomerInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutCustomerInput, OrderUncheckedUpdateWithoutCustomerInput>
    create: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutCustomerInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutCustomerInput, OrderUncheckedUpdateWithoutCustomerInput>
  }

  export type OrderUpdateManyWithWhereWithoutCustomerInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutCustomerInput>
  }

  export type OrderScalarWhereInput = {
    AND?: OrderScalarWhereInput | OrderScalarWhereInput[]
    OR?: OrderScalarWhereInput[]
    NOT?: OrderScalarWhereInput | OrderScalarWhereInput[]
    id?: StringFilter<"Order"> | string
    customerId?: StringFilter<"Order"> | string
    totalAmount?: FloatFilter<"Order"> | number
    status?: StringFilter<"Order"> | string
    createdAt?: DateTimeFilter<"Order"> | Date | string
    updatedAt?: DateTimeFilter<"Order"> | Date | string
    assignedStaffId?: StringNullableFilter<"Order"> | string | null
    billingAddress?: JsonNullableFilter<"Order">
    customerNotes?: StringNullableFilter<"Order"> | string | null
    deliveredAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    discountAmount?: FloatNullableFilter<"Order"> | number | null
    finalAmount?: FloatFilter<"Order"> | number
    orderNumber?: StringFilter<"Order"> | string
    paymentStatus?: StringFilter<"Order"> | string
    reviewedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    reviewedBy?: StringNullableFilter<"Order"> | string | null
    shippedAt?: DateTimeNullableFilter<"Order"> | Date | string | null
    shippingAddress?: JsonNullableFilter<"Order">
    shippingAmount?: FloatNullableFilter<"Order"> | number | null
    staffNotes?: StringNullableFilter<"Order"> | string | null
    stage?: StringFilter<"Order"> | string
    taxAmount?: FloatNullableFilter<"Order"> | number | null
  }

  export type CustomerCreateWithoutEventInput = {
    id: string
    email: string
    firstName: string
    lastName: string
    phone?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Order?: OrderCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutEventInput = {
    id: string
    email: string
    firstName: string
    lastName: string
    phone?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Order?: OrderUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutEventInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutEventInput, CustomerUncheckedCreateWithoutEventInput>
  }

  export type EventItemCreateWithoutEventInput = {
    id: string
    quantity?: number
    unitPrice?: number | null
    totalPrice?: number | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Product: ProductCreateNestedOneWithoutEventItemInput
    EventItemOption?: EventItemOptionCreateNestedManyWithoutEventItemInput
  }

  export type EventItemUncheckedCreateWithoutEventInput = {
    id: string
    productId: string
    quantity?: number
    unitPrice?: number | null
    totalPrice?: number | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    EventItemOption?: EventItemOptionUncheckedCreateNestedManyWithoutEventItemInput
  }

  export type EventItemCreateOrConnectWithoutEventInput = {
    where: EventItemWhereUniqueInput
    create: XOR<EventItemCreateWithoutEventInput, EventItemUncheckedCreateWithoutEventInput>
  }

  export type EventItemCreateManyEventInputEnvelope = {
    data: EventItemCreateManyEventInput | EventItemCreateManyEventInput[]
    skipDuplicates?: boolean
  }

  export type EventStatusHistoryCreateWithoutEventInput = {
    id: string
    fromStatus?: string | null
    toStatus: string
    fromStage?: string | null
    toStage: string
    notes?: string | null
    changedBy?: string | null
    changedAt?: Date | string
  }

  export type EventStatusHistoryUncheckedCreateWithoutEventInput = {
    id: string
    fromStatus?: string | null
    toStatus: string
    fromStage?: string | null
    toStage: string
    notes?: string | null
    changedBy?: string | null
    changedAt?: Date | string
  }

  export type EventStatusHistoryCreateOrConnectWithoutEventInput = {
    where: EventStatusHistoryWhereUniqueInput
    create: XOR<EventStatusHistoryCreateWithoutEventInput, EventStatusHistoryUncheckedCreateWithoutEventInput>
  }

  export type EventStatusHistoryCreateManyEventInputEnvelope = {
    data: EventStatusHistoryCreateManyEventInput | EventStatusHistoryCreateManyEventInput[]
    skipDuplicates?: boolean
  }

  export type tasksCreateWithoutEventInput = {
    id: string
    name: string
    description?: string | null
    category?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    dueDate?: Date | string | null
    startTime?: Date | string | null
    endTime?: Date | string | null
    estimatedDuration?: number | null
    actualDuration?: number | null
    actualStartTime?: Date | string | null
    actualEndTime?: Date | string | null
    completionNotes?: string | null
    requiresCustomerApproval?: boolean
    customerApprovedAt?: Date | string | null
    blockedReason?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesCreateNestedManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesCreateNestedManyWithoutTasks_task_dependencies_taskIdTotasksInput
    User?: UserCreateNestedOneWithoutTasksInput
    Order?: OrderCreateNestedOneWithoutTasksInput
    Product?: ProductCreateNestedOneWithoutTasksInput
    task_templates?: task_templatesCreateNestedOneWithoutTasksInput
  }

  export type tasksUncheckedCreateWithoutEventInput = {
    id: string
    templateId?: string | null
    orderId?: string | null
    productId?: string | null
    assignedUserId?: string | null
    name: string
    description?: string | null
    category?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    dueDate?: Date | string | null
    startTime?: Date | string | null
    endTime?: Date | string | null
    estimatedDuration?: number | null
    actualDuration?: number | null
    actualStartTime?: Date | string | null
    actualEndTime?: Date | string | null
    completionNotes?: string | null
    requiresCustomerApproval?: boolean
    customerApprovedAt?: Date | string | null
    blockedReason?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesUncheckedCreateNestedManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesUncheckedCreateNestedManyWithoutTasks_task_dependencies_taskIdTotasksInput
  }

  export type tasksCreateOrConnectWithoutEventInput = {
    where: tasksWhereUniqueInput
    create: XOR<tasksCreateWithoutEventInput, tasksUncheckedCreateWithoutEventInput>
  }

  export type tasksCreateManyEventInputEnvelope = {
    data: tasksCreateManyEventInput | tasksCreateManyEventInput[]
    skipDuplicates?: boolean
  }

  export type CustomerUpsertWithoutEventInput = {
    update: XOR<CustomerUpdateWithoutEventInput, CustomerUncheckedUpdateWithoutEventInput>
    create: XOR<CustomerCreateWithoutEventInput, CustomerUncheckedCreateWithoutEventInput>
    where?: CustomerWhereInput
  }

  export type CustomerUpdateToOneWithWhereWithoutEventInput = {
    where?: CustomerWhereInput
    data: XOR<CustomerUpdateWithoutEventInput, CustomerUncheckedUpdateWithoutEventInput>
  }

  export type CustomerUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Order?: OrderUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Order?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type EventItemUpsertWithWhereUniqueWithoutEventInput = {
    where: EventItemWhereUniqueInput
    update: XOR<EventItemUpdateWithoutEventInput, EventItemUncheckedUpdateWithoutEventInput>
    create: XOR<EventItemCreateWithoutEventInput, EventItemUncheckedCreateWithoutEventInput>
  }

  export type EventItemUpdateWithWhereUniqueWithoutEventInput = {
    where: EventItemWhereUniqueInput
    data: XOR<EventItemUpdateWithoutEventInput, EventItemUncheckedUpdateWithoutEventInput>
  }

  export type EventItemUpdateManyWithWhereWithoutEventInput = {
    where: EventItemScalarWhereInput
    data: XOR<EventItemUpdateManyMutationInput, EventItemUncheckedUpdateManyWithoutEventInput>
  }

  export type EventItemScalarWhereInput = {
    AND?: EventItemScalarWhereInput | EventItemScalarWhereInput[]
    OR?: EventItemScalarWhereInput[]
    NOT?: EventItemScalarWhereInput | EventItemScalarWhereInput[]
    id?: StringFilter<"EventItem"> | string
    eventId?: StringFilter<"EventItem"> | string
    productId?: StringFilter<"EventItem"> | string
    quantity?: IntFilter<"EventItem"> | number
    unitPrice?: FloatNullableFilter<"EventItem"> | number | null
    totalPrice?: FloatNullableFilter<"EventItem"> | number | null
    notes?: StringNullableFilter<"EventItem"> | string | null
    createdAt?: DateTimeFilter<"EventItem"> | Date | string
    updatedAt?: DateTimeFilter<"EventItem"> | Date | string
  }

  export type EventStatusHistoryUpsertWithWhereUniqueWithoutEventInput = {
    where: EventStatusHistoryWhereUniqueInput
    update: XOR<EventStatusHistoryUpdateWithoutEventInput, EventStatusHistoryUncheckedUpdateWithoutEventInput>
    create: XOR<EventStatusHistoryCreateWithoutEventInput, EventStatusHistoryUncheckedCreateWithoutEventInput>
  }

  export type EventStatusHistoryUpdateWithWhereUniqueWithoutEventInput = {
    where: EventStatusHistoryWhereUniqueInput
    data: XOR<EventStatusHistoryUpdateWithoutEventInput, EventStatusHistoryUncheckedUpdateWithoutEventInput>
  }

  export type EventStatusHistoryUpdateManyWithWhereWithoutEventInput = {
    where: EventStatusHistoryScalarWhereInput
    data: XOR<EventStatusHistoryUpdateManyMutationInput, EventStatusHistoryUncheckedUpdateManyWithoutEventInput>
  }

  export type EventStatusHistoryScalarWhereInput = {
    AND?: EventStatusHistoryScalarWhereInput | EventStatusHistoryScalarWhereInput[]
    OR?: EventStatusHistoryScalarWhereInput[]
    NOT?: EventStatusHistoryScalarWhereInput | EventStatusHistoryScalarWhereInput[]
    id?: StringFilter<"EventStatusHistory"> | string
    eventId?: StringFilter<"EventStatusHistory"> | string
    fromStatus?: StringNullableFilter<"EventStatusHistory"> | string | null
    toStatus?: StringFilter<"EventStatusHistory"> | string
    fromStage?: StringNullableFilter<"EventStatusHistory"> | string | null
    toStage?: StringFilter<"EventStatusHistory"> | string
    notes?: StringNullableFilter<"EventStatusHistory"> | string | null
    changedBy?: StringNullableFilter<"EventStatusHistory"> | string | null
    changedAt?: DateTimeFilter<"EventStatusHistory"> | Date | string
  }

  export type tasksUpsertWithWhereUniqueWithoutEventInput = {
    where: tasksWhereUniqueInput
    update: XOR<tasksUpdateWithoutEventInput, tasksUncheckedUpdateWithoutEventInput>
    create: XOR<tasksCreateWithoutEventInput, tasksUncheckedCreateWithoutEventInput>
  }

  export type tasksUpdateWithWhereUniqueWithoutEventInput = {
    where: tasksWhereUniqueInput
    data: XOR<tasksUpdateWithoutEventInput, tasksUncheckedUpdateWithoutEventInput>
  }

  export type tasksUpdateManyWithWhereWithoutEventInput = {
    where: tasksScalarWhereInput
    data: XOR<tasksUpdateManyMutationInput, tasksUncheckedUpdateManyWithoutEventInput>
  }

  export type tasksScalarWhereInput = {
    AND?: tasksScalarWhereInput | tasksScalarWhereInput[]
    OR?: tasksScalarWhereInput[]
    NOT?: tasksScalarWhereInput | tasksScalarWhereInput[]
    id?: StringFilter<"tasks"> | string
    templateId?: StringNullableFilter<"tasks"> | string | null
    eventId?: StringNullableFilter<"tasks"> | string | null
    orderId?: StringNullableFilter<"tasks"> | string | null
    productId?: StringNullableFilter<"tasks"> | string | null
    assignedUserId?: StringNullableFilter<"tasks"> | string | null
    name?: StringFilter<"tasks"> | string
    description?: StringNullableFilter<"tasks"> | string | null
    category?: StringNullableFilter<"tasks"> | string | null
    status?: EnumTaskStatusFilter<"tasks"> | $Enums.TaskStatus
    priority?: EnumTaskPriorityFilter<"tasks"> | $Enums.TaskPriority
    dueDate?: DateTimeNullableFilter<"tasks"> | Date | string | null
    startTime?: DateTimeNullableFilter<"tasks"> | Date | string | null
    endTime?: DateTimeNullableFilter<"tasks"> | Date | string | null
    estimatedDuration?: IntNullableFilter<"tasks"> | number | null
    actualDuration?: IntNullableFilter<"tasks"> | number | null
    actualStartTime?: DateTimeNullableFilter<"tasks"> | Date | string | null
    actualEndTime?: DateTimeNullableFilter<"tasks"> | Date | string | null
    completionNotes?: StringNullableFilter<"tasks"> | string | null
    requiresCustomerApproval?: BoolFilter<"tasks"> | boolean
    customerApprovedAt?: DateTimeNullableFilter<"tasks"> | Date | string | null
    blockedReason?: StringNullableFilter<"tasks"> | string | null
    createdAt?: DateTimeFilter<"tasks"> | Date | string
    updatedAt?: DateTimeFilter<"tasks"> | Date | string
  }

  export type CustomerCreateWithoutOrderInput = {
    id: string
    email: string
    firstName: string
    lastName: string
    phone?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Event?: EventCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutOrderInput = {
    id: string
    email: string
    firstName: string
    lastName: string
    phone?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Event?: EventUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutOrderInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutOrderInput, CustomerUncheckedCreateWithoutOrderInput>
  }

  export type OrderItemCreateWithoutOrderInput = {
    id: string
    quantity?: number
    unitPrice: number
    totalPrice: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Product: ProductCreateNestedOneWithoutOrderItemInput
    OrderItemOption?: OrderItemOptionCreateNestedManyWithoutOrderItemInput
  }

  export type OrderItemUncheckedCreateWithoutOrderInput = {
    id: string
    productId: string
    quantity?: number
    unitPrice: number
    totalPrice: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    OrderItemOption?: OrderItemOptionUncheckedCreateNestedManyWithoutOrderItemInput
  }

  export type OrderItemCreateOrConnectWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    create: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput>
  }

  export type OrderItemCreateManyOrderInputEnvelope = {
    data: OrderItemCreateManyOrderInput | OrderItemCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type OrderStatusHistoryCreateWithoutOrderInput = {
    id: string
    fromStatus?: string | null
    toStatus: string
    fromStage?: string | null
    toStage: string
    notes?: string | null
    changedBy?: string | null
    changedAt?: Date | string
  }

  export type OrderStatusHistoryUncheckedCreateWithoutOrderInput = {
    id: string
    fromStatus?: string | null
    toStatus: string
    fromStage?: string | null
    toStage: string
    notes?: string | null
    changedBy?: string | null
    changedAt?: Date | string
  }

  export type OrderStatusHistoryCreateOrConnectWithoutOrderInput = {
    where: OrderStatusHistoryWhereUniqueInput
    create: XOR<OrderStatusHistoryCreateWithoutOrderInput, OrderStatusHistoryUncheckedCreateWithoutOrderInput>
  }

  export type OrderStatusHistoryCreateManyOrderInputEnvelope = {
    data: OrderStatusHistoryCreateManyOrderInput | OrderStatusHistoryCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type tasksCreateWithoutOrderInput = {
    id: string
    name: string
    description?: string | null
    category?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    dueDate?: Date | string | null
    startTime?: Date | string | null
    endTime?: Date | string | null
    estimatedDuration?: number | null
    actualDuration?: number | null
    actualStartTime?: Date | string | null
    actualEndTime?: Date | string | null
    completionNotes?: string | null
    requiresCustomerApproval?: boolean
    customerApprovedAt?: Date | string | null
    blockedReason?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesCreateNestedManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesCreateNestedManyWithoutTasks_task_dependencies_taskIdTotasksInput
    User?: UserCreateNestedOneWithoutTasksInput
    Event?: EventCreateNestedOneWithoutTasksInput
    Product?: ProductCreateNestedOneWithoutTasksInput
    task_templates?: task_templatesCreateNestedOneWithoutTasksInput
  }

  export type tasksUncheckedCreateWithoutOrderInput = {
    id: string
    templateId?: string | null
    eventId?: string | null
    productId?: string | null
    assignedUserId?: string | null
    name: string
    description?: string | null
    category?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    dueDate?: Date | string | null
    startTime?: Date | string | null
    endTime?: Date | string | null
    estimatedDuration?: number | null
    actualDuration?: number | null
    actualStartTime?: Date | string | null
    actualEndTime?: Date | string | null
    completionNotes?: string | null
    requiresCustomerApproval?: boolean
    customerApprovedAt?: Date | string | null
    blockedReason?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesUncheckedCreateNestedManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesUncheckedCreateNestedManyWithoutTasks_task_dependencies_taskIdTotasksInput
  }

  export type tasksCreateOrConnectWithoutOrderInput = {
    where: tasksWhereUniqueInput
    create: XOR<tasksCreateWithoutOrderInput, tasksUncheckedCreateWithoutOrderInput>
  }

  export type tasksCreateManyOrderInputEnvelope = {
    data: tasksCreateManyOrderInput | tasksCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type CustomerUpsertWithoutOrderInput = {
    update: XOR<CustomerUpdateWithoutOrderInput, CustomerUncheckedUpdateWithoutOrderInput>
    create: XOR<CustomerCreateWithoutOrderInput, CustomerUncheckedCreateWithoutOrderInput>
    where?: CustomerWhereInput
  }

  export type CustomerUpdateToOneWithWhereWithoutOrderInput = {
    where?: CustomerWhereInput
    data: XOR<CustomerUpdateWithoutOrderInput, CustomerUncheckedUpdateWithoutOrderInput>
  }

  export type CustomerUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Event?: EventUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Event?: EventUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type OrderItemUpsertWithWhereUniqueWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    update: XOR<OrderItemUpdateWithoutOrderInput, OrderItemUncheckedUpdateWithoutOrderInput>
    create: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput>
  }

  export type OrderItemUpdateWithWhereUniqueWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    data: XOR<OrderItemUpdateWithoutOrderInput, OrderItemUncheckedUpdateWithoutOrderInput>
  }

  export type OrderItemUpdateManyWithWhereWithoutOrderInput = {
    where: OrderItemScalarWhereInput
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyWithoutOrderInput>
  }

  export type OrderItemScalarWhereInput = {
    AND?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
    OR?: OrderItemScalarWhereInput[]
    NOT?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
    id?: StringFilter<"OrderItem"> | string
    orderId?: StringFilter<"OrderItem"> | string
    productId?: StringFilter<"OrderItem"> | string
    quantity?: IntFilter<"OrderItem"> | number
    unitPrice?: FloatFilter<"OrderItem"> | number
    totalPrice?: FloatFilter<"OrderItem"> | number
    notes?: StringNullableFilter<"OrderItem"> | string | null
    createdAt?: DateTimeFilter<"OrderItem"> | Date | string
    updatedAt?: DateTimeFilter<"OrderItem"> | Date | string
  }

  export type OrderStatusHistoryUpsertWithWhereUniqueWithoutOrderInput = {
    where: OrderStatusHistoryWhereUniqueInput
    update: XOR<OrderStatusHistoryUpdateWithoutOrderInput, OrderStatusHistoryUncheckedUpdateWithoutOrderInput>
    create: XOR<OrderStatusHistoryCreateWithoutOrderInput, OrderStatusHistoryUncheckedCreateWithoutOrderInput>
  }

  export type OrderStatusHistoryUpdateWithWhereUniqueWithoutOrderInput = {
    where: OrderStatusHistoryWhereUniqueInput
    data: XOR<OrderStatusHistoryUpdateWithoutOrderInput, OrderStatusHistoryUncheckedUpdateWithoutOrderInput>
  }

  export type OrderStatusHistoryUpdateManyWithWhereWithoutOrderInput = {
    where: OrderStatusHistoryScalarWhereInput
    data: XOR<OrderStatusHistoryUpdateManyMutationInput, OrderStatusHistoryUncheckedUpdateManyWithoutOrderInput>
  }

  export type OrderStatusHistoryScalarWhereInput = {
    AND?: OrderStatusHistoryScalarWhereInput | OrderStatusHistoryScalarWhereInput[]
    OR?: OrderStatusHistoryScalarWhereInput[]
    NOT?: OrderStatusHistoryScalarWhereInput | OrderStatusHistoryScalarWhereInput[]
    id?: StringFilter<"OrderStatusHistory"> | string
    orderId?: StringFilter<"OrderStatusHistory"> | string
    fromStatus?: StringNullableFilter<"OrderStatusHistory"> | string | null
    toStatus?: StringFilter<"OrderStatusHistory"> | string
    fromStage?: StringNullableFilter<"OrderStatusHistory"> | string | null
    toStage?: StringFilter<"OrderStatusHistory"> | string
    notes?: StringNullableFilter<"OrderStatusHistory"> | string | null
    changedBy?: StringNullableFilter<"OrderStatusHistory"> | string | null
    changedAt?: DateTimeFilter<"OrderStatusHistory"> | Date | string
  }

  export type tasksUpsertWithWhereUniqueWithoutOrderInput = {
    where: tasksWhereUniqueInput
    update: XOR<tasksUpdateWithoutOrderInput, tasksUncheckedUpdateWithoutOrderInput>
    create: XOR<tasksCreateWithoutOrderInput, tasksUncheckedCreateWithoutOrderInput>
  }

  export type tasksUpdateWithWhereUniqueWithoutOrderInput = {
    where: tasksWhereUniqueInput
    data: XOR<tasksUpdateWithoutOrderInput, tasksUncheckedUpdateWithoutOrderInput>
  }

  export type tasksUpdateManyWithWhereWithoutOrderInput = {
    where: tasksScalarWhereInput
    data: XOR<tasksUpdateManyMutationInput, tasksUncheckedUpdateManyWithoutOrderInput>
  }

  export type EventItemCreateWithoutProductInput = {
    id: string
    quantity?: number
    unitPrice?: number | null
    totalPrice?: number | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Event: EventCreateNestedOneWithoutEventItemInput
    EventItemOption?: EventItemOptionCreateNestedManyWithoutEventItemInput
  }

  export type EventItemUncheckedCreateWithoutProductInput = {
    id: string
    eventId: string
    quantity?: number
    unitPrice?: number | null
    totalPrice?: number | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    EventItemOption?: EventItemOptionUncheckedCreateNestedManyWithoutEventItemInput
  }

  export type EventItemCreateOrConnectWithoutProductInput = {
    where: EventItemWhereUniqueInput
    create: XOR<EventItemCreateWithoutProductInput, EventItemUncheckedCreateWithoutProductInput>
  }

  export type EventItemCreateManyProductInputEnvelope = {
    data: EventItemCreateManyProductInput | EventItemCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type OrderItemCreateWithoutProductInput = {
    id: string
    quantity?: number
    unitPrice: number
    totalPrice: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Order: OrderCreateNestedOneWithoutOrderItemInput
    OrderItemOption?: OrderItemOptionCreateNestedManyWithoutOrderItemInput
  }

  export type OrderItemUncheckedCreateWithoutProductInput = {
    id: string
    orderId: string
    quantity?: number
    unitPrice: number
    totalPrice: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    OrderItemOption?: OrderItemOptionUncheckedCreateNestedManyWithoutOrderItemInput
  }

  export type OrderItemCreateOrConnectWithoutProductInput = {
    where: OrderItemWhereUniqueInput
    create: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput>
  }

  export type OrderItemCreateManyProductInputEnvelope = {
    data: OrderItemCreateManyProductInput | OrderItemCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ProductCategoryCreateWithoutProductInput = {
    id: string
    name: string
    description?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ProductCategoryUncheckedCreateWithoutProductInput = {
    id: string
    name: string
    description?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ProductCategoryCreateOrConnectWithoutProductInput = {
    where: ProductCategoryWhereUniqueInput
    create: XOR<ProductCategoryCreateWithoutProductInput, ProductCategoryUncheckedCreateWithoutProductInput>
  }

  export type ProductOptionCreateWithoutProductInput = {
    id: string
    name: string
    type: string
    required?: boolean
    sortOrder?: number
    createdAt?: Date | string
    updatedAt: Date | string
    EventItemOption?: EventItemOptionCreateNestedManyWithoutProductOptionInput
    OrderItemOption?: OrderItemOptionCreateNestedManyWithoutProductOptionInput
    ProductOptionValue?: ProductOptionValueCreateNestedManyWithoutProductOptionInput
  }

  export type ProductOptionUncheckedCreateWithoutProductInput = {
    id: string
    name: string
    type: string
    required?: boolean
    sortOrder?: number
    createdAt?: Date | string
    updatedAt: Date | string
    EventItemOption?: EventItemOptionUncheckedCreateNestedManyWithoutProductOptionInput
    OrderItemOption?: OrderItemOptionUncheckedCreateNestedManyWithoutProductOptionInput
    ProductOptionValue?: ProductOptionValueUncheckedCreateNestedManyWithoutProductOptionInput
  }

  export type ProductOptionCreateOrConnectWithoutProductInput = {
    where: ProductOptionWhereUniqueInput
    create: XOR<ProductOptionCreateWithoutProductInput, ProductOptionUncheckedCreateWithoutProductInput>
  }

  export type ProductOptionCreateManyProductInputEnvelope = {
    data: ProductOptionCreateManyProductInput | ProductOptionCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type task_templatesCreateWithoutProductInput = {
    id: string
    name: string
    description?: string | null
    estimatedDuration: number
    leadTimeHours?: number
    sequenceOrder?: number
    requiredRole?: string | null
    triggerCondition: $Enums.TaskTriggerCondition
    isMandatory?: boolean
    requiresCompletionBeforeNext?: boolean
    autoAssignToRole?: string | null
    notes?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    category?: string | null
    tasks?: tasksCreateNestedManyWithoutTask_templatesInput
  }

  export type task_templatesUncheckedCreateWithoutProductInput = {
    id: string
    name: string
    description?: string | null
    estimatedDuration: number
    leadTimeHours?: number
    sequenceOrder?: number
    requiredRole?: string | null
    triggerCondition: $Enums.TaskTriggerCondition
    isMandatory?: boolean
    requiresCompletionBeforeNext?: boolean
    autoAssignToRole?: string | null
    notes?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    category?: string | null
    tasks?: tasksUncheckedCreateNestedManyWithoutTask_templatesInput
  }

  export type task_templatesCreateOrConnectWithoutProductInput = {
    where: task_templatesWhereUniqueInput
    create: XOR<task_templatesCreateWithoutProductInput, task_templatesUncheckedCreateWithoutProductInput>
  }

  export type task_templatesCreateManyProductInputEnvelope = {
    data: task_templatesCreateManyProductInput | task_templatesCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type tasksCreateWithoutProductInput = {
    id: string
    name: string
    description?: string | null
    category?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    dueDate?: Date | string | null
    startTime?: Date | string | null
    endTime?: Date | string | null
    estimatedDuration?: number | null
    actualDuration?: number | null
    actualStartTime?: Date | string | null
    actualEndTime?: Date | string | null
    completionNotes?: string | null
    requiresCustomerApproval?: boolean
    customerApprovedAt?: Date | string | null
    blockedReason?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesCreateNestedManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesCreateNestedManyWithoutTasks_task_dependencies_taskIdTotasksInput
    User?: UserCreateNestedOneWithoutTasksInput
    Event?: EventCreateNestedOneWithoutTasksInput
    Order?: OrderCreateNestedOneWithoutTasksInput
    task_templates?: task_templatesCreateNestedOneWithoutTasksInput
  }

  export type tasksUncheckedCreateWithoutProductInput = {
    id: string
    templateId?: string | null
    eventId?: string | null
    orderId?: string | null
    assignedUserId?: string | null
    name: string
    description?: string | null
    category?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    dueDate?: Date | string | null
    startTime?: Date | string | null
    endTime?: Date | string | null
    estimatedDuration?: number | null
    actualDuration?: number | null
    actualStartTime?: Date | string | null
    actualEndTime?: Date | string | null
    completionNotes?: string | null
    requiresCustomerApproval?: boolean
    customerApprovedAt?: Date | string | null
    blockedReason?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesUncheckedCreateNestedManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesUncheckedCreateNestedManyWithoutTasks_task_dependencies_taskIdTotasksInput
  }

  export type tasksCreateOrConnectWithoutProductInput = {
    where: tasksWhereUniqueInput
    create: XOR<tasksCreateWithoutProductInput, tasksUncheckedCreateWithoutProductInput>
  }

  export type tasksCreateManyProductInputEnvelope = {
    data: tasksCreateManyProductInput | tasksCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type EventItemUpsertWithWhereUniqueWithoutProductInput = {
    where: EventItemWhereUniqueInput
    update: XOR<EventItemUpdateWithoutProductInput, EventItemUncheckedUpdateWithoutProductInput>
    create: XOR<EventItemCreateWithoutProductInput, EventItemUncheckedCreateWithoutProductInput>
  }

  export type EventItemUpdateWithWhereUniqueWithoutProductInput = {
    where: EventItemWhereUniqueInput
    data: XOR<EventItemUpdateWithoutProductInput, EventItemUncheckedUpdateWithoutProductInput>
  }

  export type EventItemUpdateManyWithWhereWithoutProductInput = {
    where: EventItemScalarWhereInput
    data: XOR<EventItemUpdateManyMutationInput, EventItemUncheckedUpdateManyWithoutProductInput>
  }

  export type OrderItemUpsertWithWhereUniqueWithoutProductInput = {
    where: OrderItemWhereUniqueInput
    update: XOR<OrderItemUpdateWithoutProductInput, OrderItemUncheckedUpdateWithoutProductInput>
    create: XOR<OrderItemCreateWithoutProductInput, OrderItemUncheckedCreateWithoutProductInput>
  }

  export type OrderItemUpdateWithWhereUniqueWithoutProductInput = {
    where: OrderItemWhereUniqueInput
    data: XOR<OrderItemUpdateWithoutProductInput, OrderItemUncheckedUpdateWithoutProductInput>
  }

  export type OrderItemUpdateManyWithWhereWithoutProductInput = {
    where: OrderItemScalarWhereInput
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductCategoryUpsertWithoutProductInput = {
    update: XOR<ProductCategoryUpdateWithoutProductInput, ProductCategoryUncheckedUpdateWithoutProductInput>
    create: XOR<ProductCategoryCreateWithoutProductInput, ProductCategoryUncheckedCreateWithoutProductInput>
    where?: ProductCategoryWhereInput
  }

  export type ProductCategoryUpdateToOneWithWhereWithoutProductInput = {
    where?: ProductCategoryWhereInput
    data: XOR<ProductCategoryUpdateWithoutProductInput, ProductCategoryUncheckedUpdateWithoutProductInput>
  }

  export type ProductCategoryUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductCategoryUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductOptionUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductOptionWhereUniqueInput
    update: XOR<ProductOptionUpdateWithoutProductInput, ProductOptionUncheckedUpdateWithoutProductInput>
    create: XOR<ProductOptionCreateWithoutProductInput, ProductOptionUncheckedCreateWithoutProductInput>
  }

  export type ProductOptionUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductOptionWhereUniqueInput
    data: XOR<ProductOptionUpdateWithoutProductInput, ProductOptionUncheckedUpdateWithoutProductInput>
  }

  export type ProductOptionUpdateManyWithWhereWithoutProductInput = {
    where: ProductOptionScalarWhereInput
    data: XOR<ProductOptionUpdateManyMutationInput, ProductOptionUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductOptionScalarWhereInput = {
    AND?: ProductOptionScalarWhereInput | ProductOptionScalarWhereInput[]
    OR?: ProductOptionScalarWhereInput[]
    NOT?: ProductOptionScalarWhereInput | ProductOptionScalarWhereInput[]
    id?: StringFilter<"ProductOption"> | string
    productId?: StringFilter<"ProductOption"> | string
    name?: StringFilter<"ProductOption"> | string
    type?: StringFilter<"ProductOption"> | string
    required?: BoolFilter<"ProductOption"> | boolean
    sortOrder?: IntFilter<"ProductOption"> | number
    createdAt?: DateTimeFilter<"ProductOption"> | Date | string
    updatedAt?: DateTimeFilter<"ProductOption"> | Date | string
  }

  export type task_templatesUpsertWithWhereUniqueWithoutProductInput = {
    where: task_templatesWhereUniqueInput
    update: XOR<task_templatesUpdateWithoutProductInput, task_templatesUncheckedUpdateWithoutProductInput>
    create: XOR<task_templatesCreateWithoutProductInput, task_templatesUncheckedCreateWithoutProductInput>
  }

  export type task_templatesUpdateWithWhereUniqueWithoutProductInput = {
    where: task_templatesWhereUniqueInput
    data: XOR<task_templatesUpdateWithoutProductInput, task_templatesUncheckedUpdateWithoutProductInput>
  }

  export type task_templatesUpdateManyWithWhereWithoutProductInput = {
    where: task_templatesScalarWhereInput
    data: XOR<task_templatesUpdateManyMutationInput, task_templatesUncheckedUpdateManyWithoutProductInput>
  }

  export type task_templatesScalarWhereInput = {
    AND?: task_templatesScalarWhereInput | task_templatesScalarWhereInput[]
    OR?: task_templatesScalarWhereInput[]
    NOT?: task_templatesScalarWhereInput | task_templatesScalarWhereInput[]
    id?: StringFilter<"task_templates"> | string
    productId?: StringFilter<"task_templates"> | string
    name?: StringFilter<"task_templates"> | string
    description?: StringNullableFilter<"task_templates"> | string | null
    estimatedDuration?: IntFilter<"task_templates"> | number
    leadTimeHours?: IntFilter<"task_templates"> | number
    sequenceOrder?: IntFilter<"task_templates"> | number
    requiredRole?: StringNullableFilter<"task_templates"> | string | null
    triggerCondition?: EnumTaskTriggerConditionFilter<"task_templates"> | $Enums.TaskTriggerCondition
    isMandatory?: BoolFilter<"task_templates"> | boolean
    requiresCompletionBeforeNext?: BoolFilter<"task_templates"> | boolean
    autoAssignToRole?: StringNullableFilter<"task_templates"> | string | null
    notes?: StringNullableFilter<"task_templates"> | string | null
    isActive?: BoolFilter<"task_templates"> | boolean
    createdAt?: DateTimeFilter<"task_templates"> | Date | string
    updatedAt?: DateTimeFilter<"task_templates"> | Date | string
    category?: StringNullableFilter<"task_templates"> | string | null
  }

  export type tasksUpsertWithWhereUniqueWithoutProductInput = {
    where: tasksWhereUniqueInput
    update: XOR<tasksUpdateWithoutProductInput, tasksUncheckedUpdateWithoutProductInput>
    create: XOR<tasksCreateWithoutProductInput, tasksUncheckedCreateWithoutProductInput>
  }

  export type tasksUpdateWithWhereUniqueWithoutProductInput = {
    where: tasksWhereUniqueInput
    data: XOR<tasksUpdateWithoutProductInput, tasksUncheckedUpdateWithoutProductInput>
  }

  export type tasksUpdateManyWithWhereWithoutProductInput = {
    where: tasksScalarWhereInput
    data: XOR<tasksUpdateManyMutationInput, tasksUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductCreateWithoutProductCategoryInput = {
    id: string
    name: string
    description?: string | null
    price: number
    imageUrl?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    canBuy?: boolean
    canHire?: boolean
    hasRangePrice?: boolean
    hasUnitPrice?: boolean
    maxPrice?: number | null
    minPrice?: number | null
    minQuantity?: number | null
    unitPrice?: number | null
    unitType?: string | null
    EventItem?: EventItemCreateNestedManyWithoutProductInput
    OrderItem?: OrderItemCreateNestedManyWithoutProductInput
    ProductOption?: ProductOptionCreateNestedManyWithoutProductInput
    task_templates?: task_templatesCreateNestedManyWithoutProductInput
    tasks?: tasksCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutProductCategoryInput = {
    id: string
    name: string
    description?: string | null
    price: number
    imageUrl?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    canBuy?: boolean
    canHire?: boolean
    hasRangePrice?: boolean
    hasUnitPrice?: boolean
    maxPrice?: number | null
    minPrice?: number | null
    minQuantity?: number | null
    unitPrice?: number | null
    unitType?: string | null
    EventItem?: EventItemUncheckedCreateNestedManyWithoutProductInput
    OrderItem?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    ProductOption?: ProductOptionUncheckedCreateNestedManyWithoutProductInput
    task_templates?: task_templatesUncheckedCreateNestedManyWithoutProductInput
    tasks?: tasksUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutProductCategoryInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutProductCategoryInput, ProductUncheckedCreateWithoutProductCategoryInput>
  }

  export type ProductCreateManyProductCategoryInputEnvelope = {
    data: ProductCreateManyProductCategoryInput | ProductCreateManyProductCategoryInput[]
    skipDuplicates?: boolean
  }

  export type ProductUpsertWithWhereUniqueWithoutProductCategoryInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutProductCategoryInput, ProductUncheckedUpdateWithoutProductCategoryInput>
    create: XOR<ProductCreateWithoutProductCategoryInput, ProductUncheckedCreateWithoutProductCategoryInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutProductCategoryInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutProductCategoryInput, ProductUncheckedUpdateWithoutProductCategoryInput>
  }

  export type ProductUpdateManyWithWhereWithoutProductCategoryInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutProductCategoryInput>
  }

  export type ProductScalarWhereInput = {
    AND?: ProductScalarWhereInput | ProductScalarWhereInput[]
    OR?: ProductScalarWhereInput[]
    NOT?: ProductScalarWhereInput | ProductScalarWhereInput[]
    id?: StringFilter<"Product"> | string
    name?: StringFilter<"Product"> | string
    description?: StringNullableFilter<"Product"> | string | null
    price?: FloatFilter<"Product"> | number
    imageUrl?: StringNullableFilter<"Product"> | string | null
    active?: BoolFilter<"Product"> | boolean
    categoryId?: StringNullableFilter<"Product"> | string | null
    createdAt?: DateTimeFilter<"Product"> | Date | string
    updatedAt?: DateTimeFilter<"Product"> | Date | string
    canBuy?: BoolFilter<"Product"> | boolean
    canHire?: BoolFilter<"Product"> | boolean
    hasRangePrice?: BoolFilter<"Product"> | boolean
    hasUnitPrice?: BoolFilter<"Product"> | boolean
    maxPrice?: FloatNullableFilter<"Product"> | number | null
    minPrice?: FloatNullableFilter<"Product"> | number | null
    minQuantity?: IntNullableFilter<"Product"> | number | null
    unitPrice?: FloatNullableFilter<"Product"> | number | null
    unitType?: StringNullableFilter<"Product"> | string | null
  }

  export type EventCreateWithoutEventItemInput = {
    id: string
    title: string
    description?: string | null
    location: string
    startDate: Date | string
    endDate?: Date | string | null
    status?: string
    staffNotes?: string | null
    assignedStaffId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    customerNotes?: string | null
    depositAmount?: number | null
    depositPaid?: boolean
    endTime?: string | null
    finalPaymentPaid?: boolean
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    stage?: string
    startTime: string
    totalAmount?: number | null
    Customer?: CustomerCreateNestedOneWithoutEventInput
    EventStatusHistory?: EventStatusHistoryCreateNestedManyWithoutEventInput
    tasks?: tasksCreateNestedManyWithoutEventInput
  }

  export type EventUncheckedCreateWithoutEventItemInput = {
    id: string
    title: string
    description?: string | null
    location: string
    startDate: Date | string
    endDate?: Date | string | null
    customerId?: string | null
    status?: string
    staffNotes?: string | null
    assignedStaffId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    customerNotes?: string | null
    depositAmount?: number | null
    depositPaid?: boolean
    endTime?: string | null
    finalPaymentPaid?: boolean
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    stage?: string
    startTime: string
    totalAmount?: number | null
    EventStatusHistory?: EventStatusHistoryUncheckedCreateNestedManyWithoutEventInput
    tasks?: tasksUncheckedCreateNestedManyWithoutEventInput
  }

  export type EventCreateOrConnectWithoutEventItemInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutEventItemInput, EventUncheckedCreateWithoutEventItemInput>
  }

  export type ProductCreateWithoutEventItemInput = {
    id: string
    name: string
    description?: string | null
    price: number
    imageUrl?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    canBuy?: boolean
    canHire?: boolean
    hasRangePrice?: boolean
    hasUnitPrice?: boolean
    maxPrice?: number | null
    minPrice?: number | null
    minQuantity?: number | null
    unitPrice?: number | null
    unitType?: string | null
    OrderItem?: OrderItemCreateNestedManyWithoutProductInput
    ProductCategory?: ProductCategoryCreateNestedOneWithoutProductInput
    ProductOption?: ProductOptionCreateNestedManyWithoutProductInput
    task_templates?: task_templatesCreateNestedManyWithoutProductInput
    tasks?: tasksCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutEventItemInput = {
    id: string
    name: string
    description?: string | null
    price: number
    imageUrl?: string | null
    active?: boolean
    categoryId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    canBuy?: boolean
    canHire?: boolean
    hasRangePrice?: boolean
    hasUnitPrice?: boolean
    maxPrice?: number | null
    minPrice?: number | null
    minQuantity?: number | null
    unitPrice?: number | null
    unitType?: string | null
    OrderItem?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    ProductOption?: ProductOptionUncheckedCreateNestedManyWithoutProductInput
    task_templates?: task_templatesUncheckedCreateNestedManyWithoutProductInput
    tasks?: tasksUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutEventItemInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutEventItemInput, ProductUncheckedCreateWithoutEventItemInput>
  }

  export type EventItemOptionCreateWithoutEventItemInput = {
    id: string
    optionName: string
    value: string
    label?: string | null
    priceAdjustment?: number
    createdAt?: Date | string
    ProductOption: ProductOptionCreateNestedOneWithoutEventItemOptionInput
  }

  export type EventItemOptionUncheckedCreateWithoutEventItemInput = {
    id: string
    optionId: string
    optionName: string
    value: string
    label?: string | null
    priceAdjustment?: number
    createdAt?: Date | string
  }

  export type EventItemOptionCreateOrConnectWithoutEventItemInput = {
    where: EventItemOptionWhereUniqueInput
    create: XOR<EventItemOptionCreateWithoutEventItemInput, EventItemOptionUncheckedCreateWithoutEventItemInput>
  }

  export type EventItemOptionCreateManyEventItemInputEnvelope = {
    data: EventItemOptionCreateManyEventItemInput | EventItemOptionCreateManyEventItemInput[]
    skipDuplicates?: boolean
  }

  export type EventUpsertWithoutEventItemInput = {
    update: XOR<EventUpdateWithoutEventItemInput, EventUncheckedUpdateWithoutEventItemInput>
    create: XOR<EventCreateWithoutEventItemInput, EventUncheckedCreateWithoutEventItemInput>
    where?: EventWhereInput
  }

  export type EventUpdateToOneWithWhereWithoutEventItemInput = {
    where?: EventWhereInput
    data: XOR<EventUpdateWithoutEventItemInput, EventUncheckedUpdateWithoutEventItemInput>
  }

  export type EventUpdateWithoutEventItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    depositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    depositPaid?: BoolFieldUpdateOperationsInput | boolean
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    finalPaymentPaid?: BoolFieldUpdateOperationsInput | boolean
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    startTime?: StringFieldUpdateOperationsInput | string
    totalAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    Customer?: CustomerUpdateOneWithoutEventNestedInput
    EventStatusHistory?: EventStatusHistoryUpdateManyWithoutEventNestedInput
    tasks?: tasksUpdateManyWithoutEventNestedInput
  }

  export type EventUncheckedUpdateWithoutEventItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    depositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    depositPaid?: BoolFieldUpdateOperationsInput | boolean
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    finalPaymentPaid?: BoolFieldUpdateOperationsInput | boolean
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    startTime?: StringFieldUpdateOperationsInput | string
    totalAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    EventStatusHistory?: EventStatusHistoryUncheckedUpdateManyWithoutEventNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutEventNestedInput
  }

  export type ProductUpsertWithoutEventItemInput = {
    update: XOR<ProductUpdateWithoutEventItemInput, ProductUncheckedUpdateWithoutEventItemInput>
    create: XOR<ProductCreateWithoutEventItemInput, ProductUncheckedCreateWithoutEventItemInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutEventItemInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutEventItemInput, ProductUncheckedUpdateWithoutEventItemInput>
  }

  export type ProductUpdateWithoutEventItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    canBuy?: BoolFieldUpdateOperationsInput | boolean
    canHire?: BoolFieldUpdateOperationsInput | boolean
    hasRangePrice?: BoolFieldUpdateOperationsInput | boolean
    hasUnitPrice?: BoolFieldUpdateOperationsInput | boolean
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    unitType?: NullableStringFieldUpdateOperationsInput | string | null
    OrderItem?: OrderItemUpdateManyWithoutProductNestedInput
    ProductCategory?: ProductCategoryUpdateOneWithoutProductNestedInput
    ProductOption?: ProductOptionUpdateManyWithoutProductNestedInput
    task_templates?: task_templatesUpdateManyWithoutProductNestedInput
    tasks?: tasksUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutEventItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    canBuy?: BoolFieldUpdateOperationsInput | boolean
    canHire?: BoolFieldUpdateOperationsInput | boolean
    hasRangePrice?: BoolFieldUpdateOperationsInput | boolean
    hasUnitPrice?: BoolFieldUpdateOperationsInput | boolean
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    unitType?: NullableStringFieldUpdateOperationsInput | string | null
    OrderItem?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    ProductOption?: ProductOptionUncheckedUpdateManyWithoutProductNestedInput
    task_templates?: task_templatesUncheckedUpdateManyWithoutProductNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutProductNestedInput
  }

  export type EventItemOptionUpsertWithWhereUniqueWithoutEventItemInput = {
    where: EventItemOptionWhereUniqueInput
    update: XOR<EventItemOptionUpdateWithoutEventItemInput, EventItemOptionUncheckedUpdateWithoutEventItemInput>
    create: XOR<EventItemOptionCreateWithoutEventItemInput, EventItemOptionUncheckedCreateWithoutEventItemInput>
  }

  export type EventItemOptionUpdateWithWhereUniqueWithoutEventItemInput = {
    where: EventItemOptionWhereUniqueInput
    data: XOR<EventItemOptionUpdateWithoutEventItemInput, EventItemOptionUncheckedUpdateWithoutEventItemInput>
  }

  export type EventItemOptionUpdateManyWithWhereWithoutEventItemInput = {
    where: EventItemOptionScalarWhereInput
    data: XOR<EventItemOptionUpdateManyMutationInput, EventItemOptionUncheckedUpdateManyWithoutEventItemInput>
  }

  export type EventItemOptionScalarWhereInput = {
    AND?: EventItemOptionScalarWhereInput | EventItemOptionScalarWhereInput[]
    OR?: EventItemOptionScalarWhereInput[]
    NOT?: EventItemOptionScalarWhereInput | EventItemOptionScalarWhereInput[]
    id?: StringFilter<"EventItemOption"> | string
    eventItemId?: StringFilter<"EventItemOption"> | string
    optionId?: StringFilter<"EventItemOption"> | string
    optionName?: StringFilter<"EventItemOption"> | string
    value?: StringFilter<"EventItemOption"> | string
    label?: StringNullableFilter<"EventItemOption"> | string | null
    priceAdjustment?: FloatFilter<"EventItemOption"> | number
    createdAt?: DateTimeFilter<"EventItemOption"> | Date | string
  }

  export type EventItemCreateWithoutEventItemOptionInput = {
    id: string
    quantity?: number
    unitPrice?: number | null
    totalPrice?: number | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Event: EventCreateNestedOneWithoutEventItemInput
    Product: ProductCreateNestedOneWithoutEventItemInput
  }

  export type EventItemUncheckedCreateWithoutEventItemOptionInput = {
    id: string
    eventId: string
    productId: string
    quantity?: number
    unitPrice?: number | null
    totalPrice?: number | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type EventItemCreateOrConnectWithoutEventItemOptionInput = {
    where: EventItemWhereUniqueInput
    create: XOR<EventItemCreateWithoutEventItemOptionInput, EventItemUncheckedCreateWithoutEventItemOptionInput>
  }

  export type ProductOptionCreateWithoutEventItemOptionInput = {
    id: string
    name: string
    type: string
    required?: boolean
    sortOrder?: number
    createdAt?: Date | string
    updatedAt: Date | string
    OrderItemOption?: OrderItemOptionCreateNestedManyWithoutProductOptionInput
    Product: ProductCreateNestedOneWithoutProductOptionInput
    ProductOptionValue?: ProductOptionValueCreateNestedManyWithoutProductOptionInput
  }

  export type ProductOptionUncheckedCreateWithoutEventItemOptionInput = {
    id: string
    productId: string
    name: string
    type: string
    required?: boolean
    sortOrder?: number
    createdAt?: Date | string
    updatedAt: Date | string
    OrderItemOption?: OrderItemOptionUncheckedCreateNestedManyWithoutProductOptionInput
    ProductOptionValue?: ProductOptionValueUncheckedCreateNestedManyWithoutProductOptionInput
  }

  export type ProductOptionCreateOrConnectWithoutEventItemOptionInput = {
    where: ProductOptionWhereUniqueInput
    create: XOR<ProductOptionCreateWithoutEventItemOptionInput, ProductOptionUncheckedCreateWithoutEventItemOptionInput>
  }

  export type EventItemUpsertWithoutEventItemOptionInput = {
    update: XOR<EventItemUpdateWithoutEventItemOptionInput, EventItemUncheckedUpdateWithoutEventItemOptionInput>
    create: XOR<EventItemCreateWithoutEventItemOptionInput, EventItemUncheckedCreateWithoutEventItemOptionInput>
    where?: EventItemWhereInput
  }

  export type EventItemUpdateToOneWithWhereWithoutEventItemOptionInput = {
    where?: EventItemWhereInput
    data: XOR<EventItemUpdateWithoutEventItemOptionInput, EventItemUncheckedUpdateWithoutEventItemOptionInput>
  }

  export type EventItemUpdateWithoutEventItemOptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Event?: EventUpdateOneRequiredWithoutEventItemNestedInput
    Product?: ProductUpdateOneRequiredWithoutEventItemNestedInput
  }

  export type EventItemUncheckedUpdateWithoutEventItemOptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductOptionUpsertWithoutEventItemOptionInput = {
    update: XOR<ProductOptionUpdateWithoutEventItemOptionInput, ProductOptionUncheckedUpdateWithoutEventItemOptionInput>
    create: XOR<ProductOptionCreateWithoutEventItemOptionInput, ProductOptionUncheckedCreateWithoutEventItemOptionInput>
    where?: ProductOptionWhereInput
  }

  export type ProductOptionUpdateToOneWithWhereWithoutEventItemOptionInput = {
    where?: ProductOptionWhereInput
    data: XOR<ProductOptionUpdateWithoutEventItemOptionInput, ProductOptionUncheckedUpdateWithoutEventItemOptionInput>
  }

  export type ProductOptionUpdateWithoutEventItemOptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    required?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    OrderItemOption?: OrderItemOptionUpdateManyWithoutProductOptionNestedInput
    Product?: ProductUpdateOneRequiredWithoutProductOptionNestedInput
    ProductOptionValue?: ProductOptionValueUpdateManyWithoutProductOptionNestedInput
  }

  export type ProductOptionUncheckedUpdateWithoutEventItemOptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    required?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    OrderItemOption?: OrderItemOptionUncheckedUpdateManyWithoutProductOptionNestedInput
    ProductOptionValue?: ProductOptionValueUncheckedUpdateManyWithoutProductOptionNestedInput
  }

  export type EventCreateWithoutEventStatusHistoryInput = {
    id: string
    title: string
    description?: string | null
    location: string
    startDate: Date | string
    endDate?: Date | string | null
    status?: string
    staffNotes?: string | null
    assignedStaffId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    customerNotes?: string | null
    depositAmount?: number | null
    depositPaid?: boolean
    endTime?: string | null
    finalPaymentPaid?: boolean
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    stage?: string
    startTime: string
    totalAmount?: number | null
    Customer?: CustomerCreateNestedOneWithoutEventInput
    EventItem?: EventItemCreateNestedManyWithoutEventInput
    tasks?: tasksCreateNestedManyWithoutEventInput
  }

  export type EventUncheckedCreateWithoutEventStatusHistoryInput = {
    id: string
    title: string
    description?: string | null
    location: string
    startDate: Date | string
    endDate?: Date | string | null
    customerId?: string | null
    status?: string
    staffNotes?: string | null
    assignedStaffId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    customerNotes?: string | null
    depositAmount?: number | null
    depositPaid?: boolean
    endTime?: string | null
    finalPaymentPaid?: boolean
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    stage?: string
    startTime: string
    totalAmount?: number | null
    EventItem?: EventItemUncheckedCreateNestedManyWithoutEventInput
    tasks?: tasksUncheckedCreateNestedManyWithoutEventInput
  }

  export type EventCreateOrConnectWithoutEventStatusHistoryInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutEventStatusHistoryInput, EventUncheckedCreateWithoutEventStatusHistoryInput>
  }

  export type EventUpsertWithoutEventStatusHistoryInput = {
    update: XOR<EventUpdateWithoutEventStatusHistoryInput, EventUncheckedUpdateWithoutEventStatusHistoryInput>
    create: XOR<EventCreateWithoutEventStatusHistoryInput, EventUncheckedCreateWithoutEventStatusHistoryInput>
    where?: EventWhereInput
  }

  export type EventUpdateToOneWithWhereWithoutEventStatusHistoryInput = {
    where?: EventWhereInput
    data: XOR<EventUpdateWithoutEventStatusHistoryInput, EventUncheckedUpdateWithoutEventStatusHistoryInput>
  }

  export type EventUpdateWithoutEventStatusHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    depositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    depositPaid?: BoolFieldUpdateOperationsInput | boolean
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    finalPaymentPaid?: BoolFieldUpdateOperationsInput | boolean
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    startTime?: StringFieldUpdateOperationsInput | string
    totalAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    Customer?: CustomerUpdateOneWithoutEventNestedInput
    EventItem?: EventItemUpdateManyWithoutEventNestedInput
    tasks?: tasksUpdateManyWithoutEventNestedInput
  }

  export type EventUncheckedUpdateWithoutEventStatusHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    depositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    depositPaid?: BoolFieldUpdateOperationsInput | boolean
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    finalPaymentPaid?: BoolFieldUpdateOperationsInput | boolean
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    startTime?: StringFieldUpdateOperationsInput | string
    totalAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    EventItem?: EventItemUncheckedUpdateManyWithoutEventNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutEventNestedInput
  }

  export type OrderCreateWithoutOrderItemInput = {
    id: string
    totalAmount: number
    status?: string
    createdAt?: Date | string
    updatedAt: Date | string
    assignedStaffId?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: string | null
    deliveredAt?: Date | string | null
    discountAmount?: number | null
    finalAmount: number
    orderNumber: string
    paymentStatus?: string
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    shippedAt?: Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: number | null
    staffNotes?: string | null
    stage?: string
    taxAmount?: number | null
    Customer: CustomerCreateNestedOneWithoutOrderInput
    OrderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutOrderInput
    tasks?: tasksCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutOrderItemInput = {
    id: string
    customerId: string
    totalAmount: number
    status?: string
    createdAt?: Date | string
    updatedAt: Date | string
    assignedStaffId?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: string | null
    deliveredAt?: Date | string | null
    discountAmount?: number | null
    finalAmount: number
    orderNumber: string
    paymentStatus?: string
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    shippedAt?: Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: number | null
    staffNotes?: string | null
    stage?: string
    taxAmount?: number | null
    OrderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutOrderInput
    tasks?: tasksUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutOrderItemInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutOrderItemInput, OrderUncheckedCreateWithoutOrderItemInput>
  }

  export type ProductCreateWithoutOrderItemInput = {
    id: string
    name: string
    description?: string | null
    price: number
    imageUrl?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    canBuy?: boolean
    canHire?: boolean
    hasRangePrice?: boolean
    hasUnitPrice?: boolean
    maxPrice?: number | null
    minPrice?: number | null
    minQuantity?: number | null
    unitPrice?: number | null
    unitType?: string | null
    EventItem?: EventItemCreateNestedManyWithoutProductInput
    ProductCategory?: ProductCategoryCreateNestedOneWithoutProductInput
    ProductOption?: ProductOptionCreateNestedManyWithoutProductInput
    task_templates?: task_templatesCreateNestedManyWithoutProductInput
    tasks?: tasksCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutOrderItemInput = {
    id: string
    name: string
    description?: string | null
    price: number
    imageUrl?: string | null
    active?: boolean
    categoryId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    canBuy?: boolean
    canHire?: boolean
    hasRangePrice?: boolean
    hasUnitPrice?: boolean
    maxPrice?: number | null
    minPrice?: number | null
    minQuantity?: number | null
    unitPrice?: number | null
    unitType?: string | null
    EventItem?: EventItemUncheckedCreateNestedManyWithoutProductInput
    ProductOption?: ProductOptionUncheckedCreateNestedManyWithoutProductInput
    task_templates?: task_templatesUncheckedCreateNestedManyWithoutProductInput
    tasks?: tasksUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutOrderItemInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutOrderItemInput, ProductUncheckedCreateWithoutOrderItemInput>
  }

  export type OrderItemOptionCreateWithoutOrderItemInput = {
    id: string
    optionName: string
    value: string
    label?: string | null
    priceAdjustment?: number
    createdAt?: Date | string
    ProductOption: ProductOptionCreateNestedOneWithoutOrderItemOptionInput
  }

  export type OrderItemOptionUncheckedCreateWithoutOrderItemInput = {
    id: string
    optionId: string
    optionName: string
    value: string
    label?: string | null
    priceAdjustment?: number
    createdAt?: Date | string
  }

  export type OrderItemOptionCreateOrConnectWithoutOrderItemInput = {
    where: OrderItemOptionWhereUniqueInput
    create: XOR<OrderItemOptionCreateWithoutOrderItemInput, OrderItemOptionUncheckedCreateWithoutOrderItemInput>
  }

  export type OrderItemOptionCreateManyOrderItemInputEnvelope = {
    data: OrderItemOptionCreateManyOrderItemInput | OrderItemOptionCreateManyOrderItemInput[]
    skipDuplicates?: boolean
  }

  export type OrderUpsertWithoutOrderItemInput = {
    update: XOR<OrderUpdateWithoutOrderItemInput, OrderUncheckedUpdateWithoutOrderItemInput>
    create: XOR<OrderCreateWithoutOrderItemInput, OrderUncheckedCreateWithoutOrderItemInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutOrderItemInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutOrderItemInput, OrderUncheckedUpdateWithoutOrderItemInput>
  }

  export type OrderUpdateWithoutOrderItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalAmount?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discountAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    finalAmount?: FloatFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    taxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    Customer?: CustomerUpdateOneRequiredWithoutOrderNestedInput
    OrderStatusHistory?: OrderStatusHistoryUpdateManyWithoutOrderNestedInput
    tasks?: tasksUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutOrderItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    totalAmount?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discountAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    finalAmount?: FloatFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    taxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    OrderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutOrderNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type ProductUpsertWithoutOrderItemInput = {
    update: XOR<ProductUpdateWithoutOrderItemInput, ProductUncheckedUpdateWithoutOrderItemInput>
    create: XOR<ProductCreateWithoutOrderItemInput, ProductUncheckedCreateWithoutOrderItemInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutOrderItemInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutOrderItemInput, ProductUncheckedUpdateWithoutOrderItemInput>
  }

  export type ProductUpdateWithoutOrderItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    canBuy?: BoolFieldUpdateOperationsInput | boolean
    canHire?: BoolFieldUpdateOperationsInput | boolean
    hasRangePrice?: BoolFieldUpdateOperationsInput | boolean
    hasUnitPrice?: BoolFieldUpdateOperationsInput | boolean
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    unitType?: NullableStringFieldUpdateOperationsInput | string | null
    EventItem?: EventItemUpdateManyWithoutProductNestedInput
    ProductCategory?: ProductCategoryUpdateOneWithoutProductNestedInput
    ProductOption?: ProductOptionUpdateManyWithoutProductNestedInput
    task_templates?: task_templatesUpdateManyWithoutProductNestedInput
    tasks?: tasksUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutOrderItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    canBuy?: BoolFieldUpdateOperationsInput | boolean
    canHire?: BoolFieldUpdateOperationsInput | boolean
    hasRangePrice?: BoolFieldUpdateOperationsInput | boolean
    hasUnitPrice?: BoolFieldUpdateOperationsInput | boolean
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    unitType?: NullableStringFieldUpdateOperationsInput | string | null
    EventItem?: EventItemUncheckedUpdateManyWithoutProductNestedInput
    ProductOption?: ProductOptionUncheckedUpdateManyWithoutProductNestedInput
    task_templates?: task_templatesUncheckedUpdateManyWithoutProductNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutProductNestedInput
  }

  export type OrderItemOptionUpsertWithWhereUniqueWithoutOrderItemInput = {
    where: OrderItemOptionWhereUniqueInput
    update: XOR<OrderItemOptionUpdateWithoutOrderItemInput, OrderItemOptionUncheckedUpdateWithoutOrderItemInput>
    create: XOR<OrderItemOptionCreateWithoutOrderItemInput, OrderItemOptionUncheckedCreateWithoutOrderItemInput>
  }

  export type OrderItemOptionUpdateWithWhereUniqueWithoutOrderItemInput = {
    where: OrderItemOptionWhereUniqueInput
    data: XOR<OrderItemOptionUpdateWithoutOrderItemInput, OrderItemOptionUncheckedUpdateWithoutOrderItemInput>
  }

  export type OrderItemOptionUpdateManyWithWhereWithoutOrderItemInput = {
    where: OrderItemOptionScalarWhereInput
    data: XOR<OrderItemOptionUpdateManyMutationInput, OrderItemOptionUncheckedUpdateManyWithoutOrderItemInput>
  }

  export type OrderItemOptionScalarWhereInput = {
    AND?: OrderItemOptionScalarWhereInput | OrderItemOptionScalarWhereInput[]
    OR?: OrderItemOptionScalarWhereInput[]
    NOT?: OrderItemOptionScalarWhereInput | OrderItemOptionScalarWhereInput[]
    id?: StringFilter<"OrderItemOption"> | string
    orderItemId?: StringFilter<"OrderItemOption"> | string
    optionId?: StringFilter<"OrderItemOption"> | string
    optionName?: StringFilter<"OrderItemOption"> | string
    value?: StringFilter<"OrderItemOption"> | string
    label?: StringNullableFilter<"OrderItemOption"> | string | null
    priceAdjustment?: FloatFilter<"OrderItemOption"> | number
    createdAt?: DateTimeFilter<"OrderItemOption"> | Date | string
  }

  export type ProductOptionCreateWithoutOrderItemOptionInput = {
    id: string
    name: string
    type: string
    required?: boolean
    sortOrder?: number
    createdAt?: Date | string
    updatedAt: Date | string
    EventItemOption?: EventItemOptionCreateNestedManyWithoutProductOptionInput
    Product: ProductCreateNestedOneWithoutProductOptionInput
    ProductOptionValue?: ProductOptionValueCreateNestedManyWithoutProductOptionInput
  }

  export type ProductOptionUncheckedCreateWithoutOrderItemOptionInput = {
    id: string
    productId: string
    name: string
    type: string
    required?: boolean
    sortOrder?: number
    createdAt?: Date | string
    updatedAt: Date | string
    EventItemOption?: EventItemOptionUncheckedCreateNestedManyWithoutProductOptionInput
    ProductOptionValue?: ProductOptionValueUncheckedCreateNestedManyWithoutProductOptionInput
  }

  export type ProductOptionCreateOrConnectWithoutOrderItemOptionInput = {
    where: ProductOptionWhereUniqueInput
    create: XOR<ProductOptionCreateWithoutOrderItemOptionInput, ProductOptionUncheckedCreateWithoutOrderItemOptionInput>
  }

  export type OrderItemCreateWithoutOrderItemOptionInput = {
    id: string
    quantity?: number
    unitPrice: number
    totalPrice: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    Order: OrderCreateNestedOneWithoutOrderItemInput
    Product: ProductCreateNestedOneWithoutOrderItemInput
  }

  export type OrderItemUncheckedCreateWithoutOrderItemOptionInput = {
    id: string
    orderId: string
    productId: string
    quantity?: number
    unitPrice: number
    totalPrice: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type OrderItemCreateOrConnectWithoutOrderItemOptionInput = {
    where: OrderItemWhereUniqueInput
    create: XOR<OrderItemCreateWithoutOrderItemOptionInput, OrderItemUncheckedCreateWithoutOrderItemOptionInput>
  }

  export type ProductOptionUpsertWithoutOrderItemOptionInput = {
    update: XOR<ProductOptionUpdateWithoutOrderItemOptionInput, ProductOptionUncheckedUpdateWithoutOrderItemOptionInput>
    create: XOR<ProductOptionCreateWithoutOrderItemOptionInput, ProductOptionUncheckedCreateWithoutOrderItemOptionInput>
    where?: ProductOptionWhereInput
  }

  export type ProductOptionUpdateToOneWithWhereWithoutOrderItemOptionInput = {
    where?: ProductOptionWhereInput
    data: XOR<ProductOptionUpdateWithoutOrderItemOptionInput, ProductOptionUncheckedUpdateWithoutOrderItemOptionInput>
  }

  export type ProductOptionUpdateWithoutOrderItemOptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    required?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventItemOption?: EventItemOptionUpdateManyWithoutProductOptionNestedInput
    Product?: ProductUpdateOneRequiredWithoutProductOptionNestedInput
    ProductOptionValue?: ProductOptionValueUpdateManyWithoutProductOptionNestedInput
  }

  export type ProductOptionUncheckedUpdateWithoutOrderItemOptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    required?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventItemOption?: EventItemOptionUncheckedUpdateManyWithoutProductOptionNestedInput
    ProductOptionValue?: ProductOptionValueUncheckedUpdateManyWithoutProductOptionNestedInput
  }

  export type OrderItemUpsertWithoutOrderItemOptionInput = {
    update: XOR<OrderItemUpdateWithoutOrderItemOptionInput, OrderItemUncheckedUpdateWithoutOrderItemOptionInput>
    create: XOR<OrderItemCreateWithoutOrderItemOptionInput, OrderItemUncheckedCreateWithoutOrderItemOptionInput>
    where?: OrderItemWhereInput
  }

  export type OrderItemUpdateToOneWithWhereWithoutOrderItemOptionInput = {
    where?: OrderItemWhereInput
    data: XOR<OrderItemUpdateWithoutOrderItemOptionInput, OrderItemUncheckedUpdateWithoutOrderItemOptionInput>
  }

  export type OrderItemUpdateWithoutOrderItemOptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Order?: OrderUpdateOneRequiredWithoutOrderItemNestedInput
    Product?: ProductUpdateOneRequiredWithoutOrderItemNestedInput
  }

  export type OrderItemUncheckedUpdateWithoutOrderItemOptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderCreateWithoutOrderStatusHistoryInput = {
    id: string
    totalAmount: number
    status?: string
    createdAt?: Date | string
    updatedAt: Date | string
    assignedStaffId?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: string | null
    deliveredAt?: Date | string | null
    discountAmount?: number | null
    finalAmount: number
    orderNumber: string
    paymentStatus?: string
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    shippedAt?: Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: number | null
    staffNotes?: string | null
    stage?: string
    taxAmount?: number | null
    Customer: CustomerCreateNestedOneWithoutOrderInput
    OrderItem?: OrderItemCreateNestedManyWithoutOrderInput
    tasks?: tasksCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutOrderStatusHistoryInput = {
    id: string
    customerId: string
    totalAmount: number
    status?: string
    createdAt?: Date | string
    updatedAt: Date | string
    assignedStaffId?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: string | null
    deliveredAt?: Date | string | null
    discountAmount?: number | null
    finalAmount: number
    orderNumber: string
    paymentStatus?: string
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    shippedAt?: Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: number | null
    staffNotes?: string | null
    stage?: string
    taxAmount?: number | null
    OrderItem?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
    tasks?: tasksUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutOrderStatusHistoryInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutOrderStatusHistoryInput, OrderUncheckedCreateWithoutOrderStatusHistoryInput>
  }

  export type OrderUpsertWithoutOrderStatusHistoryInput = {
    update: XOR<OrderUpdateWithoutOrderStatusHistoryInput, OrderUncheckedUpdateWithoutOrderStatusHistoryInput>
    create: XOR<OrderCreateWithoutOrderStatusHistoryInput, OrderUncheckedCreateWithoutOrderStatusHistoryInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutOrderStatusHistoryInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutOrderStatusHistoryInput, OrderUncheckedUpdateWithoutOrderStatusHistoryInput>
  }

  export type OrderUpdateWithoutOrderStatusHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalAmount?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discountAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    finalAmount?: FloatFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    taxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    Customer?: CustomerUpdateOneRequiredWithoutOrderNestedInput
    OrderItem?: OrderItemUpdateManyWithoutOrderNestedInput
    tasks?: tasksUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutOrderStatusHistoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    totalAmount?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discountAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    finalAmount?: FloatFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    taxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    OrderItem?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type EventItemOptionCreateWithoutProductOptionInput = {
    id: string
    optionName: string
    value: string
    label?: string | null
    priceAdjustment?: number
    createdAt?: Date | string
    EventItem: EventItemCreateNestedOneWithoutEventItemOptionInput
  }

  export type EventItemOptionUncheckedCreateWithoutProductOptionInput = {
    id: string
    eventItemId: string
    optionName: string
    value: string
    label?: string | null
    priceAdjustment?: number
    createdAt?: Date | string
  }

  export type EventItemOptionCreateOrConnectWithoutProductOptionInput = {
    where: EventItemOptionWhereUniqueInput
    create: XOR<EventItemOptionCreateWithoutProductOptionInput, EventItemOptionUncheckedCreateWithoutProductOptionInput>
  }

  export type EventItemOptionCreateManyProductOptionInputEnvelope = {
    data: EventItemOptionCreateManyProductOptionInput | EventItemOptionCreateManyProductOptionInput[]
    skipDuplicates?: boolean
  }

  export type OrderItemOptionCreateWithoutProductOptionInput = {
    id: string
    optionName: string
    value: string
    label?: string | null
    priceAdjustment?: number
    createdAt?: Date | string
    OrderItem: OrderItemCreateNestedOneWithoutOrderItemOptionInput
  }

  export type OrderItemOptionUncheckedCreateWithoutProductOptionInput = {
    id: string
    orderItemId: string
    optionName: string
    value: string
    label?: string | null
    priceAdjustment?: number
    createdAt?: Date | string
  }

  export type OrderItemOptionCreateOrConnectWithoutProductOptionInput = {
    where: OrderItemOptionWhereUniqueInput
    create: XOR<OrderItemOptionCreateWithoutProductOptionInput, OrderItemOptionUncheckedCreateWithoutProductOptionInput>
  }

  export type OrderItemOptionCreateManyProductOptionInputEnvelope = {
    data: OrderItemOptionCreateManyProductOptionInput | OrderItemOptionCreateManyProductOptionInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutProductOptionInput = {
    id: string
    name: string
    description?: string | null
    price: number
    imageUrl?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    canBuy?: boolean
    canHire?: boolean
    hasRangePrice?: boolean
    hasUnitPrice?: boolean
    maxPrice?: number | null
    minPrice?: number | null
    minQuantity?: number | null
    unitPrice?: number | null
    unitType?: string | null
    EventItem?: EventItemCreateNestedManyWithoutProductInput
    OrderItem?: OrderItemCreateNestedManyWithoutProductInput
    ProductCategory?: ProductCategoryCreateNestedOneWithoutProductInput
    task_templates?: task_templatesCreateNestedManyWithoutProductInput
    tasks?: tasksCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutProductOptionInput = {
    id: string
    name: string
    description?: string | null
    price: number
    imageUrl?: string | null
    active?: boolean
    categoryId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    canBuy?: boolean
    canHire?: boolean
    hasRangePrice?: boolean
    hasUnitPrice?: boolean
    maxPrice?: number | null
    minPrice?: number | null
    minQuantity?: number | null
    unitPrice?: number | null
    unitType?: string | null
    EventItem?: EventItemUncheckedCreateNestedManyWithoutProductInput
    OrderItem?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    task_templates?: task_templatesUncheckedCreateNestedManyWithoutProductInput
    tasks?: tasksUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutProductOptionInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutProductOptionInput, ProductUncheckedCreateWithoutProductOptionInput>
  }

  export type ProductOptionValueCreateWithoutProductOptionInput = {
    id: string
    value: string
    label?: string | null
    priceAdjustment?: number | null
    sortOrder?: number
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ProductOptionValueUncheckedCreateWithoutProductOptionInput = {
    id: string
    value: string
    label?: string | null
    priceAdjustment?: number | null
    sortOrder?: number
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ProductOptionValueCreateOrConnectWithoutProductOptionInput = {
    where: ProductOptionValueWhereUniqueInput
    create: XOR<ProductOptionValueCreateWithoutProductOptionInput, ProductOptionValueUncheckedCreateWithoutProductOptionInput>
  }

  export type ProductOptionValueCreateManyProductOptionInputEnvelope = {
    data: ProductOptionValueCreateManyProductOptionInput | ProductOptionValueCreateManyProductOptionInput[]
    skipDuplicates?: boolean
  }

  export type EventItemOptionUpsertWithWhereUniqueWithoutProductOptionInput = {
    where: EventItemOptionWhereUniqueInput
    update: XOR<EventItemOptionUpdateWithoutProductOptionInput, EventItemOptionUncheckedUpdateWithoutProductOptionInput>
    create: XOR<EventItemOptionCreateWithoutProductOptionInput, EventItemOptionUncheckedCreateWithoutProductOptionInput>
  }

  export type EventItemOptionUpdateWithWhereUniqueWithoutProductOptionInput = {
    where: EventItemOptionWhereUniqueInput
    data: XOR<EventItemOptionUpdateWithoutProductOptionInput, EventItemOptionUncheckedUpdateWithoutProductOptionInput>
  }

  export type EventItemOptionUpdateManyWithWhereWithoutProductOptionInput = {
    where: EventItemOptionScalarWhereInput
    data: XOR<EventItemOptionUpdateManyMutationInput, EventItemOptionUncheckedUpdateManyWithoutProductOptionInput>
  }

  export type OrderItemOptionUpsertWithWhereUniqueWithoutProductOptionInput = {
    where: OrderItemOptionWhereUniqueInput
    update: XOR<OrderItemOptionUpdateWithoutProductOptionInput, OrderItemOptionUncheckedUpdateWithoutProductOptionInput>
    create: XOR<OrderItemOptionCreateWithoutProductOptionInput, OrderItemOptionUncheckedCreateWithoutProductOptionInput>
  }

  export type OrderItemOptionUpdateWithWhereUniqueWithoutProductOptionInput = {
    where: OrderItemOptionWhereUniqueInput
    data: XOR<OrderItemOptionUpdateWithoutProductOptionInput, OrderItemOptionUncheckedUpdateWithoutProductOptionInput>
  }

  export type OrderItemOptionUpdateManyWithWhereWithoutProductOptionInput = {
    where: OrderItemOptionScalarWhereInput
    data: XOR<OrderItemOptionUpdateManyMutationInput, OrderItemOptionUncheckedUpdateManyWithoutProductOptionInput>
  }

  export type ProductUpsertWithoutProductOptionInput = {
    update: XOR<ProductUpdateWithoutProductOptionInput, ProductUncheckedUpdateWithoutProductOptionInput>
    create: XOR<ProductCreateWithoutProductOptionInput, ProductUncheckedCreateWithoutProductOptionInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutProductOptionInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutProductOptionInput, ProductUncheckedUpdateWithoutProductOptionInput>
  }

  export type ProductUpdateWithoutProductOptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    canBuy?: BoolFieldUpdateOperationsInput | boolean
    canHire?: BoolFieldUpdateOperationsInput | boolean
    hasRangePrice?: BoolFieldUpdateOperationsInput | boolean
    hasUnitPrice?: BoolFieldUpdateOperationsInput | boolean
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    unitType?: NullableStringFieldUpdateOperationsInput | string | null
    EventItem?: EventItemUpdateManyWithoutProductNestedInput
    OrderItem?: OrderItemUpdateManyWithoutProductNestedInput
    ProductCategory?: ProductCategoryUpdateOneWithoutProductNestedInput
    task_templates?: task_templatesUpdateManyWithoutProductNestedInput
    tasks?: tasksUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutProductOptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    canBuy?: BoolFieldUpdateOperationsInput | boolean
    canHire?: BoolFieldUpdateOperationsInput | boolean
    hasRangePrice?: BoolFieldUpdateOperationsInput | boolean
    hasUnitPrice?: BoolFieldUpdateOperationsInput | boolean
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    unitType?: NullableStringFieldUpdateOperationsInput | string | null
    EventItem?: EventItemUncheckedUpdateManyWithoutProductNestedInput
    OrderItem?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    task_templates?: task_templatesUncheckedUpdateManyWithoutProductNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductOptionValueUpsertWithWhereUniqueWithoutProductOptionInput = {
    where: ProductOptionValueWhereUniqueInput
    update: XOR<ProductOptionValueUpdateWithoutProductOptionInput, ProductOptionValueUncheckedUpdateWithoutProductOptionInput>
    create: XOR<ProductOptionValueCreateWithoutProductOptionInput, ProductOptionValueUncheckedCreateWithoutProductOptionInput>
  }

  export type ProductOptionValueUpdateWithWhereUniqueWithoutProductOptionInput = {
    where: ProductOptionValueWhereUniqueInput
    data: XOR<ProductOptionValueUpdateWithoutProductOptionInput, ProductOptionValueUncheckedUpdateWithoutProductOptionInput>
  }

  export type ProductOptionValueUpdateManyWithWhereWithoutProductOptionInput = {
    where: ProductOptionValueScalarWhereInput
    data: XOR<ProductOptionValueUpdateManyMutationInput, ProductOptionValueUncheckedUpdateManyWithoutProductOptionInput>
  }

  export type ProductOptionValueScalarWhereInput = {
    AND?: ProductOptionValueScalarWhereInput | ProductOptionValueScalarWhereInput[]
    OR?: ProductOptionValueScalarWhereInput[]
    NOT?: ProductOptionValueScalarWhereInput | ProductOptionValueScalarWhereInput[]
    id?: StringFilter<"ProductOptionValue"> | string
    optionId?: StringFilter<"ProductOptionValue"> | string
    value?: StringFilter<"ProductOptionValue"> | string
    label?: StringNullableFilter<"ProductOptionValue"> | string | null
    priceAdjustment?: FloatNullableFilter<"ProductOptionValue"> | number | null
    sortOrder?: IntFilter<"ProductOptionValue"> | number
    createdAt?: DateTimeFilter<"ProductOptionValue"> | Date | string
    updatedAt?: DateTimeFilter<"ProductOptionValue"> | Date | string
  }

  export type ProductOptionCreateWithoutProductOptionValueInput = {
    id: string
    name: string
    type: string
    required?: boolean
    sortOrder?: number
    createdAt?: Date | string
    updatedAt: Date | string
    EventItemOption?: EventItemOptionCreateNestedManyWithoutProductOptionInput
    OrderItemOption?: OrderItemOptionCreateNestedManyWithoutProductOptionInput
    Product: ProductCreateNestedOneWithoutProductOptionInput
  }

  export type ProductOptionUncheckedCreateWithoutProductOptionValueInput = {
    id: string
    productId: string
    name: string
    type: string
    required?: boolean
    sortOrder?: number
    createdAt?: Date | string
    updatedAt: Date | string
    EventItemOption?: EventItemOptionUncheckedCreateNestedManyWithoutProductOptionInput
    OrderItemOption?: OrderItemOptionUncheckedCreateNestedManyWithoutProductOptionInput
  }

  export type ProductOptionCreateOrConnectWithoutProductOptionValueInput = {
    where: ProductOptionWhereUniqueInput
    create: XOR<ProductOptionCreateWithoutProductOptionValueInput, ProductOptionUncheckedCreateWithoutProductOptionValueInput>
  }

  export type ProductOptionUpsertWithoutProductOptionValueInput = {
    update: XOR<ProductOptionUpdateWithoutProductOptionValueInput, ProductOptionUncheckedUpdateWithoutProductOptionValueInput>
    create: XOR<ProductOptionCreateWithoutProductOptionValueInput, ProductOptionUncheckedCreateWithoutProductOptionValueInput>
    where?: ProductOptionWhereInput
  }

  export type ProductOptionUpdateToOneWithWhereWithoutProductOptionValueInput = {
    where?: ProductOptionWhereInput
    data: XOR<ProductOptionUpdateWithoutProductOptionValueInput, ProductOptionUncheckedUpdateWithoutProductOptionValueInput>
  }

  export type ProductOptionUpdateWithoutProductOptionValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    required?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventItemOption?: EventItemOptionUpdateManyWithoutProductOptionNestedInput
    OrderItemOption?: OrderItemOptionUpdateManyWithoutProductOptionNestedInput
    Product?: ProductUpdateOneRequiredWithoutProductOptionNestedInput
  }

  export type ProductOptionUncheckedUpdateWithoutProductOptionValueInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    required?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventItemOption?: EventItemOptionUncheckedUpdateManyWithoutProductOptionNestedInput
    OrderItemOption?: OrderItemOptionUncheckedUpdateManyWithoutProductOptionNestedInput
  }

  export type tasksCreateWithoutUserInput = {
    id: string
    name: string
    description?: string | null
    category?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    dueDate?: Date | string | null
    startTime?: Date | string | null
    endTime?: Date | string | null
    estimatedDuration?: number | null
    actualDuration?: number | null
    actualStartTime?: Date | string | null
    actualEndTime?: Date | string | null
    completionNotes?: string | null
    requiresCustomerApproval?: boolean
    customerApprovedAt?: Date | string | null
    blockedReason?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesCreateNestedManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesCreateNestedManyWithoutTasks_task_dependencies_taskIdTotasksInput
    Event?: EventCreateNestedOneWithoutTasksInput
    Order?: OrderCreateNestedOneWithoutTasksInput
    Product?: ProductCreateNestedOneWithoutTasksInput
    task_templates?: task_templatesCreateNestedOneWithoutTasksInput
  }

  export type tasksUncheckedCreateWithoutUserInput = {
    id: string
    templateId?: string | null
    eventId?: string | null
    orderId?: string | null
    productId?: string | null
    name: string
    description?: string | null
    category?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    dueDate?: Date | string | null
    startTime?: Date | string | null
    endTime?: Date | string | null
    estimatedDuration?: number | null
    actualDuration?: number | null
    actualStartTime?: Date | string | null
    actualEndTime?: Date | string | null
    completionNotes?: string | null
    requiresCustomerApproval?: boolean
    customerApprovedAt?: Date | string | null
    blockedReason?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesUncheckedCreateNestedManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesUncheckedCreateNestedManyWithoutTasks_task_dependencies_taskIdTotasksInput
  }

  export type tasksCreateOrConnectWithoutUserInput = {
    where: tasksWhereUniqueInput
    create: XOR<tasksCreateWithoutUserInput, tasksUncheckedCreateWithoutUserInput>
  }

  export type tasksCreateManyUserInputEnvelope = {
    data: tasksCreateManyUserInput | tasksCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type user_rolesCreateWithoutUserInput = {
    id: string
    role: string
    department?: string | null
    isPrimary?: boolean
    createdAt?: Date | string
  }

  export type user_rolesUncheckedCreateWithoutUserInput = {
    id: string
    role: string
    department?: string | null
    isPrimary?: boolean
    createdAt?: Date | string
  }

  export type user_rolesCreateOrConnectWithoutUserInput = {
    where: user_rolesWhereUniqueInput
    create: XOR<user_rolesCreateWithoutUserInput, user_rolesUncheckedCreateWithoutUserInput>
  }

  export type user_rolesCreateManyUserInputEnvelope = {
    data: user_rolesCreateManyUserInput | user_rolesCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type tasksUpsertWithWhereUniqueWithoutUserInput = {
    where: tasksWhereUniqueInput
    update: XOR<tasksUpdateWithoutUserInput, tasksUncheckedUpdateWithoutUserInput>
    create: XOR<tasksCreateWithoutUserInput, tasksUncheckedCreateWithoutUserInput>
  }

  export type tasksUpdateWithWhereUniqueWithoutUserInput = {
    where: tasksWhereUniqueInput
    data: XOR<tasksUpdateWithoutUserInput, tasksUncheckedUpdateWithoutUserInput>
  }

  export type tasksUpdateManyWithWhereWithoutUserInput = {
    where: tasksScalarWhereInput
    data: XOR<tasksUpdateManyMutationInput, tasksUncheckedUpdateManyWithoutUserInput>
  }

  export type user_rolesUpsertWithWhereUniqueWithoutUserInput = {
    where: user_rolesWhereUniqueInput
    update: XOR<user_rolesUpdateWithoutUserInput, user_rolesUncheckedUpdateWithoutUserInput>
    create: XOR<user_rolesCreateWithoutUserInput, user_rolesUncheckedCreateWithoutUserInput>
  }

  export type user_rolesUpdateWithWhereUniqueWithoutUserInput = {
    where: user_rolesWhereUniqueInput
    data: XOR<user_rolesUpdateWithoutUserInput, user_rolesUncheckedUpdateWithoutUserInput>
  }

  export type user_rolesUpdateManyWithWhereWithoutUserInput = {
    where: user_rolesScalarWhereInput
    data: XOR<user_rolesUpdateManyMutationInput, user_rolesUncheckedUpdateManyWithoutUserInput>
  }

  export type user_rolesScalarWhereInput = {
    AND?: user_rolesScalarWhereInput | user_rolesScalarWhereInput[]
    OR?: user_rolesScalarWhereInput[]
    NOT?: user_rolesScalarWhereInput | user_rolesScalarWhereInput[]
    id?: StringFilter<"user_roles"> | string
    userId?: StringFilter<"user_roles"> | string
    role?: StringFilter<"user_roles"> | string
    department?: StringNullableFilter<"user_roles"> | string | null
    isPrimary?: BoolFilter<"user_roles"> | boolean
    createdAt?: DateTimeFilter<"user_roles"> | Date | string
  }

  export type tasksCreateWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput = {
    id: string
    name: string
    description?: string | null
    category?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    dueDate?: Date | string | null
    startTime?: Date | string | null
    endTime?: Date | string | null
    estimatedDuration?: number | null
    actualDuration?: number | null
    actualStartTime?: Date | string | null
    actualEndTime?: Date | string | null
    completionNotes?: string | null
    requiresCustomerApproval?: boolean
    customerApprovedAt?: Date | string | null
    blockedReason?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesCreateNestedManyWithoutTasks_task_dependencies_taskIdTotasksInput
    User?: UserCreateNestedOneWithoutTasksInput
    Event?: EventCreateNestedOneWithoutTasksInput
    Order?: OrderCreateNestedOneWithoutTasksInput
    Product?: ProductCreateNestedOneWithoutTasksInput
    task_templates?: task_templatesCreateNestedOneWithoutTasksInput
  }

  export type tasksUncheckedCreateWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput = {
    id: string
    templateId?: string | null
    eventId?: string | null
    orderId?: string | null
    productId?: string | null
    assignedUserId?: string | null
    name: string
    description?: string | null
    category?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    dueDate?: Date | string | null
    startTime?: Date | string | null
    endTime?: Date | string | null
    estimatedDuration?: number | null
    actualDuration?: number | null
    actualStartTime?: Date | string | null
    actualEndTime?: Date | string | null
    completionNotes?: string | null
    requiresCustomerApproval?: boolean
    customerApprovedAt?: Date | string | null
    blockedReason?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesUncheckedCreateNestedManyWithoutTasks_task_dependencies_taskIdTotasksInput
  }

  export type tasksCreateOrConnectWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput = {
    where: tasksWhereUniqueInput
    create: XOR<tasksCreateWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput, tasksUncheckedCreateWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput>
  }

  export type tasksCreateWithoutTask_dependencies_task_dependencies_taskIdTotasksInput = {
    id: string
    name: string
    description?: string | null
    category?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    dueDate?: Date | string | null
    startTime?: Date | string | null
    endTime?: Date | string | null
    estimatedDuration?: number | null
    actualDuration?: number | null
    actualStartTime?: Date | string | null
    actualEndTime?: Date | string | null
    completionNotes?: string | null
    requiresCustomerApproval?: boolean
    customerApprovedAt?: Date | string | null
    blockedReason?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesCreateNestedManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput
    User?: UserCreateNestedOneWithoutTasksInput
    Event?: EventCreateNestedOneWithoutTasksInput
    Order?: OrderCreateNestedOneWithoutTasksInput
    Product?: ProductCreateNestedOneWithoutTasksInput
    task_templates?: task_templatesCreateNestedOneWithoutTasksInput
  }

  export type tasksUncheckedCreateWithoutTask_dependencies_task_dependencies_taskIdTotasksInput = {
    id: string
    templateId?: string | null
    eventId?: string | null
    orderId?: string | null
    productId?: string | null
    assignedUserId?: string | null
    name: string
    description?: string | null
    category?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    dueDate?: Date | string | null
    startTime?: Date | string | null
    endTime?: Date | string | null
    estimatedDuration?: number | null
    actualDuration?: number | null
    actualStartTime?: Date | string | null
    actualEndTime?: Date | string | null
    completionNotes?: string | null
    requiresCustomerApproval?: boolean
    customerApprovedAt?: Date | string | null
    blockedReason?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesUncheckedCreateNestedManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput
  }

  export type tasksCreateOrConnectWithoutTask_dependencies_task_dependencies_taskIdTotasksInput = {
    where: tasksWhereUniqueInput
    create: XOR<tasksCreateWithoutTask_dependencies_task_dependencies_taskIdTotasksInput, tasksUncheckedCreateWithoutTask_dependencies_task_dependencies_taskIdTotasksInput>
  }

  export type tasksUpsertWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput = {
    update: XOR<tasksUpdateWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput, tasksUncheckedUpdateWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput>
    create: XOR<tasksCreateWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput, tasksUncheckedCreateWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput>
    where?: tasksWhereInput
  }

  export type tasksUpdateToOneWithWhereWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput = {
    where?: tasksWhereInput
    data: XOR<tasksUpdateWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput, tasksUncheckedUpdateWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput>
  }

  export type tasksUpdateWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesUpdateManyWithoutTasks_task_dependencies_taskIdTotasksNestedInput
    User?: UserUpdateOneWithoutTasksNestedInput
    Event?: EventUpdateOneWithoutTasksNestedInput
    Order?: OrderUpdateOneWithoutTasksNestedInput
    Product?: ProductUpdateOneWithoutTasksNestedInput
    task_templates?: task_templatesUpdateOneWithoutTasksNestedInput
  }

  export type tasksUncheckedUpdateWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesUncheckedUpdateManyWithoutTasks_task_dependencies_taskIdTotasksNestedInput
  }

  export type tasksUpsertWithoutTask_dependencies_task_dependencies_taskIdTotasksInput = {
    update: XOR<tasksUpdateWithoutTask_dependencies_task_dependencies_taskIdTotasksInput, tasksUncheckedUpdateWithoutTask_dependencies_task_dependencies_taskIdTotasksInput>
    create: XOR<tasksCreateWithoutTask_dependencies_task_dependencies_taskIdTotasksInput, tasksUncheckedCreateWithoutTask_dependencies_task_dependencies_taskIdTotasksInput>
    where?: tasksWhereInput
  }

  export type tasksUpdateToOneWithWhereWithoutTask_dependencies_task_dependencies_taskIdTotasksInput = {
    where?: tasksWhereInput
    data: XOR<tasksUpdateWithoutTask_dependencies_task_dependencies_taskIdTotasksInput, tasksUncheckedUpdateWithoutTask_dependencies_task_dependencies_taskIdTotasksInput>
  }

  export type tasksUpdateWithoutTask_dependencies_task_dependencies_taskIdTotasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesUpdateManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksNestedInput
    User?: UserUpdateOneWithoutTasksNestedInput
    Event?: EventUpdateOneWithoutTasksNestedInput
    Order?: OrderUpdateOneWithoutTasksNestedInput
    Product?: ProductUpdateOneWithoutTasksNestedInput
    task_templates?: task_templatesUpdateOneWithoutTasksNestedInput
  }

  export type tasksUncheckedUpdateWithoutTask_dependencies_task_dependencies_taskIdTotasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesUncheckedUpdateManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksNestedInput
  }

  export type ProductCreateWithoutTask_templatesInput = {
    id: string
    name: string
    description?: string | null
    price: number
    imageUrl?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    canBuy?: boolean
    canHire?: boolean
    hasRangePrice?: boolean
    hasUnitPrice?: boolean
    maxPrice?: number | null
    minPrice?: number | null
    minQuantity?: number | null
    unitPrice?: number | null
    unitType?: string | null
    EventItem?: EventItemCreateNestedManyWithoutProductInput
    OrderItem?: OrderItemCreateNestedManyWithoutProductInput
    ProductCategory?: ProductCategoryCreateNestedOneWithoutProductInput
    ProductOption?: ProductOptionCreateNestedManyWithoutProductInput
    tasks?: tasksCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutTask_templatesInput = {
    id: string
    name: string
    description?: string | null
    price: number
    imageUrl?: string | null
    active?: boolean
    categoryId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    canBuy?: boolean
    canHire?: boolean
    hasRangePrice?: boolean
    hasUnitPrice?: boolean
    maxPrice?: number | null
    minPrice?: number | null
    minQuantity?: number | null
    unitPrice?: number | null
    unitType?: string | null
    EventItem?: EventItemUncheckedCreateNestedManyWithoutProductInput
    OrderItem?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    ProductOption?: ProductOptionUncheckedCreateNestedManyWithoutProductInput
    tasks?: tasksUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutTask_templatesInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutTask_templatesInput, ProductUncheckedCreateWithoutTask_templatesInput>
  }

  export type tasksCreateWithoutTask_templatesInput = {
    id: string
    name: string
    description?: string | null
    category?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    dueDate?: Date | string | null
    startTime?: Date | string | null
    endTime?: Date | string | null
    estimatedDuration?: number | null
    actualDuration?: number | null
    actualStartTime?: Date | string | null
    actualEndTime?: Date | string | null
    completionNotes?: string | null
    requiresCustomerApproval?: boolean
    customerApprovedAt?: Date | string | null
    blockedReason?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesCreateNestedManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesCreateNestedManyWithoutTasks_task_dependencies_taskIdTotasksInput
    User?: UserCreateNestedOneWithoutTasksInput
    Event?: EventCreateNestedOneWithoutTasksInput
    Order?: OrderCreateNestedOneWithoutTasksInput
    Product?: ProductCreateNestedOneWithoutTasksInput
  }

  export type tasksUncheckedCreateWithoutTask_templatesInput = {
    id: string
    eventId?: string | null
    orderId?: string | null
    productId?: string | null
    assignedUserId?: string | null
    name: string
    description?: string | null
    category?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    dueDate?: Date | string | null
    startTime?: Date | string | null
    endTime?: Date | string | null
    estimatedDuration?: number | null
    actualDuration?: number | null
    actualStartTime?: Date | string | null
    actualEndTime?: Date | string | null
    completionNotes?: string | null
    requiresCustomerApproval?: boolean
    customerApprovedAt?: Date | string | null
    blockedReason?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesUncheckedCreateNestedManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesUncheckedCreateNestedManyWithoutTasks_task_dependencies_taskIdTotasksInput
  }

  export type tasksCreateOrConnectWithoutTask_templatesInput = {
    where: tasksWhereUniqueInput
    create: XOR<tasksCreateWithoutTask_templatesInput, tasksUncheckedCreateWithoutTask_templatesInput>
  }

  export type tasksCreateManyTask_templatesInputEnvelope = {
    data: tasksCreateManyTask_templatesInput | tasksCreateManyTask_templatesInput[]
    skipDuplicates?: boolean
  }

  export type ProductUpsertWithoutTask_templatesInput = {
    update: XOR<ProductUpdateWithoutTask_templatesInput, ProductUncheckedUpdateWithoutTask_templatesInput>
    create: XOR<ProductCreateWithoutTask_templatesInput, ProductUncheckedCreateWithoutTask_templatesInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutTask_templatesInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutTask_templatesInput, ProductUncheckedUpdateWithoutTask_templatesInput>
  }

  export type ProductUpdateWithoutTask_templatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    canBuy?: BoolFieldUpdateOperationsInput | boolean
    canHire?: BoolFieldUpdateOperationsInput | boolean
    hasRangePrice?: BoolFieldUpdateOperationsInput | boolean
    hasUnitPrice?: BoolFieldUpdateOperationsInput | boolean
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    unitType?: NullableStringFieldUpdateOperationsInput | string | null
    EventItem?: EventItemUpdateManyWithoutProductNestedInput
    OrderItem?: OrderItemUpdateManyWithoutProductNestedInput
    ProductCategory?: ProductCategoryUpdateOneWithoutProductNestedInput
    ProductOption?: ProductOptionUpdateManyWithoutProductNestedInput
    tasks?: tasksUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutTask_templatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    canBuy?: BoolFieldUpdateOperationsInput | boolean
    canHire?: BoolFieldUpdateOperationsInput | boolean
    hasRangePrice?: BoolFieldUpdateOperationsInput | boolean
    hasUnitPrice?: BoolFieldUpdateOperationsInput | boolean
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    unitType?: NullableStringFieldUpdateOperationsInput | string | null
    EventItem?: EventItemUncheckedUpdateManyWithoutProductNestedInput
    OrderItem?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    ProductOption?: ProductOptionUncheckedUpdateManyWithoutProductNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutProductNestedInput
  }

  export type tasksUpsertWithWhereUniqueWithoutTask_templatesInput = {
    where: tasksWhereUniqueInput
    update: XOR<tasksUpdateWithoutTask_templatesInput, tasksUncheckedUpdateWithoutTask_templatesInput>
    create: XOR<tasksCreateWithoutTask_templatesInput, tasksUncheckedCreateWithoutTask_templatesInput>
  }

  export type tasksUpdateWithWhereUniqueWithoutTask_templatesInput = {
    where: tasksWhereUniqueInput
    data: XOR<tasksUpdateWithoutTask_templatesInput, tasksUncheckedUpdateWithoutTask_templatesInput>
  }

  export type tasksUpdateManyWithWhereWithoutTask_templatesInput = {
    where: tasksScalarWhereInput
    data: XOR<tasksUpdateManyMutationInput, tasksUncheckedUpdateManyWithoutTask_templatesInput>
  }

  export type task_dependenciesCreateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput = {
    id: string
    createdAt?: Date | string
    tasks_task_dependencies_taskIdTotasks: tasksCreateNestedOneWithoutTask_dependencies_task_dependencies_taskIdTotasksInput
  }

  export type task_dependenciesUncheckedCreateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput = {
    id: string
    taskId: string
    createdAt?: Date | string
  }

  export type task_dependenciesCreateOrConnectWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput = {
    where: task_dependenciesWhereUniqueInput
    create: XOR<task_dependenciesCreateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput, task_dependenciesUncheckedCreateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput>
  }

  export type task_dependenciesCreateManyTasks_task_dependencies_dependsOnTaskIdTotasksInputEnvelope = {
    data: task_dependenciesCreateManyTasks_task_dependencies_dependsOnTaskIdTotasksInput | task_dependenciesCreateManyTasks_task_dependencies_dependsOnTaskIdTotasksInput[]
    skipDuplicates?: boolean
  }

  export type task_dependenciesCreateWithoutTasks_task_dependencies_taskIdTotasksInput = {
    id: string
    createdAt?: Date | string
    tasks_task_dependencies_dependsOnTaskIdTotasks: tasksCreateNestedOneWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksInput
  }

  export type task_dependenciesUncheckedCreateWithoutTasks_task_dependencies_taskIdTotasksInput = {
    id: string
    dependsOnTaskId: string
    createdAt?: Date | string
  }

  export type task_dependenciesCreateOrConnectWithoutTasks_task_dependencies_taskIdTotasksInput = {
    where: task_dependenciesWhereUniqueInput
    create: XOR<task_dependenciesCreateWithoutTasks_task_dependencies_taskIdTotasksInput, task_dependenciesUncheckedCreateWithoutTasks_task_dependencies_taskIdTotasksInput>
  }

  export type task_dependenciesCreateManyTasks_task_dependencies_taskIdTotasksInputEnvelope = {
    data: task_dependenciesCreateManyTasks_task_dependencies_taskIdTotasksInput | task_dependenciesCreateManyTasks_task_dependencies_taskIdTotasksInput[]
    skipDuplicates?: boolean
  }

  export type UserCreateWithoutTasksInput = {
    id: string
    email: string
    firstName: string
    lastName: string
    password: string
    role?: string
    department?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    user_roles?: user_rolesCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutTasksInput = {
    id: string
    email: string
    firstName: string
    lastName: string
    password: string
    role?: string
    department?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    user_roles?: user_rolesUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutTasksInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutTasksInput, UserUncheckedCreateWithoutTasksInput>
  }

  export type EventCreateWithoutTasksInput = {
    id: string
    title: string
    description?: string | null
    location: string
    startDate: Date | string
    endDate?: Date | string | null
    status?: string
    staffNotes?: string | null
    assignedStaffId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    customerNotes?: string | null
    depositAmount?: number | null
    depositPaid?: boolean
    endTime?: string | null
    finalPaymentPaid?: boolean
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    stage?: string
    startTime: string
    totalAmount?: number | null
    Customer?: CustomerCreateNestedOneWithoutEventInput
    EventItem?: EventItemCreateNestedManyWithoutEventInput
    EventStatusHistory?: EventStatusHistoryCreateNestedManyWithoutEventInput
  }

  export type EventUncheckedCreateWithoutTasksInput = {
    id: string
    title: string
    description?: string | null
    location: string
    startDate: Date | string
    endDate?: Date | string | null
    customerId?: string | null
    status?: string
    staffNotes?: string | null
    assignedStaffId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    customerNotes?: string | null
    depositAmount?: number | null
    depositPaid?: boolean
    endTime?: string | null
    finalPaymentPaid?: boolean
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    stage?: string
    startTime: string
    totalAmount?: number | null
    EventItem?: EventItemUncheckedCreateNestedManyWithoutEventInput
    EventStatusHistory?: EventStatusHistoryUncheckedCreateNestedManyWithoutEventInput
  }

  export type EventCreateOrConnectWithoutTasksInput = {
    where: EventWhereUniqueInput
    create: XOR<EventCreateWithoutTasksInput, EventUncheckedCreateWithoutTasksInput>
  }

  export type OrderCreateWithoutTasksInput = {
    id: string
    totalAmount: number
    status?: string
    createdAt?: Date | string
    updatedAt: Date | string
    assignedStaffId?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: string | null
    deliveredAt?: Date | string | null
    discountAmount?: number | null
    finalAmount: number
    orderNumber: string
    paymentStatus?: string
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    shippedAt?: Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: number | null
    staffNotes?: string | null
    stage?: string
    taxAmount?: number | null
    Customer: CustomerCreateNestedOneWithoutOrderInput
    OrderItem?: OrderItemCreateNestedManyWithoutOrderInput
    OrderStatusHistory?: OrderStatusHistoryCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutTasksInput = {
    id: string
    customerId: string
    totalAmount: number
    status?: string
    createdAt?: Date | string
    updatedAt: Date | string
    assignedStaffId?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: string | null
    deliveredAt?: Date | string | null
    discountAmount?: number | null
    finalAmount: number
    orderNumber: string
    paymentStatus?: string
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    shippedAt?: Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: number | null
    staffNotes?: string | null
    stage?: string
    taxAmount?: number | null
    OrderItem?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
    OrderStatusHistory?: OrderStatusHistoryUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutTasksInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutTasksInput, OrderUncheckedCreateWithoutTasksInput>
  }

  export type ProductCreateWithoutTasksInput = {
    id: string
    name: string
    description?: string | null
    price: number
    imageUrl?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    canBuy?: boolean
    canHire?: boolean
    hasRangePrice?: boolean
    hasUnitPrice?: boolean
    maxPrice?: number | null
    minPrice?: number | null
    minQuantity?: number | null
    unitPrice?: number | null
    unitType?: string | null
    EventItem?: EventItemCreateNestedManyWithoutProductInput
    OrderItem?: OrderItemCreateNestedManyWithoutProductInput
    ProductCategory?: ProductCategoryCreateNestedOneWithoutProductInput
    ProductOption?: ProductOptionCreateNestedManyWithoutProductInput
    task_templates?: task_templatesCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutTasksInput = {
    id: string
    name: string
    description?: string | null
    price: number
    imageUrl?: string | null
    active?: boolean
    categoryId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    canBuy?: boolean
    canHire?: boolean
    hasRangePrice?: boolean
    hasUnitPrice?: boolean
    maxPrice?: number | null
    minPrice?: number | null
    minQuantity?: number | null
    unitPrice?: number | null
    unitType?: string | null
    EventItem?: EventItemUncheckedCreateNestedManyWithoutProductInput
    OrderItem?: OrderItemUncheckedCreateNestedManyWithoutProductInput
    ProductOption?: ProductOptionUncheckedCreateNestedManyWithoutProductInput
    task_templates?: task_templatesUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutTasksInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutTasksInput, ProductUncheckedCreateWithoutTasksInput>
  }

  export type task_templatesCreateWithoutTasksInput = {
    id: string
    name: string
    description?: string | null
    estimatedDuration: number
    leadTimeHours?: number
    sequenceOrder?: number
    requiredRole?: string | null
    triggerCondition: $Enums.TaskTriggerCondition
    isMandatory?: boolean
    requiresCompletionBeforeNext?: boolean
    autoAssignToRole?: string | null
    notes?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    category?: string | null
    Product: ProductCreateNestedOneWithoutTask_templatesInput
  }

  export type task_templatesUncheckedCreateWithoutTasksInput = {
    id: string
    productId: string
    name: string
    description?: string | null
    estimatedDuration: number
    leadTimeHours?: number
    sequenceOrder?: number
    requiredRole?: string | null
    triggerCondition: $Enums.TaskTriggerCondition
    isMandatory?: boolean
    requiresCompletionBeforeNext?: boolean
    autoAssignToRole?: string | null
    notes?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    category?: string | null
  }

  export type task_templatesCreateOrConnectWithoutTasksInput = {
    where: task_templatesWhereUniqueInput
    create: XOR<task_templatesCreateWithoutTasksInput, task_templatesUncheckedCreateWithoutTasksInput>
  }

  export type task_dependenciesUpsertWithWhereUniqueWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput = {
    where: task_dependenciesWhereUniqueInput
    update: XOR<task_dependenciesUpdateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput, task_dependenciesUncheckedUpdateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput>
    create: XOR<task_dependenciesCreateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput, task_dependenciesUncheckedCreateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput>
  }

  export type task_dependenciesUpdateWithWhereUniqueWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput = {
    where: task_dependenciesWhereUniqueInput
    data: XOR<task_dependenciesUpdateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput, task_dependenciesUncheckedUpdateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput>
  }

  export type task_dependenciesUpdateManyWithWhereWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput = {
    where: task_dependenciesScalarWhereInput
    data: XOR<task_dependenciesUpdateManyMutationInput, task_dependenciesUncheckedUpdateManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput>
  }

  export type task_dependenciesScalarWhereInput = {
    AND?: task_dependenciesScalarWhereInput | task_dependenciesScalarWhereInput[]
    OR?: task_dependenciesScalarWhereInput[]
    NOT?: task_dependenciesScalarWhereInput | task_dependenciesScalarWhereInput[]
    id?: StringFilter<"task_dependencies"> | string
    taskId?: StringFilter<"task_dependencies"> | string
    dependsOnTaskId?: StringFilter<"task_dependencies"> | string
    createdAt?: DateTimeFilter<"task_dependencies"> | Date | string
  }

  export type task_dependenciesUpsertWithWhereUniqueWithoutTasks_task_dependencies_taskIdTotasksInput = {
    where: task_dependenciesWhereUniqueInput
    update: XOR<task_dependenciesUpdateWithoutTasks_task_dependencies_taskIdTotasksInput, task_dependenciesUncheckedUpdateWithoutTasks_task_dependencies_taskIdTotasksInput>
    create: XOR<task_dependenciesCreateWithoutTasks_task_dependencies_taskIdTotasksInput, task_dependenciesUncheckedCreateWithoutTasks_task_dependencies_taskIdTotasksInput>
  }

  export type task_dependenciesUpdateWithWhereUniqueWithoutTasks_task_dependencies_taskIdTotasksInput = {
    where: task_dependenciesWhereUniqueInput
    data: XOR<task_dependenciesUpdateWithoutTasks_task_dependencies_taskIdTotasksInput, task_dependenciesUncheckedUpdateWithoutTasks_task_dependencies_taskIdTotasksInput>
  }

  export type task_dependenciesUpdateManyWithWhereWithoutTasks_task_dependencies_taskIdTotasksInput = {
    where: task_dependenciesScalarWhereInput
    data: XOR<task_dependenciesUpdateManyMutationInput, task_dependenciesUncheckedUpdateManyWithoutTasks_task_dependencies_taskIdTotasksInput>
  }

  export type UserUpsertWithoutTasksInput = {
    update: XOR<UserUpdateWithoutTasksInput, UserUncheckedUpdateWithoutTasksInput>
    create: XOR<UserCreateWithoutTasksInput, UserUncheckedCreateWithoutTasksInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutTasksInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutTasksInput, UserUncheckedUpdateWithoutTasksInput>
  }

  export type UserUpdateWithoutTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_roles?: user_rolesUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    user_roles?: user_rolesUncheckedUpdateManyWithoutUserNestedInput
  }

  export type EventUpsertWithoutTasksInput = {
    update: XOR<EventUpdateWithoutTasksInput, EventUncheckedUpdateWithoutTasksInput>
    create: XOR<EventCreateWithoutTasksInput, EventUncheckedCreateWithoutTasksInput>
    where?: EventWhereInput
  }

  export type EventUpdateToOneWithWhereWithoutTasksInput = {
    where?: EventWhereInput
    data: XOR<EventUpdateWithoutTasksInput, EventUncheckedUpdateWithoutTasksInput>
  }

  export type EventUpdateWithoutTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    depositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    depositPaid?: BoolFieldUpdateOperationsInput | boolean
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    finalPaymentPaid?: BoolFieldUpdateOperationsInput | boolean
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    startTime?: StringFieldUpdateOperationsInput | string
    totalAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    Customer?: CustomerUpdateOneWithoutEventNestedInput
    EventItem?: EventItemUpdateManyWithoutEventNestedInput
    EventStatusHistory?: EventStatusHistoryUpdateManyWithoutEventNestedInput
  }

  export type EventUncheckedUpdateWithoutTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    depositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    depositPaid?: BoolFieldUpdateOperationsInput | boolean
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    finalPaymentPaid?: BoolFieldUpdateOperationsInput | boolean
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    startTime?: StringFieldUpdateOperationsInput | string
    totalAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    EventItem?: EventItemUncheckedUpdateManyWithoutEventNestedInput
    EventStatusHistory?: EventStatusHistoryUncheckedUpdateManyWithoutEventNestedInput
  }

  export type OrderUpsertWithoutTasksInput = {
    update: XOR<OrderUpdateWithoutTasksInput, OrderUncheckedUpdateWithoutTasksInput>
    create: XOR<OrderCreateWithoutTasksInput, OrderUncheckedCreateWithoutTasksInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutTasksInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutTasksInput, OrderUncheckedUpdateWithoutTasksInput>
  }

  export type OrderUpdateWithoutTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalAmount?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discountAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    finalAmount?: FloatFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    taxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    Customer?: CustomerUpdateOneRequiredWithoutOrderNestedInput
    OrderItem?: OrderItemUpdateManyWithoutOrderNestedInput
    OrderStatusHistory?: OrderStatusHistoryUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    totalAmount?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discountAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    finalAmount?: FloatFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    taxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    OrderItem?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
    OrderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type ProductUpsertWithoutTasksInput = {
    update: XOR<ProductUpdateWithoutTasksInput, ProductUncheckedUpdateWithoutTasksInput>
    create: XOR<ProductCreateWithoutTasksInput, ProductUncheckedCreateWithoutTasksInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutTasksInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutTasksInput, ProductUncheckedUpdateWithoutTasksInput>
  }

  export type ProductUpdateWithoutTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    canBuy?: BoolFieldUpdateOperationsInput | boolean
    canHire?: BoolFieldUpdateOperationsInput | boolean
    hasRangePrice?: BoolFieldUpdateOperationsInput | boolean
    hasUnitPrice?: BoolFieldUpdateOperationsInput | boolean
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    unitType?: NullableStringFieldUpdateOperationsInput | string | null
    EventItem?: EventItemUpdateManyWithoutProductNestedInput
    OrderItem?: OrderItemUpdateManyWithoutProductNestedInput
    ProductCategory?: ProductCategoryUpdateOneWithoutProductNestedInput
    ProductOption?: ProductOptionUpdateManyWithoutProductNestedInput
    task_templates?: task_templatesUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    categoryId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    canBuy?: BoolFieldUpdateOperationsInput | boolean
    canHire?: BoolFieldUpdateOperationsInput | boolean
    hasRangePrice?: BoolFieldUpdateOperationsInput | boolean
    hasUnitPrice?: BoolFieldUpdateOperationsInput | boolean
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    unitType?: NullableStringFieldUpdateOperationsInput | string | null
    EventItem?: EventItemUncheckedUpdateManyWithoutProductNestedInput
    OrderItem?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    ProductOption?: ProductOptionUncheckedUpdateManyWithoutProductNestedInput
    task_templates?: task_templatesUncheckedUpdateManyWithoutProductNestedInput
  }

  export type task_templatesUpsertWithoutTasksInput = {
    update: XOR<task_templatesUpdateWithoutTasksInput, task_templatesUncheckedUpdateWithoutTasksInput>
    create: XOR<task_templatesCreateWithoutTasksInput, task_templatesUncheckedCreateWithoutTasksInput>
    where?: task_templatesWhereInput
  }

  export type task_templatesUpdateToOneWithWhereWithoutTasksInput = {
    where?: task_templatesWhereInput
    data: XOR<task_templatesUpdateWithoutTasksInput, task_templatesUncheckedUpdateWithoutTasksInput>
  }

  export type task_templatesUpdateWithoutTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDuration?: IntFieldUpdateOperationsInput | number
    leadTimeHours?: IntFieldUpdateOperationsInput | number
    sequenceOrder?: IntFieldUpdateOperationsInput | number
    requiredRole?: NullableStringFieldUpdateOperationsInput | string | null
    triggerCondition?: EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    requiresCompletionBeforeNext?: BoolFieldUpdateOperationsInput | boolean
    autoAssignToRole?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    Product?: ProductUpdateOneRequiredWithoutTask_templatesNestedInput
  }

  export type task_templatesUncheckedUpdateWithoutTasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDuration?: IntFieldUpdateOperationsInput | number
    leadTimeHours?: IntFieldUpdateOperationsInput | number
    sequenceOrder?: IntFieldUpdateOperationsInput | number
    requiredRole?: NullableStringFieldUpdateOperationsInput | string | null
    triggerCondition?: EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    requiresCompletionBeforeNext?: BoolFieldUpdateOperationsInput | boolean
    autoAssignToRole?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateWithoutUser_rolesInput = {
    id: string
    email: string
    firstName: string
    lastName: string
    password: string
    role?: string
    department?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    tasks?: tasksCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUser_rolesInput = {
    id: string
    email: string
    firstName: string
    lastName: string
    password: string
    role?: string
    department?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    tasks?: tasksUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUser_rolesInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUser_rolesInput, UserUncheckedCreateWithoutUser_rolesInput>
  }

  export type UserUpsertWithoutUser_rolesInput = {
    update: XOR<UserUpdateWithoutUser_rolesInput, UserUncheckedUpdateWithoutUser_rolesInput>
    create: XOR<UserCreateWithoutUser_rolesInput, UserUncheckedCreateWithoutUser_rolesInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUser_rolesInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUser_rolesInput, UserUncheckedUpdateWithoutUser_rolesInput>
  }

  export type UserUpdateWithoutUser_rolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tasks?: tasksUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUser_rolesInput = {
    id?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tasks?: tasksUncheckedUpdateManyWithoutUserNestedInput
  }

  export type EventCreateManyCustomerInput = {
    id: string
    title: string
    description?: string | null
    location: string
    startDate: Date | string
    endDate?: Date | string | null
    status?: string
    staffNotes?: string | null
    assignedStaffId?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
    customerNotes?: string | null
    depositAmount?: number | null
    depositPaid?: boolean
    endTime?: string | null
    finalPaymentPaid?: boolean
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    stage?: string
    startTime: string
    totalAmount?: number | null
  }

  export type OrderCreateManyCustomerInput = {
    id: string
    totalAmount: number
    status?: string
    createdAt?: Date | string
    updatedAt: Date | string
    assignedStaffId?: string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: string | null
    deliveredAt?: Date | string | null
    discountAmount?: number | null
    finalAmount: number
    orderNumber: string
    paymentStatus?: string
    reviewedAt?: Date | string | null
    reviewedBy?: string | null
    shippedAt?: Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: number | null
    staffNotes?: string | null
    stage?: string
    taxAmount?: number | null
  }

  export type EventUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    depositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    depositPaid?: BoolFieldUpdateOperationsInput | boolean
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    finalPaymentPaid?: BoolFieldUpdateOperationsInput | boolean
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    startTime?: StringFieldUpdateOperationsInput | string
    totalAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    EventItem?: EventItemUpdateManyWithoutEventNestedInput
    EventStatusHistory?: EventStatusHistoryUpdateManyWithoutEventNestedInput
    tasks?: tasksUpdateManyWithoutEventNestedInput
  }

  export type EventUncheckedUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    depositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    depositPaid?: BoolFieldUpdateOperationsInput | boolean
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    finalPaymentPaid?: BoolFieldUpdateOperationsInput | boolean
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    startTime?: StringFieldUpdateOperationsInput | string
    totalAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    EventItem?: EventItemUncheckedUpdateManyWithoutEventNestedInput
    EventStatusHistory?: EventStatusHistoryUncheckedUpdateManyWithoutEventNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutEventNestedInput
  }

  export type EventUncheckedUpdateManyWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    location?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    status?: StringFieldUpdateOperationsInput | string
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    depositAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    depositPaid?: BoolFieldUpdateOperationsInput | boolean
    endTime?: NullableStringFieldUpdateOperationsInput | string | null
    finalPaymentPaid?: BoolFieldUpdateOperationsInput | boolean
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    startTime?: StringFieldUpdateOperationsInput | string
    totalAmount?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type OrderUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalAmount?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discountAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    finalAmount?: FloatFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    taxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    OrderItem?: OrderItemUpdateManyWithoutOrderNestedInput
    OrderStatusHistory?: OrderStatusHistoryUpdateManyWithoutOrderNestedInput
    tasks?: tasksUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalAmount?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discountAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    finalAmount?: FloatFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    taxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    OrderItem?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
    OrderStatusHistory?: OrderStatusHistoryUncheckedUpdateManyWithoutOrderNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    totalAmount?: FloatFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    assignedStaffId?: NullableStringFieldUpdateOperationsInput | string | null
    billingAddress?: NullableJsonNullValueInput | InputJsonValue
    customerNotes?: NullableStringFieldUpdateOperationsInput | string | null
    deliveredAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    discountAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    finalAmount?: FloatFieldUpdateOperationsInput | number
    orderNumber?: StringFieldUpdateOperationsInput | string
    paymentStatus?: StringFieldUpdateOperationsInput | string
    reviewedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reviewedBy?: NullableStringFieldUpdateOperationsInput | string | null
    shippedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    shippingAddress?: NullableJsonNullValueInput | InputJsonValue
    shippingAmount?: NullableFloatFieldUpdateOperationsInput | number | null
    staffNotes?: NullableStringFieldUpdateOperationsInput | string | null
    stage?: StringFieldUpdateOperationsInput | string
    taxAmount?: NullableFloatFieldUpdateOperationsInput | number | null
  }

  export type EventItemCreateManyEventInput = {
    id: string
    productId: string
    quantity?: number
    unitPrice?: number | null
    totalPrice?: number | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type EventStatusHistoryCreateManyEventInput = {
    id: string
    fromStatus?: string | null
    toStatus: string
    fromStage?: string | null
    toStage: string
    notes?: string | null
    changedBy?: string | null
    changedAt?: Date | string
  }

  export type tasksCreateManyEventInput = {
    id: string
    templateId?: string | null
    orderId?: string | null
    productId?: string | null
    assignedUserId?: string | null
    name: string
    description?: string | null
    category?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    dueDate?: Date | string | null
    startTime?: Date | string | null
    endTime?: Date | string | null
    estimatedDuration?: number | null
    actualDuration?: number | null
    actualStartTime?: Date | string | null
    actualEndTime?: Date | string | null
    completionNotes?: string | null
    requiresCustomerApproval?: boolean
    customerApprovedAt?: Date | string | null
    blockedReason?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type EventItemUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Product?: ProductUpdateOneRequiredWithoutEventItemNestedInput
    EventItemOption?: EventItemOptionUpdateManyWithoutEventItemNestedInput
  }

  export type EventItemUncheckedUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventItemOption?: EventItemOptionUncheckedUpdateManyWithoutEventItemNestedInput
  }

  export type EventItemUncheckedUpdateManyWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventStatusHistoryUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    fromStatus?: NullableStringFieldUpdateOperationsInput | string | null
    toStatus?: StringFieldUpdateOperationsInput | string
    fromStage?: NullableStringFieldUpdateOperationsInput | string | null
    toStage?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventStatusHistoryUncheckedUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    fromStatus?: NullableStringFieldUpdateOperationsInput | string | null
    toStatus?: StringFieldUpdateOperationsInput | string
    fromStage?: NullableStringFieldUpdateOperationsInput | string | null
    toStage?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventStatusHistoryUncheckedUpdateManyWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    fromStatus?: NullableStringFieldUpdateOperationsInput | string | null
    toStatus?: StringFieldUpdateOperationsInput | string
    fromStage?: NullableStringFieldUpdateOperationsInput | string | null
    toStage?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tasksUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesUpdateManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksNestedInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesUpdateManyWithoutTasks_task_dependencies_taskIdTotasksNestedInput
    User?: UserUpdateOneWithoutTasksNestedInput
    Order?: OrderUpdateOneWithoutTasksNestedInput
    Product?: ProductUpdateOneWithoutTasksNestedInput
    task_templates?: task_templatesUpdateOneWithoutTasksNestedInput
  }

  export type tasksUncheckedUpdateWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesUncheckedUpdateManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksNestedInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesUncheckedUpdateManyWithoutTasks_task_dependencies_taskIdTotasksNestedInput
  }

  export type tasksUncheckedUpdateManyWithoutEventInput = {
    id?: StringFieldUpdateOperationsInput | string
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemCreateManyOrderInput = {
    id: string
    productId: string
    quantity?: number
    unitPrice: number
    totalPrice: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type OrderStatusHistoryCreateManyOrderInput = {
    id: string
    fromStatus?: string | null
    toStatus: string
    fromStage?: string | null
    toStage: string
    notes?: string | null
    changedBy?: string | null
    changedAt?: Date | string
  }

  export type tasksCreateManyOrderInput = {
    id: string
    templateId?: string | null
    eventId?: string | null
    productId?: string | null
    assignedUserId?: string | null
    name: string
    description?: string | null
    category?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    dueDate?: Date | string | null
    startTime?: Date | string | null
    endTime?: Date | string | null
    estimatedDuration?: number | null
    actualDuration?: number | null
    actualStartTime?: Date | string | null
    actualEndTime?: Date | string | null
    completionNotes?: string | null
    requiresCustomerApproval?: boolean
    customerApprovedAt?: Date | string | null
    blockedReason?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type OrderItemUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Product?: ProductUpdateOneRequiredWithoutOrderItemNestedInput
    OrderItemOption?: OrderItemOptionUpdateManyWithoutOrderItemNestedInput
  }

  export type OrderItemUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    OrderItemOption?: OrderItemOptionUncheckedUpdateManyWithoutOrderItemNestedInput
  }

  export type OrderItemUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderStatusHistoryUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    fromStatus?: NullableStringFieldUpdateOperationsInput | string | null
    toStatus?: StringFieldUpdateOperationsInput | string
    fromStage?: NullableStringFieldUpdateOperationsInput | string | null
    toStage?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderStatusHistoryUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    fromStatus?: NullableStringFieldUpdateOperationsInput | string | null
    toStatus?: StringFieldUpdateOperationsInput | string
    fromStage?: NullableStringFieldUpdateOperationsInput | string | null
    toStage?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderStatusHistoryUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    fromStatus?: NullableStringFieldUpdateOperationsInput | string | null
    toStatus?: StringFieldUpdateOperationsInput | string
    fromStage?: NullableStringFieldUpdateOperationsInput | string | null
    toStage?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    changedBy?: NullableStringFieldUpdateOperationsInput | string | null
    changedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tasksUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesUpdateManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksNestedInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesUpdateManyWithoutTasks_task_dependencies_taskIdTotasksNestedInput
    User?: UserUpdateOneWithoutTasksNestedInput
    Event?: EventUpdateOneWithoutTasksNestedInput
    Product?: ProductUpdateOneWithoutTasksNestedInput
    task_templates?: task_templatesUpdateOneWithoutTasksNestedInput
  }

  export type tasksUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesUncheckedUpdateManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksNestedInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesUncheckedUpdateManyWithoutTasks_task_dependencies_taskIdTotasksNestedInput
  }

  export type tasksUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventItemCreateManyProductInput = {
    id: string
    eventId: string
    quantity?: number
    unitPrice?: number | null
    totalPrice?: number | null
    notes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type OrderItemCreateManyProductInput = {
    id: string
    orderId: string
    quantity?: number
    unitPrice: number
    totalPrice: number
    notes?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type ProductOptionCreateManyProductInput = {
    id: string
    name: string
    type: string
    required?: boolean
    sortOrder?: number
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type task_templatesCreateManyProductInput = {
    id: string
    name: string
    description?: string | null
    estimatedDuration: number
    leadTimeHours?: number
    sequenceOrder?: number
    requiredRole?: string | null
    triggerCondition: $Enums.TaskTriggerCondition
    isMandatory?: boolean
    requiresCompletionBeforeNext?: boolean
    autoAssignToRole?: string | null
    notes?: string | null
    isActive?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    category?: string | null
  }

  export type tasksCreateManyProductInput = {
    id: string
    templateId?: string | null
    eventId?: string | null
    orderId?: string | null
    assignedUserId?: string | null
    name: string
    description?: string | null
    category?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    dueDate?: Date | string | null
    startTime?: Date | string | null
    endTime?: Date | string | null
    estimatedDuration?: number | null
    actualDuration?: number | null
    actualStartTime?: Date | string | null
    actualEndTime?: Date | string | null
    completionNotes?: string | null
    requiresCustomerApproval?: boolean
    customerApprovedAt?: Date | string | null
    blockedReason?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type EventItemUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Event?: EventUpdateOneRequiredWithoutEventItemNestedInput
    EventItemOption?: EventItemOptionUpdateManyWithoutEventItemNestedInput
  }

  export type EventItemUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventItemOption?: EventItemOptionUncheckedUpdateManyWithoutEventItemNestedInput
  }

  export type EventItemUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    totalPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    Order?: OrderUpdateOneRequiredWithoutOrderItemNestedInput
    OrderItemOption?: OrderItemOptionUpdateManyWithoutOrderItemNestedInput
  }

  export type OrderItemUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    OrderItemOption?: OrderItemOptionUncheckedUpdateManyWithoutOrderItemNestedInput
  }

  export type OrderItemUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    totalPrice?: FloatFieldUpdateOperationsInput | number
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductOptionUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    required?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventItemOption?: EventItemOptionUpdateManyWithoutProductOptionNestedInput
    OrderItemOption?: OrderItemOptionUpdateManyWithoutProductOptionNestedInput
    ProductOptionValue?: ProductOptionValueUpdateManyWithoutProductOptionNestedInput
  }

  export type ProductOptionUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    required?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventItemOption?: EventItemOptionUncheckedUpdateManyWithoutProductOptionNestedInput
    OrderItemOption?: OrderItemOptionUncheckedUpdateManyWithoutProductOptionNestedInput
    ProductOptionValue?: ProductOptionValueUncheckedUpdateManyWithoutProductOptionNestedInput
  }

  export type ProductOptionUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    required?: BoolFieldUpdateOperationsInput | boolean
    sortOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type task_templatesUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDuration?: IntFieldUpdateOperationsInput | number
    leadTimeHours?: IntFieldUpdateOperationsInput | number
    sequenceOrder?: IntFieldUpdateOperationsInput | number
    requiredRole?: NullableStringFieldUpdateOperationsInput | string | null
    triggerCondition?: EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    requiresCompletionBeforeNext?: BoolFieldUpdateOperationsInput | boolean
    autoAssignToRole?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    tasks?: tasksUpdateManyWithoutTask_templatesNestedInput
  }

  export type task_templatesUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDuration?: IntFieldUpdateOperationsInput | number
    leadTimeHours?: IntFieldUpdateOperationsInput | number
    sequenceOrder?: IntFieldUpdateOperationsInput | number
    requiredRole?: NullableStringFieldUpdateOperationsInput | string | null
    triggerCondition?: EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    requiresCompletionBeforeNext?: BoolFieldUpdateOperationsInput | boolean
    autoAssignToRole?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    tasks?: tasksUncheckedUpdateManyWithoutTask_templatesNestedInput
  }

  export type task_templatesUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    estimatedDuration?: IntFieldUpdateOperationsInput | number
    leadTimeHours?: IntFieldUpdateOperationsInput | number
    sequenceOrder?: IntFieldUpdateOperationsInput | number
    requiredRole?: NullableStringFieldUpdateOperationsInput | string | null
    triggerCondition?: EnumTaskTriggerConditionFieldUpdateOperationsInput | $Enums.TaskTriggerCondition
    isMandatory?: BoolFieldUpdateOperationsInput | boolean
    requiresCompletionBeforeNext?: BoolFieldUpdateOperationsInput | boolean
    autoAssignToRole?: NullableStringFieldUpdateOperationsInput | string | null
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    isActive?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tasksUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesUpdateManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksNestedInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesUpdateManyWithoutTasks_task_dependencies_taskIdTotasksNestedInput
    User?: UserUpdateOneWithoutTasksNestedInput
    Event?: EventUpdateOneWithoutTasksNestedInput
    Order?: OrderUpdateOneWithoutTasksNestedInput
    task_templates?: task_templatesUpdateOneWithoutTasksNestedInput
  }

  export type tasksUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesUncheckedUpdateManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksNestedInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesUncheckedUpdateManyWithoutTasks_task_dependencies_taskIdTotasksNestedInput
  }

  export type tasksUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductCreateManyProductCategoryInput = {
    id: string
    name: string
    description?: string | null
    price: number
    imageUrl?: string | null
    active?: boolean
    createdAt?: Date | string
    updatedAt: Date | string
    canBuy?: boolean
    canHire?: boolean
    hasRangePrice?: boolean
    hasUnitPrice?: boolean
    maxPrice?: number | null
    minPrice?: number | null
    minQuantity?: number | null
    unitPrice?: number | null
    unitType?: string | null
  }

  export type ProductUpdateWithoutProductCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    canBuy?: BoolFieldUpdateOperationsInput | boolean
    canHire?: BoolFieldUpdateOperationsInput | boolean
    hasRangePrice?: BoolFieldUpdateOperationsInput | boolean
    hasUnitPrice?: BoolFieldUpdateOperationsInput | boolean
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    unitType?: NullableStringFieldUpdateOperationsInput | string | null
    EventItem?: EventItemUpdateManyWithoutProductNestedInput
    OrderItem?: OrderItemUpdateManyWithoutProductNestedInput
    ProductOption?: ProductOptionUpdateManyWithoutProductNestedInput
    task_templates?: task_templatesUpdateManyWithoutProductNestedInput
    tasks?: tasksUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutProductCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    canBuy?: BoolFieldUpdateOperationsInput | boolean
    canHire?: BoolFieldUpdateOperationsInput | boolean
    hasRangePrice?: BoolFieldUpdateOperationsInput | boolean
    hasUnitPrice?: BoolFieldUpdateOperationsInput | boolean
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    unitType?: NullableStringFieldUpdateOperationsInput | string | null
    EventItem?: EventItemUncheckedUpdateManyWithoutProductNestedInput
    OrderItem?: OrderItemUncheckedUpdateManyWithoutProductNestedInput
    ProductOption?: ProductOptionUncheckedUpdateManyWithoutProductNestedInput
    task_templates?: task_templatesUncheckedUpdateManyWithoutProductNestedInput
    tasks?: tasksUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutProductCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    price?: FloatFieldUpdateOperationsInput | number
    imageUrl?: NullableStringFieldUpdateOperationsInput | string | null
    active?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    canBuy?: BoolFieldUpdateOperationsInput | boolean
    canHire?: BoolFieldUpdateOperationsInput | boolean
    hasRangePrice?: BoolFieldUpdateOperationsInput | boolean
    hasUnitPrice?: BoolFieldUpdateOperationsInput | boolean
    maxPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    minQuantity?: NullableIntFieldUpdateOperationsInput | number | null
    unitPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    unitType?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type EventItemOptionCreateManyEventItemInput = {
    id: string
    optionId: string
    optionName: string
    value: string
    label?: string | null
    priceAdjustment?: number
    createdAt?: Date | string
  }

  export type EventItemOptionUpdateWithoutEventItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    optionName?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ProductOption?: ProductOptionUpdateOneRequiredWithoutEventItemOptionNestedInput
  }

  export type EventItemOptionUncheckedUpdateWithoutEventItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    optionId?: StringFieldUpdateOperationsInput | string
    optionName?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventItemOptionUncheckedUpdateManyWithoutEventItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    optionId?: StringFieldUpdateOperationsInput | string
    optionName?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemOptionCreateManyOrderItemInput = {
    id: string
    optionId: string
    optionName: string
    value: string
    label?: string | null
    priceAdjustment?: number
    createdAt?: Date | string
  }

  export type OrderItemOptionUpdateWithoutOrderItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    optionName?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ProductOption?: ProductOptionUpdateOneRequiredWithoutOrderItemOptionNestedInput
  }

  export type OrderItemOptionUncheckedUpdateWithoutOrderItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    optionId?: StringFieldUpdateOperationsInput | string
    optionName?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemOptionUncheckedUpdateManyWithoutOrderItemInput = {
    id?: StringFieldUpdateOperationsInput | string
    optionId?: StringFieldUpdateOperationsInput | string
    optionName?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventItemOptionCreateManyProductOptionInput = {
    id: string
    eventItemId: string
    optionName: string
    value: string
    label?: string | null
    priceAdjustment?: number
    createdAt?: Date | string
  }

  export type OrderItemOptionCreateManyProductOptionInput = {
    id: string
    orderItemId: string
    optionName: string
    value: string
    label?: string | null
    priceAdjustment?: number
    createdAt?: Date | string
  }

  export type ProductOptionValueCreateManyProductOptionInput = {
    id: string
    value: string
    label?: string | null
    priceAdjustment?: number | null
    sortOrder?: number
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type EventItemOptionUpdateWithoutProductOptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    optionName?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    EventItem?: EventItemUpdateOneRequiredWithoutEventItemOptionNestedInput
  }

  export type EventItemOptionUncheckedUpdateWithoutProductOptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventItemId?: StringFieldUpdateOperationsInput | string
    optionName?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type EventItemOptionUncheckedUpdateManyWithoutProductOptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventItemId?: StringFieldUpdateOperationsInput | string
    optionName?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemOptionUpdateWithoutProductOptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    optionName?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    OrderItem?: OrderItemUpdateOneRequiredWithoutOrderItemOptionNestedInput
  }

  export type OrderItemOptionUncheckedUpdateWithoutProductOptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderItemId?: StringFieldUpdateOperationsInput | string
    optionName?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type OrderItemOptionUncheckedUpdateManyWithoutProductOptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderItemId?: StringFieldUpdateOperationsInput | string
    optionName?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: FloatFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductOptionValueUpdateWithoutProductOptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: NullableFloatFieldUpdateOperationsInput | number | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductOptionValueUncheckedUpdateWithoutProductOptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: NullableFloatFieldUpdateOperationsInput | number | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductOptionValueUncheckedUpdateManyWithoutProductOptionInput = {
    id?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    label?: NullableStringFieldUpdateOperationsInput | string | null
    priceAdjustment?: NullableFloatFieldUpdateOperationsInput | number | null
    sortOrder?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tasksCreateManyUserInput = {
    id: string
    templateId?: string | null
    eventId?: string | null
    orderId?: string | null
    productId?: string | null
    name: string
    description?: string | null
    category?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    dueDate?: Date | string | null
    startTime?: Date | string | null
    endTime?: Date | string | null
    estimatedDuration?: number | null
    actualDuration?: number | null
    actualStartTime?: Date | string | null
    actualEndTime?: Date | string | null
    completionNotes?: string | null
    requiresCustomerApproval?: boolean
    customerApprovedAt?: Date | string | null
    blockedReason?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type user_rolesCreateManyUserInput = {
    id: string
    role: string
    department?: string | null
    isPrimary?: boolean
    createdAt?: Date | string
  }

  export type tasksUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesUpdateManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksNestedInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesUpdateManyWithoutTasks_task_dependencies_taskIdTotasksNestedInput
    Event?: EventUpdateOneWithoutTasksNestedInput
    Order?: OrderUpdateOneWithoutTasksNestedInput
    Product?: ProductUpdateOneWithoutTasksNestedInput
    task_templates?: task_templatesUpdateOneWithoutTasksNestedInput
  }

  export type tasksUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesUncheckedUpdateManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksNestedInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesUncheckedUpdateManyWithoutTasks_task_dependencies_taskIdTotasksNestedInput
  }

  export type tasksUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    templateId?: NullableStringFieldUpdateOperationsInput | string | null
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_rolesUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_rolesUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type user_rolesUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    role?: StringFieldUpdateOperationsInput | string
    department?: NullableStringFieldUpdateOperationsInput | string | null
    isPrimary?: BoolFieldUpdateOperationsInput | boolean
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type tasksCreateManyTask_templatesInput = {
    id: string
    eventId?: string | null
    orderId?: string | null
    productId?: string | null
    assignedUserId?: string | null
    name: string
    description?: string | null
    category?: string | null
    status?: $Enums.TaskStatus
    priority?: $Enums.TaskPriority
    dueDate?: Date | string | null
    startTime?: Date | string | null
    endTime?: Date | string | null
    estimatedDuration?: number | null
    actualDuration?: number | null
    actualStartTime?: Date | string | null
    actualEndTime?: Date | string | null
    completionNotes?: string | null
    requiresCustomerApproval?: boolean
    customerApprovedAt?: Date | string | null
    blockedReason?: string | null
    createdAt?: Date | string
    updatedAt: Date | string
  }

  export type tasksUpdateWithoutTask_templatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesUpdateManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksNestedInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesUpdateManyWithoutTasks_task_dependencies_taskIdTotasksNestedInput
    User?: UserUpdateOneWithoutTasksNestedInput
    Event?: EventUpdateOneWithoutTasksNestedInput
    Order?: OrderUpdateOneWithoutTasksNestedInput
    Product?: ProductUpdateOneWithoutTasksNestedInput
  }

  export type tasksUncheckedUpdateWithoutTask_templatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    task_dependencies_task_dependencies_dependsOnTaskIdTotasks?: task_dependenciesUncheckedUpdateManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksNestedInput
    task_dependencies_task_dependencies_taskIdTotasks?: task_dependenciesUncheckedUpdateManyWithoutTasks_task_dependencies_taskIdTotasksNestedInput
  }

  export type tasksUncheckedUpdateManyWithoutTask_templatesInput = {
    id?: StringFieldUpdateOperationsInput | string
    eventId?: NullableStringFieldUpdateOperationsInput | string | null
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: NullableStringFieldUpdateOperationsInput | string | null
    assignedUserId?: NullableStringFieldUpdateOperationsInput | string | null
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumTaskStatusFieldUpdateOperationsInput | $Enums.TaskStatus
    priority?: EnumTaskPriorityFieldUpdateOperationsInput | $Enums.TaskPriority
    dueDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    startTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    endTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    estimatedDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualDuration?: NullableIntFieldUpdateOperationsInput | number | null
    actualStartTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    actualEndTime?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    completionNotes?: NullableStringFieldUpdateOperationsInput | string | null
    requiresCustomerApproval?: BoolFieldUpdateOperationsInput | boolean
    customerApprovedAt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    blockedReason?: NullableStringFieldUpdateOperationsInput | string | null
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type task_dependenciesCreateManyTasks_task_dependencies_dependsOnTaskIdTotasksInput = {
    id: string
    taskId: string
    createdAt?: Date | string
  }

  export type task_dependenciesCreateManyTasks_task_dependencies_taskIdTotasksInput = {
    id: string
    dependsOnTaskId: string
    createdAt?: Date | string
  }

  export type task_dependenciesUpdateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tasks_task_dependencies_taskIdTotasks?: tasksUpdateOneRequiredWithoutTask_dependencies_task_dependencies_taskIdTotasksNestedInput
  }

  export type task_dependenciesUncheckedUpdateWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    taskId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type task_dependenciesUncheckedUpdateManyWithoutTasks_task_dependencies_dependsOnTaskIdTotasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    taskId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type task_dependenciesUpdateWithoutTasks_task_dependencies_taskIdTotasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    tasks_task_dependencies_dependsOnTaskIdTotasks?: tasksUpdateOneRequiredWithoutTask_dependencies_task_dependencies_dependsOnTaskIdTotasksNestedInput
  }

  export type task_dependenciesUncheckedUpdateWithoutTasks_task_dependencies_taskIdTotasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    dependsOnTaskId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type task_dependenciesUncheckedUpdateManyWithoutTasks_task_dependencies_taskIdTotasksInput = {
    id?: StringFieldUpdateOperationsInput | string
    dependsOnTaskId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}