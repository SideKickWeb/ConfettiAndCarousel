const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["./B43mD2H3.js","./CQBR0ly3.js","./gnU0ypJ3.js","./BdCIxj-1.js"])))=>i.map(i=>d[i]);
import{an as _}from"./DPqVHIb4.js";import{i as E}from"./BdCIxj-1.js";const u=new E.PrismaClient;async function I(a,t){if(a.method==="GET")try{const{category:e,limit:s,offset:r}=a.query,o={};e&&(o.category=e);const n=await u.product.findMany({where:o,include:{images:{orderBy:{sortOrder:"asc"}}},skip:r?parseInt(r):0,take:s?parseInt(s):10,orderBy:{createdAt:"desc"}}),i=await u.product.count({where:o});return t.status(200).json({products:n,totalCount:i})}catch(e){return console.error("Error fetching products:",e),t.status(500).json({message:"Internal server error"})}else if(a.method==="POST"){const{authMiddleware:e}=await _(async()=>{const{authMiddleware:r}=await import("./B43mD2H3.js");return{authMiddleware:r}},__vite__mapDeps([0,1,2,3]),import.meta.url);if(!await e(a,t,!0))return;try{const{name:r,description:o,category:n,subcategory:i,purchasePrice:w,width:l,height:d,depth:p,weight:h,color:y,tags:m,images:c}=a.body,f=await u.product.create({data:{name:r,description:o,category:n,subcategory:i,purchasePrice:parseFloat(w),width:l?parseFloat(l):null,height:d?parseFloat(d):null,depth:p?parseFloat(p):null,weight:h?parseFloat(h):null,color:y,tags:Array.isArray(m)?m:[],images:{create:(c==null?void 0:c.map((P,g)=>({url:P.url,isPrimary:g===0,sortOrder:g})))||[]}},include:{images:!0}});return t.status(201).json(f)}catch(r){return console.error("Error creating product:",r),t.status(500).json({message:"Internal server error"})}}else return t.status(405).json({message:"Method not allowed"})}export{I as default};
